add_namespace = AC_event

# Notes: Maintenance Events
# Starts project
country_event = {
	id = AC_event.0
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.0 executed"
		complete_project = yes
		refresh_gui = yes
	}
}

# Ends project
country_event = {
	id = AC_event.1
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.1 executed"
		end_project = yes
		refresh_gui = yes
	}
}

country_event = {
	id = AC_event.3
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [ROOT.GetName]: AC_event.3 executed"
		var:ROOT.AC_nation_target = {
			country_event = { id = AC_event.10 }
		}
		refresh_gui = yes
	}
}

# AC Event Master Event
# Offers Investments to THIS from the Investor Nation FROM
country_event = {
	id = AC_event.10
	title = AC_event.1.t
	desc = AC_event.1.d
	picture = GFX_united_states_dollar
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_variable = { investor_cost = FROM.project_monetary_cost_effect }
			multiply_variable = { investor_cost = 0.1 }
		}
	}
	option = {
		name = AC_event.1.o1
		log = "[GetDateText]: [This.GetName]: AC_event.1.o1 executed"
		hidden_effect = {
			# Activates the Investment Project
			# ROOT is the target country or if you just don't scope it / FROM is the investor nation
			# Investor Nation Begins Project
			FROM = {
				start_project_two = yes
				clr_country_flag = this_investment_offer_pending@PREV
			}
			# Influence Section
			if = {
				limit = { NOT = { has_country_flag = influence_gained_@FROM } }
				if = { limit = { has_global_flag = GAME_RULE_gain_0_5_percent_invest }
					set_temp_variable = { percent_change = 0.50 }
				}
				else_if = { limit = { has_global_flag = GAME_RULE_gain_2_percent_invest }
					set_temp_variable = { percent_change = 2.0 }
				}
				else = {
					set_temp_variable = { percent_change = 1.0 }
				}
				set_temp_variable = { tag_index = FROM.id }
				set_temp_variable = { influence_target = THIS.id }
				change_influence_percentage = yes

				# Cool Down for the Influence Gain
				if = { limit = { has_global_flag = GAME_RULE_influence_cooldown_limits_14 }
					set_country_flag = { flag = influence_gained_@FROM value = 1 days = 14 }
					custom_effect_tooltip = cooldown_influence_limit_14_tooltip
				}
				else_if = { limit = { has_global_flag = GAME_RULE_influence_cooldown_limits_30 }
					set_country_flag = { flag = influence_gained_@FROM value = 1 days = 30 }
					custom_effect_tooltip = cooldown_influence_limit_30_tooltip
				}
			}


			# THIS Nation
			# take 10% of the cost of the project
			set_temp_variable = { treasury_change = FROM.project_monetary_cost_effect }
			multiply_temp_variable = { treasury_change = 0.1 }
			modify_treasury_effect = yes
			clear_variable = investor_cost
		}

		# AI Chance of taking the Investment Project
		ai_chance = {
			base = 10
			modifier = {
				add = 1
				ai_has_same_organization = yes
			}
			modifier = {
				set_temp_variable = { opinion_calculator = opinion@FROM }
				multiply_temp_variable = { opinion_calculator = 0.05 }
				check_variable = { opinion_calculator > -30 }
				add = opinion_calculator
			}
			modifier = {
				add = 1
				OR = {
					AND = {
						has_government = democratic
						FROM = { has_government = democratic }
					}
					AND = {
						has_government = neutrality
						FROM = { has_government = neutrality }
					}
					AND = {
						has_government = fascism
						FROM = { has_government = fascism }
					}
					AND = {
						has_government = nationalist
						FROM = { has_government = nationalist }
					}
					AND = {
						has_government = communism
						FROM = { has_government = communism }
					}
				}
			}
			modifier = {
				factor = 2
				is_subject_of = FROM
			}
			modifier = {
				factor = 2
				check_variable = { gdp_per_capita < 15 }
			}
			modifier = {
				add = 5
				num_of_factories < 30
			}
			modifier = {
				factor = 2
				num_of_available_civilian_factories < 30
			}
			modifier = { #More likely if you are a top influencer
				factor = 2
				OR = {
					check_variable = { influence_array^0 = FROM }
					check_variable = { influence_array^1 = FROM }
					check_variable = { influence_array^2 = FROM }
					check_variable = { influence_array^3 = FROM }
				}
			}
			modifier = {
				factor = 5
				set_temp_variable = { tmp = gdp_total }
				multiply_temp_variable = { tmp = 0.03 }
				divide_temp_variable = { tmp = 56 }

				# Check if weekly treasury leads to spending at 3% of GDP or greater. Be more likely to accept if this is the case.
				check_variable = { treasury_rate > tmp }
				OR = {
					check_variable = { FROM.project_building_type^-1 = 1 }
					check_variable = { FROM.project_building_type^-1 = 5 }
				}
			}
			modifier = {
				factor = 2
				OR = {
					check_variable = { FROM.project_building_type^-1 = 12 }
					check_variable = { FROM.project_building_type^-1 = 13 }
				}
				check_variable = { unfulfilled_energy_demand_var > -0.02 }
			}
			modifier = {
				factor = 0
				OR = {
					check_variable = { interest_rate > 9.999 }
					has_country_flag = recently_refused_investment@FROM
					AND = {
						original_tag = BOS
						has_stability < 0.40
						date < 2000.6.01
					}
				}
			}
		}
	}

	option = {
		name = AC_event.1.o2 # refuse
		log = "[GetDateText]: [This.GetName]: AC_event.1.o2 executed"
		# FROM is the original investor nation
		# THIS is the target nation
		clear_variable = investor_cost
		FROM = {
			country_event = AC_event.11
		}
		set_country_flag = { flag = recently_refused_investment@FROM days = 30 value = 1 }

		# AI chance for rejecting
		ai_chance = {
			base = 0
			modifier = {
				set_temp_variable = { opinion_calculator = opinion@FROM }
				multiply_temp_variable = { opinion_calculator = -0.05 }
				check_variable = { opinion_calculator > -30 }
				add = opinion_calculator
			}
			modifier = {
				factor = 2
				has_government = nationalist
			}
			modifier = {
				factor = 1.3
				has_government = neutrality
			}
			modifier = {
				add = 1
				OR = {
					AND = {
						has_government = democratic
						NOT = { FROM = { has_government = democratic } }
					}
					AND = {
						has_government = neutrality
						NOT = { FROM = { has_government = neutrality } }
					}
					AND = {
						has_government = fascism
						NOT = { FROM = { has_government = fascism } }
					}
					AND = {
						has_government = nationalist
						NOT = { FROM = { has_government = nationalist } }
					}
					AND = {
						has_government = communism
						NOT = { FROM = { has_government = communism } }
					}
				}
			}
			modifier = { #Less likely is not a top influencer
				add = 1
				OR = {
					NOT = { check_variable = { influence_array^0 = FROM } }
					NOT = { check_variable = { influence_array^1 = FROM } }
					NOT = { check_variable = { influence_array^2 = FROM } }
					NOT = { check_variable = { influence_array^3 = FROM } }
				}
			}
			# Tag Specific Rejections
			modifier = {
				add = 20
				OR = {
					AND = {
						original_tag = NKO
						FROM = { NOT = { original_tag = CHI } }
					}
					AND = {
						original_tag = PER
						FROM = { NOT = { has_government = communism } }
					}
					AND = {
						OR = {
							original_tag = CHI
							original_tag = SOV
						}
						FROM = { original_tag = USA }
					}
				}
			}
			modifier = {
				factor = 2.5
				check_variable = { domestic_influence_amount < 60.00 }
			}
			modifier = {
				factor = 5
				check_variable = { domestic_influence_amount < 50.00 }
			}
			modifier = {
				factor = 5
				check_variable = { domestic_influence_amount < 35.00 }
			}
			modifier = {
				factor = 5
				check_variable = { domestic_influence_amount < 20.00 }
			}
			modifier = {
				factor = 10
				check_variable = { domestic_influence_amount < 10.00 }
			}
			modifier = {
				factor = 0.5
			}
			modifier = {
				factor = 10
				OR = {
					check_variable = { FROM.project_building_type^-1 = 1 }
					check_variable = { FROM.project_building_type^-1 = 2 }
					check_variable = { FROM.project_building_type^-1 = 3 }
					check_variable = { FROM.project_building_type^-1 = 5 }
					check_variable = { FROM.project_building_type^-1 = 14 }
				}
				check_variable = { unfulfilled_energy_demand_var > -0.02 }
			}
			# Reject ALL investments if I recently rejected an offer
			modifier = {
				factor = 1000
				has_country_flag = recently_refused_investment@FROM
			}
		}
	}
}

#Construction Refused
country_event = {
	id = AC_event.11
	title = AC_event.2.t
	desc = AC_event.2.d
	picture = GFX_united_states_dollar

	is_triggered_only = yes

	option = {
		name = AC_event.2.o1
		log = "[GetDateText]: [This.GetName]: AC_event.11.o1 executed"
		clr_country_flag = this_investment_offer_pending@FROM
	}
}

#Construction Cancelled
country_event = {
	id = AC_event.12
	title = AC_event.3.t
	desc = AC_event.3.d
	picture = GFX_united_states_dollar

	is_triggered_only = yes

	option = {
		name = AC_event.3.o1
		log = "[GetDateText]: [This.GetName]: AC_event.12.o1 executed"
	}
}

# AC Project Maintenance Events
# 12/01/2022 - Bird: Reduced the reset timer to a day. Should hypothetically improve the clean up process
# The project
country_event = { #Clears project array index 0
	id = AC_event.30
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.30 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^0 = 0 }
		refresh_gui = yes
	}
}
country_event = { #Clears project array index 1
	id = AC_event.31
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.31 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^1 = 0 }
		refresh_gui = yes
	}

}
country_event = { #Clears project array index 2
	id = AC_event.32
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.32 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^2 = 0 }
		refresh_gui = yes
	}

}
country_event = { #Clears project array index 3
	id = AC_event.33
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.33 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^3 = 0 }
		refresh_gui = yes
	}

}
country_event = { #Clears project array index 4
	id = AC_event.34
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.34 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^4 = 0 }
		refresh_gui = yes
	}

}
country_event = { #Clears project array index 5
	id = AC_event.35
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.35 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^5 = 0 }
		refresh_gui = yes
	}

}
country_event = { #Clears project array index 6
	id = AC_event.36
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.36 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^6 = 0 }
		refresh_gui = yes
	}

}
country_event = { #Clears project array index 7
	id = AC_event.37
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.37 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^7 = 0 }
		refresh_gui = yes
	}

}
country_event = { #Clears project array index 8
	id = AC_event.38
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.38 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^8 = 0 }
		refresh_gui = yes
	}

}
country_event = { #Clears project array index 9
	id = AC_event.39
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.39 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^9 = 0 }
		refresh_gui = yes
	}

}
country_event = { #Clears project array index 10
	id = AC_event.310
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.310 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^10 = 0 }
		refresh_gui = yes
	}

}
country_event = { #Clears project array index 11
	id = AC_event.311
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.311 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^11 = 0 }
		refresh_gui = yes
	}

}
country_event = { #Clears project array index 12
	id = AC_event.312
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.312 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^12 = 0 }
		refresh_gui = yes
	}
}
country_event = { #Clears project array index 13
	id = AC_event.313
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.313 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^13 = 0 }
		refresh_gui = yes
	}
}
country_event = { #Clears project array index 14
	id = AC_event.314
	hidden = yes
	is_triggered_only = yes
	immediate = {
		log = "[GetDateText]: [This.GetName]: AC_event.314 executed"
		subtract_from_variable = { active_projects = 1 }
		set_variable = { project_array^14 = 0 }
		refresh_gui = yes
	}
}

# AI Investment Initialization
# Purpose: The following event triggers the AI nation's upcoming investment offer
country_event = {
	id = AC_event.500
	hidden = yes
	is_triggered_only = yes

	trigger = {
		is_ai = yes
		check_variable = { active_projects < 15 }
		check_variable = { debt_ratio < 2.50 }
		check_variable = { interest_rate < 6.000 }
	}

	immediate = {
		log = "[GetDateText]: [This.GetName]: AI Investment initiation Current Treasury: [?treasury], Current Interest Rate: [?interest_rate], Current Debt Ratio: [?debt_ratio]"

		# Minimum Score for a Valid Project
		set_temp_variable = { AI_MIN_STATE_SCORE = 100 }

		# Find state with the BEST score possible
		set_temp_variable = { AI_best_score = -1 }
		# Find state without a project
		set_temp_variable = { AI_best_target = -1 }
		set_temp_variable = { AI_best_type = -1 }

		set_temp_variable = { AI_best_country = 0 }
		set_temp_variable = { AI_best_country_score = -1 }

		for_each_scope_loop = {
			array = investment_targets
			if = {
				limit = {
					THIS = { exists = yes }
					THIS = { NOT = { has_country_flag = int_auto_reject_investment_flag } }
				}
				set_temp_variable = { AI_selected_country = THIS.id }
				set_temp_variable = { AI_country_score = 0 }
				AI_country_selection_calculation = yes

				# Sets the new best country
				if = { limit = { check_variable = { AI_country_score > AI_best_country_score } }
					set_temp_variable = { AI_best_country_score = AI_country_score }
					set_temp_variable = { AI_best_country = AI_selected_country }
				}
			}
		}

		# Check Investing Country
		if = { limit = { check_variable = { AI_best_country_score = -1 } }
			log = "[GetDateText]: [This.GetName]: Investment Failed. No valid investing country. Skipping this investment pulse."
		}
		else = {
			# Log the value
			log = "[GetDateText]: [This.GetName]: Investment Country Succeeded. [?var:AI_best_country.GetName] scored a [?AI_best_country_score]"
			var:AI_best_country = {
				set_temp_variable = { target_nation = THIS.id }
				for_each_scope_loop = {
					array = controlled_states

					if = {
						limit = {
							# Check if the Investable State
							is_in_home_area = yes
							# Check whether the AI can invest in these states
							AI_no_investment_in_these_states = yes
							NOT = {
								is_in_array = { array = projects_in_state value = ROOT.id }
								# Do not invest in this country if it is at war with ROOT
								PREV = { has_war_with = ROOT }
								# Do not Invest if any allies of this nation has war with ROOT
								PREV = { any_allied_country = { has_war_with = ROOT } }
							}
							# TODO: Add a check here at some point to make sure they're not a subject, if they are only invest if they are an allies subject or if they're your subject
						}

						# Free Building Slot Buildings
						if = { limit = { free_building_slots = { building = industrial_complex size > 0 include_locked = no } }
							# Get Industrial Complex Score - Building Type - 1
							AI_get_civilian_industry_score = yes
							# Get a Military Industry Score if you have defense industry
							# - Building Type - 2
							if = { limit = { ROOT = { has_idea = defense_industry } }
								AI_get_military_industry_score = yes
							}
							# Get Naval Dockyard Score if you have Maritime Industry
							# - Building Type - 3
							if = { limit = { ROOT = { has_idea = maritime_industry } is_coastal = yes }
								AI_get_dockyard_score = yes
							}
							# Offices - Building Type - 5
							AI_get_offices_score = yes
						}
						# Infrastructure - Building Type - 4
						AI_get_infrastructure_score = yes
						# Fuel Silos - Building Type - 9
						AI_get_fuel_silo_score = yes
						# Network Infrastructure - Building Type - 10
						AI_get_network_infrastructure_score = yes
						# Renewable Powerplant - Building Type - 11
						AI_get_renewable_energy_score = yes
						# Fossil Fuel Powerplant - Building Type - 12
						AI_get_fossil_powerplant_score = yes

						# Outside of Calculation
						AI_edge_case_calculations = yes
					}
				}
			}
			if = { limit = { check_variable = { AI_best_score > AI_MIN_STATE_SCORE } }
				# Project building type
				set_variable = { project_building_type = 0 }
				set_variable = { project_type = -1 }
				set_variable = { project_building_type^project_type = AI_best_type }
				# Regardless it will always be one for sake of AI balance
				set_variable = { project_build_amount^-1 = 1 }

				project_monetary_cost_calculation = yes

				# Init Project Variables
				# AI_best_target is the best state to invest in

				calculate_ai_construction_speed = yes

				# Log Values
				set_temp_variable = { pd = project_construction_duration^-2 }
				set_temp_variable = { pbt = project_building_type^-1 }
				set_temp_variable = { pba = project_build_amount^-1 }
				set_temp_variable = { abt = AI_best_target }
				set_temp_variable = { abs = AI_best_score }

				if = {
					limit = {
						# Only allow projects between 0 and 700. If construction speed goes negative you'll get instant failing projects
						check_variable = { project_construction_duration^-2 < 700 }
						check_variable = { project_construction_duration^-2 > 0 }

						# Check whether it's available
						var:AI_best_target = { investment_building_slot_available = yes }
					}
					var:AI_best_target = {
						THIS = {
							set_variable = { ROOT.AC_state_target = THIS.id }
							# CONTROLLER is pretty obvious
							CONTROLLER = { set_variable = { ROOT.AC_nation_target = THIS.id } }
						}
						ROOT = { country_event = { id = AC_event.3 } }
					}
					# Temporarily pulls this tag from investment targets for the sake of spreading investments around
					var:AI_best_country = {
						set_country_flag = { flag = recently_accepted_an_investment value = 1 days = 21 }
					}

					log = "[GetDateText]: [This.GetName]: Investment Succeeded: project type [?pbt] (x [?pba]) in [?abt.GetName], Project Duration: [?pd], Nation [?ROOT.AC_nation_target.GetName], score = [?abs]"
				}
				else = {
					var:AI_best_country = {
						set_country_flag = { flag = recently_failed_to_invest value = 1 days = 75 }
					}
					log = "[GetDateText]: [This.GetName]: Investment Failed: No valid state target found in [?var:target_nation.GetName]. Project Duration: [?pd] [?abt.GetName] scored [?abs]. Skipping this investment pulse."
				}
			}
			else = {
				var:AI_best_country = {
					set_country_flag = { flag = recently_failed_to_invest value = 1 days = 75 }
				}
				log = "[GetDateText]: [This.GetName]: Investment Failed: No valid state target found in [?var:target_nation.GetName]. Project Duration: [?pd] [?abt.GetName] scored [?abs]. Skipping this investment pulse."
			}
		}
	}
}

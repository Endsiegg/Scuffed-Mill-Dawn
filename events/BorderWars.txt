#################################################################################
################## DEFAULT STUFF ################################################
#################################################################################

add_namespace = md4_border_conflict_won_attacker

country_event = {
	id = md4_border_conflict_won_attacker.1
	title = md4_border_conflict_won_attacker.1.t
	desc = md4_border_conflict_won_attacker.1.desc

	picture = GFX_report_event_chinese_soldiers_city_ruin

	is_triggered_only = yes

	immediate = {
		save_event_target_as = our_country
		FROM = {
			save_event_target_as = our_state
			clr_state_flag = border_incident_active
		}
		FROM.FROM = { save_event_target_as = their_country }
		FROM.FROM.FROM = {
			save_event_target_as = their_state
			clr_state_flag = border_incident_active
		}
		#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
	}

	option = {
		name = md4_border_conflict_won_attacker.1.a
		log = "[GetDateText]: [This.GetName]: md4_border_conflict_won_attacker.1.a executed"
		add_political_power = 100
		if = {
			limit = {
				check_variable = {
					FROM.FROM.num_owned_states > 1
				}
			}
			transfer_state = FROM.FROM.FROM
		}
		else = {
			FROM.FROM = { ROOT = { annex_country = { target = PREV } } }
		}
	}
}

add_namespace = md4_border_conflict_won_defender

country_event = {
	id = md4_border_conflict_won_defender.1
	title = md4_border_conflict_won_defender.1.t
	desc = md4_border_conflict_won_defender.1.desc

	picture = GFX_report_event_chinese_soldiers_mountain

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = our_country
			FROM = {
				save_event_target_as = our_state
				clr_state_flag = border_incident_active
			}
			FROM.FROM = { save_event_target_as = their_country }
			FROM.FROM.FROM = {
				save_event_target_as = their_state
				clr_state_flag = border_incident_active
			}
			set_country_flag = show_effect_tooltips
			clear_variable = attacker_state_vs_@FROM.FROM
			clear_variable = defender_state_vs_@FROM.FROM
			#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
		}
	}

	#Same effect as attacker. Tooltip for their effects
	option = {
		name = md4_border_conflict_won_defender.1.a
		log = "[GetDateText]: [This.GetName]: md4_border_conflict_won_defender.1.a executed"
		add_political_power = 150
		army_experience = 30
		add_tech_bonus = {
			name = defensive_border_conflict_won
			category = land_doctrine
			bonus = 0.5
		}
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					add_political_power = -150
					army_experience = 10
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = md4_border_conflict_lost_attacker

country_event = {
	id = md4_border_conflict_lost_attacker.1
	title = md4_border_conflict_lost_attacker.1.t
	desc = md4_border_conflict_lost_attacker.1.desc

	picture = GFX_report_event_dead_soldiers

	is_triggered_only = yes

	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = our_state }
		FROM.FROM = { save_event_target_as = their_country }
		FROM.FROM.FROM = { save_event_target_as = their_state }
		set_country_flag = show_effect_tooltips
		#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
	}

	#Same effect as defender. Tooltip for their effects
	option = {
		name = md4_border_conflict_lost_attacker.1.a
		log = "[GetDateText]: [This.GetName]: md4_border_conflict_lost_attacker.1.a executed"
		add_political_power = -150
		army_experience = 10
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					add_political_power = 150
					army_experience = 30
					add_tech_bonus = {
						name = defensive_border_conflict_won
						category = land_doctrine
						bonus = 0.5
					}
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = md4_border_conflict_lost_defender

country_event = {
	id = md4_border_conflict_lost_defender.1
	title = md4_border_conflict_lost_defender.1.t
	desc = md4_border_conflict_lost_defender.1.desc

	picture = GFX_report_event_dead_soldiers

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = our_country
			FROM = {
				save_event_target_as = our_state
				clr_state_flag = border_incident_active
			}
			FROM.FROM = { save_event_target_as = their_country }
			FROM.FROM.FROM = {
				save_event_target_as = their_state
				clr_state_flag = border_incident_active
			}
			set_country_flag = show_effect_tooltips
			clear_variable = attacker_state_vs_@FROM.FROM
			clear_variable = defender_state_vs_@FROM.FROM
			#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
		}
	}

	#Same effect as attacker. Tooltip for their effects
	option = {
		name = md4_border_conflict_lost_defender.1.a
		log = "[GetDateText]: [This.GetName]: md4_border_conflict_lost_defender.1.a executed"
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			effect_tooltip = {
				add_political_power = 100
				if = {
					limit = {
						check_variable = {
							num_owned_states > 1
						}
					}
					FROM.FROM = { transfer_state = FROM }
				}
				else = {
					FROM.FROM = { annex_country = { target = ROOT } }
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = md4_border_conflict_canceled_attacker

country_event = {
	id = md4_border_conflict_canceled_attacker.1
	title = md4_border_conflict_canceled_attacker.1.t
	desc = md4_border_conflict_canceled_attacker.1.desc

	picture = GFX_report_event_chinese_soldiers_mountain

	is_triggered_only = yes

	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = our_state }
		FROM.FROM = { save_event_target_as = their_country }
		FROM.FROM.FROM = { save_event_target_as = their_state }
		set_country_flag = show_effect_tooltips
	}

	option = {
		name = md4_border_conflict_canceled_attacker.1.a
		log = "[GetDateText]: [This.GetName]: md4_border_conflict_canceled_attacker.1.a executed"
		army_experience = 15
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					army_experience = 30
					add_political_power = 50
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = md4_border_conflict_canceled_defender

country_event = {
	id = md4_border_conflict_canceled_defender.1
	title = md4_border_conflict_canceled_defender.1.t
	desc = md4_border_conflict_canceled_defender.1.desc

	picture = GFX_report_event_chinese_soldiers_mountain

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = our_country
			FROM = {
				save_event_target_as = our_state
				clr_state_flag = border_incident_active
			}
			FROM.FROM = { save_event_target_as = their_country }
			FROM.FROM.FROM = {
				save_event_target_as = their_state
				clr_state_flag = border_incident_active
			}
			set_country_flag = show_effect_tooltips
			clear_variable = attacker_state_vs_@FROM.FROM
			clear_variable = defender_state_vs_@FROM.FROM
		}
	}

	option = {
		name = md4_border_conflict_canceled_defender.1.a
		log = "[GetDateText]: [This.GetName]: md4_border_conflict_canceled_defender.1.a executed"
		army_experience = 30
		add_political_power = 50
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					army_experience = 15
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = md4_border_incident_defender_warning

country_event = {
	id = md4_border_incident_defender_warning.1
	title = md4_border_incident_defender_warning.1.t
	desc = md4_border_incident_defender_warning.1.desc

	picture = GFX_report_event_chinese_soldiers_mountain

	is_triggered_only = yes

	#Event targets saved
	#attacker_state
	#defender_state
	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = their_country }
	}

	option = {
		name = md4_border_incident_defender_warning.1.a
		log = "[GetDateText]: [This.GetName]: md4_border_incident_defender_warning.1.a executed"
	}
}

add_namespace = md4_border_conflict_escalation

country_event = {
	id = md4_border_conflict_escalation.1
	title = md4_border_conflict_escalation.1.t
	desc = md4_border_conflict_escalation.1.desc

	picture = GFX_report_event_chinese_soldiers_01

	is_triggered_only = yes

	#Event targets saved
	#attacker_state
	#defender_state
	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = their_country }
	}

	option = {
		name = md4_border_conflict_escalation.1.a
		log = "[GetDateText]: [This.GetName]: md4_border_conflict_escalation.1.a executed"
	}
}

add_namespace = md4_border_conflict_escalate_to_war

country_event = {
	id = md4_border_conflict_escalate_to_war.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event md4_border_conflict_escalate_to_war.1" }
	title = md4_border_conflict_escalate_to_war.1.t
	desc = md4_border_conflict_escalate_to_war.1.desc

	picture = GFX_report_event_chinese_soldiers

	is_triggered_only = yes

	#Event targets saved
	#attacker_state
	#defender_state
	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = their_country }
	}

	option = {
		name = md4_border_conflict_escalate_to_war.1.a
		log = "[GetDateText]: [This.GetName]: md4_border_conflict_escalate_to_war.1.a executed"
	}
}

#################################################################################
################## TURKEY-ROJAVA OPERATION OLIVE BRANCH #########################
#################################################################################

add_namespace = TUR_ob_win

country_event = {
	id = TUR_ob_win.1
	title = TUR_ob_win.1.t
	desc = TUR_ob_win.1.desc

	is_triggered_only = yes

	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = our_state }
		FROM.FROM = { save_event_target_as = their_country }
		FROM.FROM.FROM = { save_event_target_as = their_state }
		#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
	}

	option = {
		name = TUR_ob_win.1.a
		log = "[GetDateText]: [This.GetName]: TUR_ob_win.1.a executed"
		add_political_power = 100
		if = {
			limit = {
				check_variable = {
					FROM.FROM.num_owned_states > 1
				}
			}
			transfer_state = FROM.FROM.FROM
		}
		else = {
			FROM.FROM = { ROOT = { annex_country = { target = PREV } } }
		}
	}
}

country_event = {
	id = TUR_ob_win.2
	title = TUR_ob_win.2.t
	desc = TUR_ob_win.2.desc

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = our_country
			FROM = {
				save_event_target_as = our_state
				clr_state_flag = border_incident_active
			}
			FROM.FROM = { save_event_target_as = their_country }
			FROM.FROM.FROM = {
				save_event_target_as = their_state
				clr_state_flag = border_incident_active
			}
			set_country_flag = show_effect_tooltips
			clear_variable = attacker_state_vs_@FROM.FROM
			clear_variable = defender_state_vs_@FROM.FROM
			#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
		}
	}

	#Same effect as attacker. Tooltip for their effects
	option = {
		name = TUR_ob_win.2.a
		log = "[GetDateText]: [This.GetName]: TUR_ob_win.2.a executed"
		add_political_power = 150
		army_experience = 30
		add_tech_bonus = {
			name = defensive_border_conflict_won
			category = land_doctrine
			bonus = 0.5
		}
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					add_political_power = -150
					army_experience = 10
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = TUR_ob_lose

country_event = {
	id = TUR_ob_lose.1
	title = TUR_ob_lose.1.t
	desc = TUR_ob_lose.1.desc

	is_triggered_only = yes

	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = our_state }
		FROM.FROM = { save_event_target_as = their_country }
		FROM.FROM.FROM = { save_event_target_as = their_state }
		set_country_flag = show_effect_tooltips
		#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
	}

	#Same effect as defender. Tooltip for their effects
	option = {
		name = TUR_ob_lose.1.a
		log = "[GetDateText]: [This.GetName]: TUR_ob_lose.1.a executed"
		add_political_power = -150
		army_experience = 10
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					add_political_power = 150
					army_experience = 30
					add_tech_bonus = {
						name = defensive_border_conflict_won
						category = land_doctrine
						bonus = 0.5
					}
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

country_event = {
	id = TUR_ob_lose.2
	title = TUR_ob_lose.2.t
	desc = TUR_ob_lose.2.desc

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = our_country
			FROM = {
				save_event_target_as = our_state
				clr_state_flag = border_incident_active
			}
			FROM.FROM = { save_event_target_as = their_country }
			FROM.FROM.FROM = {
				save_event_target_as = their_state
				clr_state_flag = border_incident_active
			}
			set_country_flag = show_effect_tooltips
			clear_variable = attacker_state_vs_@FROM.FROM
			clear_variable = defender_state_vs_@FROM.FROM
			#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
		}
	}

	#Same effect as attacker. Tooltip for their effects
	option = {
		name = TUR_ob_lose.2.a
		log = "[GetDateText]: [This.GetName]: TUR_ob_lose.2.a executed"
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			effect_tooltip = {
				add_political_power = 100
				if = {
					limit = {
						check_variable = {
							num_owned_states > 1
						}
					}
					FROM.FROM = { transfer_state = FROM }
				}
				else = {
					FROM.FROM = { annex_country = { target = ROOT } }
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = TUR_ob_warn

country_event = {
	id = TUR_ob_warn.1
	title = TUR_ob_warn.1.t
	desc = TUR_ob_warn.1.desc

	is_triggered_only = yes

	#Event targets saved
	#attacker_state
	#defender_state
	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = their_country }
	}

	option = {
		name = TUR_ob_warn.1.a
		log = "[GetDateText]: [This.GetName]: TUR_ob_warn.1.a executed"
	}
}
#################################################################################
################## Russia-Crimea #########################
#################################################################################

add_namespace = SOV_ob_win

country_event = {
	id = SOV_ob_win.1
	title = SOV_ob_win.1.t
	desc = SOV_ob_win.1.desc

	is_triggered_only = yes

	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = our_state }
		FROM.FROM = { save_event_target_as = their_country }
		FROM.FROM.FROM = { save_event_target_as = their_state }
		#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
	}

	option = {
		name = SOV_ob_win.1.a
		log = "[GetDateText]: [This.GetName]: TUR_ob_win.1.a executed"
		add_political_power = 100
		if = {
			limit = {
				check_variable = {
					FROM.FROM.num_owned_states > 1
				}
			}
			transfer_state = FROM.FROM.FROM
		}
		else = {
			FROM.FROM = { ROOT = { annex_country = { target = PREV } } }
		}
	}
}

country_event = {
	id = SOV_ob_win.2
	title = SOV_ob_win.2.t
	desc = SOV_ob_win.2.desc

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = our_country
			FROM = {
				save_event_target_as = our_state
				clr_state_flag = border_incident_active
			}
			FROM.FROM = { save_event_target_as = their_country }
			FROM.FROM.FROM = {
				save_event_target_as = their_state
				clr_state_flag = border_incident_active
			}
			set_country_flag = show_effect_tooltips
			clear_variable = attacker_state_vs_@FROM.FROM
			clear_variable = defender_state_vs_@FROM.FROM
			#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
		}
	}

	#Same effect as attacker. Tooltip for their effects
	option = {
		name = SOV_ob_win.2.a
		log = "[GetDateText]: [This.GetName]: TUR_ob_win.2.a executed"
		add_political_power = 150
		army_experience = 30
		add_tech_bonus = {
			name = defensive_border_conflict_won
			category = land_doctrine
			bonus = 0.5
		}
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					add_political_power = -150
					army_experience = 10
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = SOV_ob_lose

country_event = {
	id = SOV_ob_lose.1
	title = SOV_ob_lose.1.t
	desc = SOV_ob_lose.1.desc

	is_triggered_only = yes

	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = our_state }
		FROM.FROM = { save_event_target_as = their_country }
		FROM.FROM.FROM = { save_event_target_as = their_state }
		set_country_flag = show_effect_tooltips
		#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
	}

	#Same effect as defender. Tooltip for their effects
	option = {
		name = SOV_ob_lose.1.a
		log = "[GetDateText]: [This.GetName]: TUR_ob_lose.1.a executed"
		add_political_power = -150
		army_experience = 10
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			event_target:their_country = {
				effect_tooltip = {
					add_political_power = 150
					army_experience = 30
					add_tech_bonus = {
						name = defensive_border_conflict_won
						category = land_doctrine
						bonus = 0.5
					}
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

country_event = {
	id = SOV_ob_lose.2
	title = SOV_ob_lose.2.t
	desc = SOV_ob_lose.2.desc

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			save_event_target_as = our_country
			FROM = {
				save_event_target_as = our_state
				clr_state_flag = border_incident_active
			}
			FROM.FROM = { save_event_target_as = their_country }
			FROM.FROM.FROM = {
				save_event_target_as = their_state
				clr_state_flag = border_incident_active
			}
			set_country_flag = show_effect_tooltips
			clear_variable = attacker_state_vs_@FROM.FROM
			clear_variable = defender_state_vs_@FROM.FROM
			#remove_targeted_decision = { target = event_target:their_country decision = md4_border_conflict_time_until_cancelled }
		}
	}

	#Same effect as attacker. Tooltip for their effects
	option = {
		name = SOV_ob_lose.2.a
		log = "[GetDateText]: [This.GetName]: TUR_ob_lose.2.a executed"
		if = {
			limit = { has_country_flag = show_effect_tooltips }
			effect_tooltip = {
				add_political_power = 100
				if = {
					limit = {
						check_variable = {
							num_owned_states > 1
						}
					}
					FROM.FROM = { transfer_state = FROM }
				}
				else = {
					FROM.FROM = { annex_country = { target = ROOT } }
				}
			}
			clr_country_flag = show_effect_tooltips
		}
	}
}

add_namespace = SOV_ob_warn

country_event = {
	id = SOV_ob_warn.1
	title = SOV_ob_warn.1.t
	desc = SOV_ob_warn.1.desc

	is_triggered_only = yes

	#Event targets saved
	#attacker_state
	#defender_state
	immediate = {
		save_event_target_as = our_country
		FROM = { save_event_target_as = their_country }
	}

	option = {
		name = SOV_ob_warn.1.a
		log = "[GetDateText]: [This.GetName]: TUR_ob_warn.1.a executed"
	}
}
#################
### EU events ### for EU voting events see EU_voting_events.txt
#################

add_namespace = EUevent ### next free ID 21
add_namespace = EUcheat
add_namespace = EUupdate
add_namespace = EUelection

# EU Cheat EVents
# Mainly Utility
# EUcheat.1 == Voting Cheat Section
country_event = {
	id = EUcheat.1
	title = EUcheat.1.t
	desc = EUcheat.1.d
	is_triggered_only = yes

	option = { #a
		name = EUcheat.1.a
		log = "[GetDateText]: [Root.GetName]: event EUcheat.1.a"
		set_global_flag = EU_voting_cheat_yes
	}
	option = { #b
		name = EUcheat.1.b
		log = "[GetDateText]: [Root.GetName]: event EUcheat.1.b"
		set_global_flag = EU_voting_cheat_no
	}
	option = { #c
		name = EUcheat.1.c
		log = "[GetDateText]: [Root.GetName]: event EUcheat.1.c"
		clr_global_flag = EU_voting_cheat_yes
		clr_global_flag = EU_voting_cheat_no
	}
}

# EUcheat.2 == Adds all Potential EU nations to the Union
country_event = {
	id = EUcheat.2
	title = EUcheat.2.t
	desc = EUcheat.2.d
	is_triggered_only = yes

	option = { #a
		name = EUcheat.2.a
		log = "[GetDateText]: [Root.GetName]: event EUcheat.1.a"
		for_each_scope_loop = {
			array = global.EU_potential
			if = {
				limit = { NOT = { has_idea = EU_member } }
				add_ideas = EU_member
			}
		}
		force_update_map_mode = { mapmode = EU_map_mode }
	}
}

### EUupdate

# Triggers the Update to the EUU_monitor nation and preps the
country_event = {
	id = EUupdate.1
	title = EUupdate.1.t
	desc = EUupdate.1.d
	is_triggered_only = yes
	hidden = yes

	option = { #a
		name = EUupdate.1.a
		log = "[GetDateText]: [ROOT.GetName]: event EUupdate.1.a"
		random_country = {
			limit = {
				has_country_flag = EU_potential
				is_ai = yes
			}
			add_ideas = EUU_monitor
			activate_mission = EU_update_vars_mission
			activate_mission = EU_clear_voting_mission
			if = {
				limit = {
					has_start_date < 2000.01.02
				}
				country_event = {
					id = EUelection.2
				}
			}
			else = {
				country_event = {
					id = EUelection.3
				}
			}
			activate_mission = EU_election_5_years
		}
	}
}

country_event = {
	id = EUupdate.2
	title = EUupdate.1.t
	desc = EUupdate.1.d

	#picture = GFX_eu

	is_triggered_only = yes
	hidden = yes

	option = { #a
		name = EUupdate.1.a
		log = "[GetDateText]: [ROOT.GetName]: event EUupdate.2.a"
		every_country = {
			limit = {
				has_country_flag = EU_potential
				is_ai = yes
			}
			remove_ideas = EUU_monitor
			remove_mission = EU_update_vars_mission
			remove_mission = EU_clear_voting_mission
			EU_clear_voting = yes
		}
		country_event = {
			id = EUupdate.1
		}
	}
}


###SOTEU

country_event = {
	id = EUevent.1
	title = EUevent.1.t
	desc = EUevent.1.d

	#picture = GFX_eu

	is_triggered_only = yes
	hidden = yes
	option = {
		name = EUevent.1.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.1.a"

		# Updated Vars
		EU_update_vars = yes
	}
}

### EU–Turkey deal TUR

country_event = {
	id = EUevent.2
	title = EUevent.2.t
	desc = EUevent.2.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a
		name = EUevent.2.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.2.a"
		###
		TUR = {
			set_temp_variable = { treasury_change = 3 }
			modify_treasury_effect = yes
		}
		for_each_scope_loop = {
			array = global.EU_member
			country_event = { id = EUevent.17 }
		}
	}
}

### United States of Europe

country_event = {
	id = EUevent.3
	title = EUevent.3.t
	desc = EUevent.3.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a
		name = EUevent.3.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.3.a"
		hidden_effect = {
			EUU = {
				for_each_loop = {
					array = researched_techs
					if = {
						limit = {
							NOT = { is_in_array = { eu_technologies = v } }
						}
						add_to_temp_array = { eu_technologies = v }
					}
				}
			}
			for_each_loop = {
				array = eu_technologies
				meta_effect = {
					text = {
						set_technology = {
							[TECH] = 1
							popup = no
						}
					}
					TECH = "[?v.GetTokenKey]"
				}
			}
			every_country = {
				limit = { has_idea = EU_member }
				EUU = { inherit_technology = PREV }
				set_country_flag = USoE_member
				every_unit_leader = {
					set_unit_leader_flag = USoE_unit_leader
					set_nationality = ROOT
					add_unit_leader_trait = military_reorganization
				}
				every_owned_state = {
					limit = {
						OR = {
							is_on_continent = europe
							is_core_of = GEO
							is_core_of = ARM
							is_core_of = AZE
							is_core_of = TUR
							is_core_of = POR
							is_core_of = SPR
						}
						NOT = { is_core_of = ROOT }
					}
					add_core_of = ROOT
				}
				country_event = EUevent.4
			}
			ROOT = {
				set_cosmetic_tag = USoE
				clr_country_flag = dynamic_flag
				set_country_flag = USoE
				add_ideas = multi_ethnic_state_idea
			}
		}
		custom_effect_tooltip = form_USoE_tt
	}
}

country_event = {
	id = EUevent.4
	title = EUevent.4.t
	desc = EUevent.4.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a
		name = EUevent.4.a
		log = "[GetDateText]: [THIS.GetName]: event EUevent.4.a"
		if = {
			limit = {
				NOT = { original_tag = FROM }
			}
			FROM = {
				annex_country = {
					target = ROOT
					transfer_troops = yes
				}
				# Integrates Entire Economy of the nation
				add_to_variable = { treasury = ROOT.treasury }
				add_to_variable = { debt = ROOT.debt }
				add_to_variable = { int_investments = ROOT.int_investments }

				for_each_loop = {
					array = missile_inventory_array
					value = v
					index = i
					add_to_variable = { missile_inventory_array^i = ROOT.missile_inventory_array^i }
				}
				for_each_loop = {
					array = GNSS_satellite_array
					value = v
					index = i
					add_to_variable = { GNSS_satellite_array^i = ROOT.GNSS_satellite_array^i }
				}
				for_each_loop = {
					array = COM_satellite_array
					value = v
					index = i
					add_to_variable = { COM_satellite_array^i = ROOT.COM_satellite_array^i }
				}
				for_each_loop = {
					array = SPY_satellite_array
					value = v
					index = i
					add_to_variable = { SPY_satellite_array^i = ROOT.SPY_satellite_array^i }
				}
				for_each_loop = {
					array = nuclear_warhead_inventory_array
					value = v
					index = i
					add_to_variable = { nuclear_warhead_inventory_array^i = ROOT.nuclear_warhead_inventory_array^i }
				}
			}
		}
	}
}

### European debt crisis
country_event = {
	id = EUevent.5
	title = EUevent.5.t
	desc = EUevent.5.d

	#picture = GFX_eu

	is_triggered_only = yes
	fire_only_once = yes

	option = { #a
		name = EUevent.5.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.5.a"
		ROOT = {
			add_ideas = european_debt_crisis
		}
		if = {
			limit = {
				OR = {
					original_tag = POR
					original_tag = ITA
					original_tag = IRE
					original_tag = GRE
					original_tag = SPR
					original_tag = CYP
				}
			}
			ROOT = {
				add_ideas = EUU_national_dept_crisis_eu
			}
		}
	}
}

### eurozone reforms
country_event = {
	id = EUevent.6
	title = EUevent.6.t
	desc = EUevent.6.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a
		name = EUevent.6.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.6.a"
		set_global_flag = eurozone_reforms ### European debt crisis will never happen
		ROOT = {
			add_to_variable = {
				var = eurosceptic
				value = -0.10
			}
			if = {
				limit = {
					check_variable = { eurosceptic > 1 }
				}
				set_variable = { eurosceptic = 1 }
			}
			else_if = {
				limit = {
					check_variable = { eurosceptic < 0 }
				}
				set_variable = { eurosceptic = 0 }
			}
		}
	}
}

### eurozone reforms activate_mission
country_event = {
	id = EUevent.7
	title = EUevent.7.t
	desc = EUevent.7.d

	#picture = GFX_eu
	fire_only_once = yes
	#is_triggered_only = yes
	trigger = {
			NOT = { has_global_flag = eurozone_reforms }
			ROOT = {
				has_idea = EU_member
			}
			date > 2008.09.15 ### Day of Lehman Bankruptcy
	}


	option = { #a
		name = EUevent.7.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.7.a"
		every_country = {
			limit = {
				has_idea = EU_member
			}
			activate_mission = eurozone_reforms
		}
	}
}
### troika_reforms accomplised
country_event = {
	id = EUevent.8
	title = EUevent.8.t
	desc = EUevent.8.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a
		name = EUevent.8.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.8.a"
		ROOT = {
			remove_ideas = EUU_national_dept_crisis_eu
			add_timed_idea = {
				idea = austerity
				days = 730 # two years
			}
		}
	}
}
### EU Exit by accident
country_event = {
	id = EUevent.9
	title = EUevent.9.t
	desc = EUevent.9.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a
		name = EUevent.9.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.9.a"
		ROOT = {
			add_timed_idea = {
				idea = no_deal_exit
				days = 1825 # five years # unprepared no deal exit # prepared no deal exit with two years with focus EU703
			}
			leaving_EU = yes
		}
		#every_country = { ### changed news event to major, fire only once
		#	limit = {
		#		has_idea = EU_member
		#	}
		news_event = {
			id = EU_news.20
		}
		#}
	}
}

### EuroNavy Transfer Navy
country_event = {
	id = EUevent.10
	title = EUevent.10.t
	desc = EUevent.10.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a yes
		name = EUevent.10.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.10.a"
		ROOT = {
			transfer_navy = {
				target = FROM
			}
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
			news_event = {
					id = EU_news.25
			}
		}
		ai_chance = {
			factor = 100
		}
	}
	option = { #b no
		name = EUevent.10.b
		log = "[GetDateText]: [Root.GetName]: event EUevent.10.b"
		every_country = {
			limit = {
				has_idea = EU_member
			}
			news_event = {
					id = EU_news.26
			}
		}
		ai_chance = {
			factor = 0
		}
	}
}

### euroscepticism decline -3% ###
country_event = {
	id = EUevent.11
	title = EUevent.11.t
	desc = EUevent.11.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = {
		name = EUevent.11.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.11.a"
		### effect
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = THIS.eurosceptic
					value = -0.03
				}
				if = {
					limit = {
						check_variable = { THIS.eurosceptic > 1 }
					}
					set_variable = { THIS.eurosceptic = 1 }
				}
				else_if = {
					limit = {
						check_variable = { THIS.eurosceptic < 0 }
					}
					set_variable = { THIS.eurosceptic = 0 }
				}
		}
		### updating variables
		set_variable = {
			var = global.var_EUpopTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUpopTotal
					value = THIS.max_manpower_k
				}
		}

		set_variable = {
			var = global.var_EUmemberstatesTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUmemberstatesTotal
					value = 1
				}
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_EUpopRatio
					value = 0
				}
				add_to_variable = {
					var = THIS.var_EUpopRatio
					value = THIS.max_manpower_k
				}
				divide_variable = {
					var = THIS.var_EUpopRatio
					value = global.var_EUpopTotal
				}
			}
		}

		###Europeanism Update
		set_variable = {
			var = global.var_europeanism
			value = 0
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_proeuropean
					value = 1
				}
				subtract_from_variable = {
					var = THIS.var_proeuropean
					value = THIS.eurosceptic
				}
				multiply_variable = {
					var = THIS.var_proeuropean
					value = max_manpower_k
				}
			}
		}
		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				add_to_variable = {
					var = global.var_europeanism
					value = THIS.var_proeuropean
				}
			}
		}

		divide_variable = {
			var = global.var_europeanism
			value = global.var_EUpopTotal
		}
		###Europeanism Update End
	}
}

### euroscepticism decline -5% ###
country_event = {
	id = EUevent.12
	title = EUevent.12.t
	desc = EUevent.12.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = {
		name = EUevent.12.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.12.a"
		### effect
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = THIS.eurosceptic
					value = -0.05
				}
				if = {
					limit = {
						check_variable = { THIS.eurosceptic > 1 }
					}
					set_variable = { THIS.eurosceptic = 1 }
				}
				else_if = {
					limit = {
						check_variable = { THIS.eurosceptic < 0 }
					}
					set_variable = { THIS.eurosceptic = 0 }
				}
		}
		### updating variables
		set_variable = {
			var = global.var_EUpopTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUpopTotal
					value = THIS.max_manpower_k
				}
		}

		set_variable = {
			var = global.var_EUmemberstatesTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUmemberstatesTotal
					value = 1
				}
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_EUpopRatio
					value = 0
				}
				add_to_variable = {
					var = THIS.var_EUpopRatio
					value = THIS.max_manpower_k
				}
				divide_variable = {
					var = THIS.var_EUpopRatio
					value = global.var_EUpopTotal
				}
			}
		}

		###Europeanism Update
		set_variable = {
			var = global.var_europeanism
			value = 0
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_proeuropean
					value = 1
				}
				subtract_from_variable = {
					var = THIS.var_proeuropean
					value = THIS.eurosceptic
				}
				multiply_variable = {
					var = THIS.var_proeuropean
					value = max_manpower_k
				}
			}
		}
		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				add_to_variable = {
					var = global.var_europeanism
					value = THIS.var_proeuropean
				}
			}
		}

		divide_variable = {
			var = global.var_europeanism
			value = global.var_EUpopTotal
		}
		###Europeanism Update End
	}
}

### euroscepticism rise 3% ###
country_event = {
	id = EUevent.13
	title = EUevent.13.t
	desc = EUevent.13.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = {
		name = EUevent.13.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.13.a"
		### effect
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = THIS.eurosceptic
					value = 0.03
				}
				if = {
					limit = {
						check_variable = { THIS.eurosceptic > 1 }
					}
					set_variable = { THIS.eurosceptic = 1 }
				}
				else_if = {
					limit = {
						check_variable = { THIS.eurosceptic < 0 }
					}
					set_variable = { THIS.eurosceptic = 0 }
				}
		}
		### updating variables
		set_variable = {
			var = global.var_EUpopTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUpopTotal
					value = THIS.max_manpower_k
				}
		}

		set_variable = {
			var = global.var_EUmemberstatesTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUmemberstatesTotal
					value = 1
				}
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_EUpopRatio
					value = 0
				}
				add_to_variable = {
					var = THIS.var_EUpopRatio
					value = THIS.max_manpower_k
				}
				divide_variable = {
					var = THIS.var_EUpopRatio
					value = global.var_EUpopTotal
				}
			}
		}

		###Europeanism Update
		set_variable = {
			var = global.var_europeanism
			value = 0
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_proeuropean
					value = 1
				}
				subtract_from_variable = {
					var = THIS.var_proeuropean
					value = THIS.eurosceptic
				}
				multiply_variable = {
					var = THIS.var_proeuropean
					value = max_manpower_k
				}
			}
		}
		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				add_to_variable = {
					var = global.var_europeanism
					value = THIS.var_proeuropean
				}
			}
		}

		divide_variable = {
			var = global.var_europeanism
			value = global.var_EUpopTotal
		}
		###Europeanism Update End
	}
}

### euroscepticism rise 5% ###
country_event = {
	id = EUevent.14
	title = EUevent.14.t
	desc = EUevent.14.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = {
		name = EUevent.14.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.14.a"
		### effect
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = THIS.eurosceptic
					value = 0.05
				}
				if = {
					limit = {
						check_variable = { THIS.eurosceptic > 1 }
					}
					set_variable = { THIS.eurosceptic = 1 }
				}
				else_if = {
					limit = {
						check_variable = { THIS.eurosceptic < 0 }
					}
					set_variable = { THIS.eurosceptic = 0 }
				}
		}
		### updating variables
		set_variable = {
			var = global.var_EUpopTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUpopTotal
					value = THIS.max_manpower_k
				}
		}

		set_variable = {
			var = global.var_EUmemberstatesTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUmemberstatesTotal
					value = 1
				}
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_EUpopRatio
					value = 0
				}
				add_to_variable = {
					var = THIS.var_EUpopRatio
					value = THIS.max_manpower_k
				}
				divide_variable = {
					var = THIS.var_EUpopRatio
					value = global.var_EUpopTotal
				}
			}
		}

		###Europeanism Update
		set_variable = {
			var = global.var_europeanism
			value = 0
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_proeuropean
					value = 1
				}
				subtract_from_variable = {
					var = THIS.var_proeuropean
					value = THIS.eurosceptic
				}
				multiply_variable = {
					var = THIS.var_proeuropean
					value = max_manpower_k
				}
			}
		}
		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				add_to_variable = {
					var = global.var_europeanism
					value = THIS.var_proeuropean
				}
			}
		}

		divide_variable = {
			var = global.var_europeanism
			value = global.var_EUpopTotal
		}
		###Europeanism Update End
	}
}

### ROOT euroscepticism decline -5% ###
country_event = {
	id = EUevent.15
	title = EUevent.15.t
	desc = EUevent.15.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = {
		name = EUevent.15.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.15.a"
		### effect
		ROOT = {
				add_to_variable = {
					var = THIS.eurosceptic
					value = -0.05
				}
				if = {
					limit = {
						check_variable = { THIS.eurosceptic > 1 }
					}
					set_variable = { THIS.eurosceptic = 1 }
				}
				else_if = {
					limit = {
						check_variable = { THIS.eurosceptic < 0 }
					}
					set_variable = { THIS.eurosceptic = 0 }
				}
		}
		### updating variables
		set_variable = {
			var = global.var_EUpopTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUpopTotal
					value = THIS.max_manpower_k
				}
		}

		set_variable = {
			var = global.var_EUmemberstatesTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUmemberstatesTotal
					value = 1
				}
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_EUpopRatio
					value = 0
				}
				add_to_variable = {
					var = THIS.var_EUpopRatio
					value = THIS.max_manpower_k
				}
				divide_variable = {
					var = THIS.var_EUpopRatio
					value = global.var_EUpopTotal
				}
			}
		}

		###Europeanism Update
		set_variable = {
			var = global.var_europeanism
			value = 0
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_proeuropean
					value = 1
				}
				subtract_from_variable = {
					var = THIS.var_proeuropean
					value = THIS.eurosceptic
				}
				multiply_variable = {
					var = THIS.var_proeuropean
					value = max_manpower_k
				}
			}
		}
		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				add_to_variable = {
					var = global.var_europeanism
					value = THIS.var_proeuropean
				}
			}
		}

		divide_variable = {
			var = global.var_europeanism
			value = global.var_EUpopTotal
		}
		###Europeanism Update End
	}
}

### ROOT euroscepticism rise 5% ###
country_event = {
	id = EUevent.16
	title = EUevent.16.t
	desc = EUevent.16.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = {
		name = EUevent.16.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.16.a"
		### effect
		ROOT = {
				add_to_variable = {
					var = THIS.eurosceptic
					value = 0.05
				}
				if = {
					limit = {
						check_variable = { THIS.eurosceptic > 1 }
					}
					set_variable = { THIS.eurosceptic = 1 }
				}
				else_if = {
					limit = {
						check_variable = { THIS.eurosceptic < 0 }
					}
					set_variable = { THIS.eurosceptic = 0 }
				}
		}
		### updating variables
		set_variable = {
			var = global.var_EUpopTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUpopTotal
					value = THIS.max_manpower_k
				}
		}

		set_variable = {
			var = global.var_EUmemberstatesTotal
			value = 0
		}
		every_country = {
			limit = {
				has_idea = EU_member
			}
				add_to_variable = {
					var = global.var_EUmemberstatesTotal
					value = 1
				}
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_EUpopRatio
					value = 0
				}
				add_to_variable = {
					var = THIS.var_EUpopRatio
					value = THIS.max_manpower_k
				}
				divide_variable = {
					var = THIS.var_EUpopRatio
					value = global.var_EUpopTotal
				}
			}
		}

		###Europeanism Update
		set_variable = {
			var = global.var_europeanism
			value = 0
		}

		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				set_variable = {
					var = THIS.var_proeuropean
					value = 1
				}
				subtract_from_variable = {
					var = THIS.var_proeuropean
					value = THIS.eurosceptic
				}
				multiply_variable = {
					var = THIS.var_proeuropean
					value = max_manpower_k
				}
			}
		}
		every_country = {
			if = {
				limit = {
					has_idea = EU_member
				}
				add_to_variable = {
					var = global.var_europeanism
					value = THIS.var_proeuropean
				}
			}
		}

		divide_variable = {
			var = global.var_europeanism
			value = global.var_EUpopTotal
		}
		###Europeanism Update End
	}
}

### EU–Turkey deal member states

country_event = {
	id = EUevent.17
	title = EUevent.17.t
	desc = EUevent.17.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a
		name = EUevent.17.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.17.a"
		ROOT = {
			set_temp_variable = { temp1 = THIS.var_EUpopRatio }
			multiply_temp_variable = { temp1 = 3.0 }
			subtract_from_temp_variable = { temp1 = THIS.treasury }
			ingame_update_setup = yes
		}
	}
}

### FROM asks us to host a Military Exercise

country_event = {
	id = EUevent.18
	title = EUevent.18.t
	desc = EUevent.18.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a yes
		name = EUevent.18.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.18.a"


		set_country_flag = EU_host_military_exercise@FROM
		random_owned_state = {
			limit = {
				any_neighbor_state = {
					is_owned_by = FROM.var_EU_military_exercise_target
				}
			}
			set_variable = {
				var = FROM.var_EU_military_exercise_host_state
				value = THIS
			}
		}
		FROM = {
			activate_mission = EU_military_exercise_mission
			set_variable = {
				var = FROM.var_EU_military_exercise_host_tag
				value = ROOT
			}
		}

		ai_chance = {
			factor = 1
		}
	}
	option = { #b no
		name = EUevent.18.b
		log = "[GetDateText]: [Root.GetName]: event EUevent.18.b"

		ai_chance = {
			factor = 0
		}
	}
}


country_event = {
	id = EUevent.19
	immediate = {
		set_THIS_desire = yes
		set_PG_desire = yes
	}
	title = EUevent.19.t
	desc = EUevent.19.d

	#picture = GFX_eu
	hidden = yes
	is_triggered_only = yes

	option = { #a yes
		name = EUevent.19.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.19.a"
	}
}

### pre_accession_assistance ###

country_event = {
	id = EUevent.20
	title = EUevent.20.t
	desc = EUevent.20.d

	#picture = GFX_eu
	is_triggered_only = yes

	option = { #a yes
		name = EUevent.20.a
		log = "[GetDateText]: [Root.GetName]: event EUevent.20.a"
		set_temp_variable = { gdp_percent = FROM.gdp_total }
		multiply_temp_variable = { gdp_percent = -0.005 }

		set_temp_variable = { treasury_change = gdp_percent }
		modify_treasury_effect = yes
		FROM = {
			decrease_corruption = yes
		}

	}
	option = { #b no
		name = EUevent.20.b
		log = "[GetDateText]: [Root.GetName]: event EUevent.20.b"

	}
}


### EU election ###

country_event = {
	id = EUelection.1
	title = EUelection.1.t
	desc = EUelection.1.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a
		name = EUelection.1.a
		log = "[GetDateText]: [Root.GetName]: event EUelection.1.a"
		clear_EU_Parliament = yes
		election_EU_Parliament = yes
		for_each_scope_loop = {
			array = global.EU_member
			news_event = { ### Result of EU Parliament elections
				id = EU_news.52
			}
		}
	}
}

country_event = {
	id = EUelection.2
	title = EUelection.2.t
	desc = EUelection.2.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a
		name = EUelection.2.a
		log = "[GetDateText]: [Root.GetName]: event EUelection.2.a"
		clear_EU_Parliament = yes
		election_EU_Parliament = yes
		activate_mission = EU_election_2004
		every_country = {
			limit = {
				has_idea = EU_member
			}
			#news_event = { ### Result of EU Parliament elections
			#	id = EU_news.53
			#}
		}
	}
}

country_event = {
	id = EUelection.3
	title = EUelection.3.t
	desc = EUelection.3.d

	#picture = GFX_eu

	is_triggered_only = yes

	option = { #a
		name = EUelection.3.a
		log = "[GetDateText]: [Root.GetName]: event EUelection.3.a"
		clear_EU_Parliament = yes
		election_EU_Parliament = yes
		activate_mission = EU_election_2019
		every_country = {
			limit = {
				has_idea = EU_member
			}
			#news_event = { ### Result of EU Parliament elections
			#	id = EU_news.54
			#}
		}
	}
}

# Author(s): Angriest Bird
on_actions = {
	on_weekly = {
		effect = {
			# Random Energy On Weekly
			random_renewable_variable_calculation = yes
			worker_requirements_variable_gdpc_converging = yes

			#Update money system right before adjusting weekly value
			ingame_update_setup = yes
			#Remove weekly rate from treasury
			if = { limit = { has_country_flag = int_reinvestment_flag }
				add_to_variable = { int_investments = int_investments_rate }
			}
			add_to_variable = { treasury = treasury_rate }
			#Automated taking debt - has calculate_interest_rate at the end
			automated_debt_taker = yes

			# Force Update Influencer Map Mode
			recalculate_influence = yes
			force_update_map_mode = { mapmode = influence_map_mode }



			# Initialize the Investment Pulse for this Week
			if = {
				limit = {
					is_ai = yes
					check_variable = { interest_rate < 8.000 }
					OR = {
						has_idea = regional_power
						has_idea = large_power
						has_idea = great_power
						has_idea = superpower
					}

					# wait for apc-ifv stuff to merge
					#NOT = { has_idea = mp_optimization_idea }
				}

				if = {
					limit = { NOT = { has_country_flag = investment_targets_are_set_up } }
					yearly_investment_targets_routine = yes
				}

				# Check whether the larger nation has an investment target in scope 0
				if = { limit = { NOT = { check_variable = { investment_targets^0 = 0 } } }
					country_event = AC_event.500
				}
			}

			# European Union Checks
			if = { limit = { NOT = { has_global_flag = GAME_RULE_eu_disabled } }
				if = { limit = { has_country_flag = EU_potential }
					if = { limit = { is_debug = yes }
						log = "[GetDateText]: [ROOT.GetName]: on_weekly check_breach_of_EU_value"
					}
					check_breach_of_EU_value = yes
				}
				### POTEF election polls

				if = {
					limit = {
						has_idea = EUU_monitor
						any_of_scopes = {
							array = global.EU_potential
							has_active_mission = EU_POTEF_election_campaign
						}
					}
					if = { limit = { is_debug = yes }
						log = "[GetDateText]: [ROOT.GetName]: on_weekly POTEF_election"
					}
					POTEF_election = yes
				}
			}

			# Cancel Invalid Projects
			if = { limit = { check_variable = { active_projects > 0 } }
				# Project loop.
				for_each_loop = { array = project_array

					if = { limit = { check_variable = { v < 0 } }

						set_variable = { project_type = i }

						if = {
							limit = {
								OR = {
									CONTROLLER = { has_war_with = ROOT } # target state controller at war with project owner
									var:v = { NOT = { investment_building_slot_available = yes } } # building slot unavailable in target state
								}
							}

							set_variable = { project = i }
							log = "AC Project Deletion - [GetDate] [This.GetTag] - on_weekly - deleted invalid project [?project] in [?project_array^project] [?project_array^project.GetName] [?project_array^project.GetName]"
							end_project = yes
						}
					}
				}

				clear_variable = project_type
			}
			# If child soldier thing
			if = { limit = { has_idea = child_soldiers }
				add_to_variable = { child_soldiers = child_soldiers_recruitment }
			}

			# Update Ledger
			if = {
				limit = {
					check_variable = { ledger_open > 0 }
					NOT = { has_global_flag = ledger_on_daily_weekly }
				}
				if = {
					limit = { is_ai = yes }
					clear_variable = ledger_open
				}
				else = {
					every_country = {
						get_strategic_building_levels = yes
						update_misc_vars = yes
					}
					set_global_flag = { flag = ledger_on_daily_weekly value = 1 days = 6 }
				}
			}

			# Raise/Lower Conservative Society
			if = {
				limit = {
					OR = {
						AND = {
							has_idea = conservative_society
							check_variable = { social_conservatism_society > 90 }
						}
						AND = {
							has_idea = moderately_conservative_society
							check_variable = { social_conservatism_society > 64 }
						}
						AND = {
							has_idea = moderately_liberal_society
							check_variable = { social_conservatism_society > 49 }
						}
						AND = {
							has_idea = liberal_society
							check_variable = { social_conservatism_society > 29 }
						}
						AND = {
							has_idea = extremely_liberal_society
							check_variable = { social_conservatism_society > 9 }
						}
						AND = {
							has_idea = shia_conservative_society
							check_variable = { social_conservatism_society > 90 }
						}
						AND = {
							has_idea = shia_moderately_conservative_society
							check_variable = { social_conservatism_society > 64 }
						}
						AND = {
							has_idea = shia_moderately_liberal_society
							check_variable = { social_conservatism_society > 49 }
						}
						AND = {
							has_idea = shia_liberal_society
							check_variable = { social_conservatism_society > 29 }
						}
						AND = {
							has_idea = shia_extremely_liberal_society
							check_variable = { social_conservatism_society > 9 }
						}
					}
				}
				country_event = { id = radicalization.5 days = 1 }
			}
			if = {
				limit = {
					OR = {
						AND = {
							has_idea = extremely_conservative_society
							check_variable = { social_conservatism_society < 91 }
						}
						AND = {
							has_idea = conservative_society
							check_variable = { social_conservatism_society < 65 }
						}
						AND = {
							has_idea = moderately_conservative_society
							check_variable = { social_conservatism_society < 50 }
						}
						AND = {
							has_idea = moderately_liberal_society
							check_variable = { social_conservatism_society < 30 }
						}
						AND = {
							has_idea = liberal_society
							check_variable = { social_conservatism_society < 10 }
						}
						AND = {
							has_idea = shia_extremely_conservative_society
							check_variable = { social_conservatism_society < 91 }
						}
						AND = {
							has_idea = shia_conservative_society
							check_variable = { social_conservatism_society < 65 }
						}
						AND = {
							has_idea = shia_moderately_conservative_society
							check_variable = { social_conservatism_society < 50 }
						}
						AND = {
							has_idea = shia_moderately_liberal_society
							check_variable = { social_conservatism_society < 30 }
						}
						AND = {
							has_idea = shia_liberal_society
							check_variable = { social_conservatism_society < 10 }
						}
					}
				}
				country_event = { id = radicalization.6 days = 2 }
			}
			if = {
				limit = {
					OR = {
						AND = {
							NOT = { has_idea = foreign_military_advisors1 }
							check_variable = { foreign_advisors > 0 }
							check_variable = { foreign_advisors < 6 }
						}
						AND = {
							NOT = { has_idea = foreign_military_advisors2 }
							check_variable = { foreign_advisors > 5 }
							check_variable = { foreign_advisors < 11 }
						}
						AND = {
							NOT = { has_idea = foreign_military_advisors3 }
							check_variable = { foreign_advisors > 10 }
						}
						AND = {
							OR = {
								has_idea = foreign_military_advisors1
								has_idea = foreign_military_advisors2
								has_idea = foreign_military_advisors3
							}
							check_variable = { foreign_advisors = 0 }
						}
					}
				}
				country_event = { id = advisors.1 days = 2 }
			}
			if = {
				limit = {
					is_in_array = { global.ct_states = THIS }
					has_country_flag = jihadist_uprising_imminent
				}
				country_event = { id = terror.14 }
			}
		}
	}

	on_annex = {
		effect = {
			if = {
				limit = {
					ROOT = { original_tag = ARM }
					FROM = { original_tag = GEO }
				}
				ROOT = {
					add_ideas = ARM_GEO_religion_problem
					add_ideas = ARM_GEO_language
				}
			}
			if = {
				limit = {
					ROOT = { original_tag = ARM }
					FROM = { original_tag = AZE }
				}
				ROOT = {
					add_ideas = ARM_AZE_small_people
				}
			}
			if = {
				limit = {
					ROOT = { original_tag = CAN }
					FROM = { original_tag = QUE }
				}
				# return cores to CAN
				760 = { add_core_of = CAN }
				761 = { add_core_of = CAN }
				762 = { add_core_of = CAN }
				1159 = { add_core_of = CAN }
				1160 = { add_core_of = CAN }
			}
			if = {
				limit = { NOT = { has_global_flag = GAME_RULE_eu_disabled } }
				if = { limit = { FROM = { has_idea = EU_member } }
					log = "[GetDateText]: [ROOT.GetName]: on_annex leaving_EU"
					FROM = {
						clr_country_flag = EU_voted
						clr_country_flag = gov_strong_resist
						clr_country_flag = gov_resist
						clr_country_flag = gov_support
						clr_country_flag = gov_strong_support
						clr_country_flag = EU_voted_yes
						clr_country_flag = EU_voted_no

						leaving_EU = yes
					}
				}
				if = { limit = { FROM = { has_idea = EUU_monitor } }
					log = "[GetDateText]: [ROOT.GetName]: on_annex EUU_monitor change"
					random_country = {
						limit = {
							has_country_flag = EU_potential
							is_ai = yes
						}
						add_ideas = EUU_monitor
						activate_mission = EU_update_vars_mission
						activate_mission = EU_clear_voting_mission
					}
				}
			}

			EDU_learn_to_annex_your_neighbours = yes # LITERACY RATE STUFF

			# Grab your Nuclear Reactor Enrichment Facilities
			add_to_variable = { ROOT.enrichment_facilities = FROM.enrichment_facilities }

			# Cleanup Auto-Influence Arrays
			if = { limit = { ROOT = { is_ai = no } }
				ROOT = {
					for_each_loop = {
						array = auto_influence_array
						index = i
						value = v

						# Clears Auto Influencer Who No Longer Exists
						if = { limit = { var:auto_influence_array^i = { exists = no } }
							log = "[GetDateText]: [ROOT.GetName]: [?var:auto_influence_array^i.GetName] var:auto_influence_array^i auto influencer removal request"
							var:auto_influence_array^i = {
								ROOT = {
									remove_auto_influencer_request = yes
									update_auto_influence_array = yes
									update_dirty_influence_var = yes
								}
							}
						}
					}
				}
			}
		}
	}

	on_peaceconference_ended = {
		effect = {
			if = {
				limit = {
					ROOT = {
						original_tag = ARM
					}
					FROM = {
						original_tag = TUR
					}
				}
				ROOT = {
					add_ideas = ARM_turkish_peasants
				}
			}
			if = {
				limit = {
					ROOT = { original_tag = USA }
					FROM = {
						original_tag = IRQ
						is_subject_of = USA
					}
				}
				set_global_flag = success_of_operation_iraqi_freedom
			}
			if = {
				limit = {
					IRQ = { has_completed_focus = IRQ_king_of_the_animal_kingdom }
					ROOT = { original_tag = SAU }
				}
				SAU = {
					release = ARA
					if = {
						limit = { has_global_flag = GAME_RULE_allow_colored_puppets }
						set_autonomy = {
							target = ARA
							autonomy_state = autonomy_puppet_state_colored
						}
					}
					else = {
						set_autonomy = {
							target = ARA
							autonomy_state = autonomy_puppet_state
						}
					}
				}


				# Achievements
				if = {
					limit = {
						ROOT = { original_tag = LBA }
						FROM = { original_tag = EGY }
					}
					ROOT = { set_country_flag = ribbon_libya_victory_over_egypt }
				}
				if = {
					limit = {
						ROOT = { original_tag = LBA }
						FROM = { original_tag = CHA }
					}
					ROOT = { set_country_flag = ribbon_libya_victory_over_chad }
				}
			}
		}
	}

	on_monthly = {
		effect = {
			# MD Custom On_Actions
			if = { limit = { NOT = { has_global_flag = on_monthly_done } }
				# Jan = 1, Feb = 2, March = 3, April = 4, May = 5,
				if = { limit = { check_variable = { global.month < 12 } }
					add_to_variable = { global.month = 1 }
				}
				else = {
					set_variable = { global.month = 1 }
				}

				if = {
					limit = { NOT = { has_global_flag = GAME_RULE_eu_disabled } }
					random_country = {
						limit = { has_idea = EU_member NOT = { has_global_flag = EU_gdp_updated } }
						set_EU_gdp = yes
						set_global_flag = { flag = EU_gdp_updated value = 1 }
					}
				}

				calculate_average_world_productivity = yes

				# National Updates:
				set_power_ranking_ideas_for_every_country = yes

				# Trigger Events for this year
				if = { limit = { check_variable = { global.month = 1 } }
					if = { limit = { is_debug = yes }
						log = "[GetDateText]: [THIS.GetName]: Run the On Yearly Monthly Check"
					}

					every_country = {
						if = {
							limit = {
								is_ai = yes
								OR = {
									has_idea = regional_power
									has_idea = large_power
									has_idea = great_power
									has_idea = superpower
								}
							}

							yearly_investment_targets_routine = yes
						}
						# Reduce the Printing Money Var
						if = { limit = { check_variable = { printing_money_var > 0 } }
							subtract_from_variable = { printing_money_var = 1 }
						}
					}

					# Execute and Start the Yearly ETD Events
					if = { limit = { is_debug = yes }
						log = "[GetDateText]: [THIS.GetName]: Triggering [?global.year] events"
					}
					meta_effect = {
						text = {
							trigger_year_[year]_events = yes
						}
						year = "[?global.year]"
					}
				}

				# Counter Terror System
				if = { limit = { check_variable = { global.month = 6 } }
					random_scope_in_array = {
						array = global.ct_states
						limit = {
							is_in_array = { global.ct_states = THIS }
							no_jihadist_government = yes
							has_country_flag = threat_level_critical
							NOT = {
								tag = ROJ
								tag = KUR
								if = {
									limit = { country_exists = SYR }
									tag = FSA
								}
								if = {
									limit = { country_exists = YEM }
									tag = HOU
								}
							}
							if = {
								limit = {
									OR = {
										tag = SYR
										tag = FSA
									}
								}
								NOT = { country_exists = NUS }
							}
							if = {
								limit = {
									OR = {
										tag = HOU
										tag = YEM
									}
								}
								NOT = { country_exists = AQY }
							}
							if = {
								limit = {
									tag = IRQ
								}
								NOT = { country_exists = ISI }
							}
							if = {
								limit = {
									tag = SOM
								}
								NOT = { country_exists = SHB }
							}
							if = {
								limit = {
									tag = AFG
								}
								NOT = { country_exists = TAL }
							}
							NOT = { has_country_flag = jihadist_uprising_imminent }
							NOT = {
								any_home_area_neighbor_country = {
									OR = {
										has_country_flag = jihadist_uprising_imminent
										has_civil_war = yes
									}
								}
							}
						}
						country_event = { id = terror.12 random_days = 50 }
					}
					random_scope_in_array = {
						array = global.ct_states
						limit = {
							no_jihadist_government = yes
							has_country_flag = threat_level_critical
							if = {
								limit = {
									OR = {
										tag = SYR
										tag = FSA
										tag = ROJ
									}
								}
								NOT = { country_exists = NUS }
							}
							if = {
								limit = {
									OR = {
										tag = HOU
										tag = YEM
									}
								}
								NOT = { country_exists = AQY }
							}
							if = {
								limit = {
									OR = {
										tag = KUR
										tag = IRQ
									}
								}
								NOT = { country_exists = ISI }
							}
							if = {
								limit = {
									tag = SOM
								}
								NOT = { country_exists = SHB }
							}
							if = {
								limit = {
									tag = AFG
								}
								NOT = { country_exists = TAL }
							}
							has_country_flag = jihadist_uprising_imminent
							NOT = {
								any_home_area_neighbor_country = {
									OR = {
										has_country_flag = jihadist_uprising_imminent
										has_civil_war = yes
									}
								}
							}
						}
						country_event = { id = terror.13 random_days = 50 }
					}
					update_international_system_gui = yes
				}

				# Calculate the Migrant Trigger
				if = {
					limit = { NOT = { has_global_flag = EUU_migrant_crisis_triggered } }
					set_temp_variable = { total_population_refugees = 0 }
					every_country = {
						limit = {
							OR = {
								is_african_nation = yes
								is_middle_eastern_nation = yes
							}
							OR = {
								has_war = yes
								has_civil_war = yes
								salafist_caliphate_are_in_power = yes
							}
						}
						set_temp_variable = { population_refugees = population_total }
						multiply_temp_variable = { population_refugees = 0.04 }
						add_to_temp_variable = { PREV.total_population_refugees = population_refugees }
					}

					if = { limit = { check_variable = { total_population_refugees > 50 } }
						set_global_flag = EUU_migrant_crisis_triggered
						if = {
							limit = {
								any_of_scopes = {
									array = global.EU_member
									is_ai = no
								}
							}
							random_scope_in_array = {
								array = global.EU_member
								limit = { is_ai = no }

								country_event = { id = EUevent.22 }
							}
						}
						else = {
							random_scope_in_array = {
								array = global.EU_member
								country_event = { id = EUevent.22 }
							}
						}
					}
				}

				# Monthly Single Fire Check
				every_country = {
					recalculate_party = yes
					set_counter_terror_influencer = yes
				}

				# On Monthly Flag:
				# Set this to 27 days to time out so that way February isn't missed
				set_global_flag = { flag = on_monthly_done value = 1 days = 27 }
				if = { limit = { is_debug = yes }
					log = "[GetDateText]: [THIS.GetName]: MD Monthly On_Action Triggered Month: [?global.month] Year: [?global.year]"
				}
			}
			productivity_growth_effect = yes

			# Research Configuration for AI
			if = { limit = { is_ai = yes }
				if = {
					limit = { check_variable = { gdp_total > GLOBAL.gdp_slot^9 } }
					set_temp_variable = { temp_research_slot = 9 }
				}
				else_if = {
					limit = { check_variable = { gdp_total > GLOBAL.gdp_slot^8 } }
					set_temp_variable = { temp_research_slot = 8 }
				}
				else_if = {
					limit = { check_variable = { gdp_total > GLOBAL.gdp_slot^7 } }
					set_temp_variable = { temp_research_slot = 7 }
				}
				else_if = {
					limit = { check_variable = { gdp_total > GLOBAL.gdp_slot^6 } }
					set_temp_variable = { temp_research_slot = 6 }
				}
				else_if = {
					limit = { check_variable = { gdp_total > GLOBAL.gdp_slot^5 } }
					set_temp_variable = { temp_research_slot = 5 }
				}
				else_if = {
					limit = { check_variable = { gdp_total > GLOBAL.gdp_slot^4 } }
					set_temp_variable = { temp_research_slot = 4 }
				}
				else_if = {
					limit = { check_variable = { gdp_total > GLOBAL.gdp_slot^3 } }
					set_temp_variable = { temp_research_slot = 3 }
				}
				else_if = {
					limit = { check_variable = { gdp_total > GLOBAL.gdp_slot^2 } }
					set_temp_variable = { temp_research_slot = 2 }
				}
				else = {
					set_temp_variable = { temp_research_slot = 1 }
				}

				if = {
					limit = { check_variable = { gdp_per_capita > GLOBAL.gdp_c_slot^6 } }
					add_to_temp_variable = { temp_research_slot = 6 }
				}
				else_if = {
					limit = { check_variable = { gdp_per_capita > GLOBAL.gdp_c_slot^5 } }
					add_to_temp_variable = { temp_research_slot = 5 }
				}
				else_if = {
					limit = { check_variable = { gdp_per_capita > GLOBAL.gdp_c_slot^4 } }
					add_to_temp_variable = { temp_research_slot = 4 }
				}
				else_if = {
					limit = { check_variable = { gdp_per_capita > GLOBAL.gdp_c_slot^3 } }
					add_to_temp_variable = { temp_research_slot = 3 }
				}
				else_if = {
					limit = { check_variable = { gdp_per_capita > GLOBAL.gdp_c_slot^2 } }
					add_to_temp_variable = { temp_research_slot = 2 }
				}
				else = {
					add_to_temp_variable = { temp_research_slot = 1 }
				}

				set_research_slots = temp_research_slot
			}
		}
	}
}

# Author(s): AngriestBird, TheBrokenDroid, Doolittle
missile_ui_update = {
	if = { limit = { NOT = { has_variable = global.missile_ui_updated } }
		set_variable = { global.missile_ui_updated = 0 }
	}
	add_to_variable = { global.missile_ui_updated = 1 }
}

#################################################
### effects for gui / buttons / trigger / loc ###
#################################################

### production gui ###

set_prod_display_arrays = {
	resize_array = { prod_1_display_array = 0 }
	resize_array = { prod_2_display_array = 0 }
	resize_array = { prod_3_display_array = 0 }
	resize_array = { prod_4_display_array = 0 }
	resize_array = { prod_5_display_array = 0 }
	resize_array = { prod_6_display_array = 0 }
	resize_array = { prod_7_display_array = 0 }
	resize_array = { prod_8_display_array = 0 }
	resize_array = { prod_9_display_array = 0 }
	resize_array = { prod_10_display_array = 0 }
	resize_array = { prod_11_display_array = 0 }
	resize_array = { prod_12_display_array = 0 }
	resize_array = { prod_13_display_array = 0 }
	resize_array = { prod_14_display_array = 0 }
	resize_array = { prod_15_display_array = 0 }

	if = {
		limit = {
			has_tech = GNSS1
		}
		add_to_array = { prod_11_display_array = global.prod_11_array^0 }
	}
	if = {
		limit = {
			has_tech = GNSS2
		}
		add_to_array = { prod_11_display_array = global.prod_11_array^1 }
	}
	if = {
		limit = {
			has_tech = GNSS3
		}
		add_to_array = { prod_11_display_array = global.prod_11_array^2 }
	}
	if = {
		limit = {
			has_tech = GNSS4
		}
		add_to_array = { prod_11_display_array = global.prod_11_array^3 }
	}
	if = {
		limit = {
			has_tech = GNSS5
		}
		add_to_array = { prod_11_display_array = global.prod_11_array^4 }
	}
	if = {
		limit = {
			has_tech = GNSS6
		}
		add_to_array = { prod_11_display_array = global.prod_11_array^5 }
	}
	if = {
		limit = {
			has_tech = GNSS7
		}
		add_to_array = { prod_11_display_array = global.prod_11_array^6 }
	}
	if = {
		limit = {
			has_tech = GNSS8
		}
		add_to_array = { prod_11_display_array = global.prod_11_array^7 }
	}
	if = {
		limit = {
			has_tech = COMSAT1
		}
		add_to_array = { prod_12_display_array = global.prod_12_array^0 }
	}
	if = {
		limit = {
			has_tech = COMSAT2
		}
		add_to_array = { prod_12_display_array = global.prod_12_array^1 }
	}
	if = {
		limit = {
			has_tech = COMSAT3
		}
		add_to_array = { prod_12_display_array = global.prod_12_array^2 }
	}
	if = {
		limit = {
			has_tech = COMSAT4
		}
		add_to_array = { prod_12_display_array = global.prod_12_array^3 }
	}
	if = {
		limit = {
			has_tech = COMSAT5
		}
		add_to_array = { prod_12_display_array = global.prod_12_array^4 }
	}
	if = {
		limit = {
			has_tech = COMSAT6
		}
		add_to_array = { prod_12_display_array = global.prod_12_array^5 }
	}
	if = {
		limit = {
			has_tech = COMSAT7
		}
		add_to_array = { prod_12_display_array = global.prod_12_array^6 }
	}
	if = {
		limit = {
			has_tech = COMSAT8
		}
		add_to_array = { prod_12_display_array = global.prod_12_array^7 }
	}
	if = {
		limit = {
			has_tech = SPYSAT1
		}
		add_to_array = { prod_13_display_array = global.prod_13_array^0 }
	}
	if = {
		limit = {
			has_tech = SPYSAT2
		}
		add_to_array = { prod_13_display_array = global.prod_13_array^1 }
	}
	if = {
		limit = {
			has_tech = SPYSAT3
		}
		add_to_array = { prod_13_display_array = global.prod_13_array^2 }
	}
	if = {
		limit = {
			has_tech = SPYSAT4
		}
		add_to_array = { prod_13_display_array = global.prod_13_array^3 }
	}
	if = {
		limit = {
			has_tech = SPYSAT5
		}
		add_to_array = { prod_13_display_array = global.prod_13_array^4 }
	}
	if = {
		limit = {
			has_tech = SPYSAT6
		}
		add_to_array = { prod_13_display_array = global.prod_13_array^5 }
	}
	if = {
		limit = {
			has_tech = SPYSAT7
		}
		add_to_array = { prod_13_display_array = global.prod_13_array^6 }
	}
	if = {
		limit = {
			has_tech = SPYSAT8
		}
		add_to_array = { prod_13_display_array = global.prod_13_array^7 }
	}
	if = {
		limit = {
			has_tech = KILLSAT1
		}
		add_to_array = { prod_14_display_array = global.prod_14_array^0 }
	}
	if = {
		limit = {
			has_tech = KILLSAT2
		}
		add_to_array = { prod_14_display_array = global.prod_14_array^1 }
	}
	if = {
		limit = {
			has_tech = KILLSAT3
		}
		add_to_array = { prod_14_display_array = global.prod_14_array^2 }
	}
	if = {
		limit = {
			has_tech = KILLSAT4
		}
		add_to_array = { prod_14_display_array = global.prod_14_array^3 }
	}
	if = {
		limit = {
			has_tech = KILLSAT5
		}
		add_to_array = { prod_14_display_array = global.prod_14_array^4 }
	}
	if = {
		limit = {
			has_tech = KILLSAT6
		}
		add_to_array = { prod_14_display_array = global.prod_14_array^5 }
	}
	if = {
		limit = {
			has_tech = OLV1
		}
		add_to_array = { prod_10_display_array = global.prod_10_array^0 }
	}
	if = {
		limit = {
			has_tech = OLV2
		}
		add_to_array = { prod_10_display_array = global.prod_10_array^1 }
	}
	if = {
		limit = {
			has_tech = OLV3
		}
		add_to_array = { prod_10_display_array = global.prod_10_array^2 }
	}
	if = {
		limit = {
			has_tech = OLV4
		}
		add_to_array = { prod_10_display_array = global.prod_10_array^3 }
	}
	if = {
		limit = {
			has_tech = OLV5
		}
		add_to_array = { prod_10_display_array = global.prod_10_array^4 }
	}
	if = {
		limit = {
			has_tech = OLV6
		}
		add_to_array = { prod_10_display_array = global.prod_10_array^5 }
	}
	if = {
		limit = {
			has_tech = OLV7
		}
		add_to_array = { prod_10_display_array = global.prod_10_array^6 }
	}
	if = {
		limit = {
			has_tech = OLV8
		}
		add_to_array = { prod_10_display_array = global.prod_10_array^7 }
	}
}

clear_prod_display_arrays = {
	clr_country_flag = missile_production_type_1
	clr_country_flag = missile_production_type_2
	clr_country_flag = missile_production_type_3
	clr_country_flag = missile_production_type_4
	clr_country_flag = missile_production_type_5
	clr_country_flag = missile_production_type_6
	clr_country_flag = missile_production_type_7
	clr_country_flag = missile_production_type_8
	clr_country_flag = missile_production_type_9
	clr_country_flag = missile_production_type_10
	clr_country_flag = missile_production_type_11
	clr_country_flag = missile_production_type_12
	clr_country_flag = missile_production_type_13
	clr_country_flag = missile_production_type_14
	clr_country_flag = missile_production_type_15
	resize_array = { prod_1_display_array = 0 }
	resize_array = { prod_2_display_array = 0 }
	resize_array = { prod_3_display_array = 0 }
	resize_array = { prod_4_display_array = 0 }
	resize_array = { prod_5_display_array = 0 }
	resize_array = { prod_6_display_array = 0 }
	resize_array = { prod_7_display_array = 0 }
	resize_array = { prod_8_display_array = 0 }
	resize_array = { prod_9_display_array = 0 }
	resize_array = { prod_10_display_array = 0 }
	resize_array = { prod_11_display_array = 0 }
	resize_array = { prod_12_display_array = 0 }
	resize_array = { prod_13_display_array = 0 }
	resize_array = { prod_14_display_array = 0 }
	resize_array = { prod_15_display_array = 0 }
	clear_array = prod_1_display_array
	clear_array = prod_2_display_array
	clear_array = prod_3_display_array
	clear_array = prod_4_display_array
	clear_array = prod_5_display_array
	clear_array = prod_6_display_array
	clear_array = prod_7_display_array
	clear_array = prod_8_display_array
	clear_array = prod_9_display_array
	clear_array = prod_10_display_array
	clear_array = prod_11_display_array
	clear_array = prod_12_display_array
	clear_array = prod_13_display_array
	clear_array = prod_14_display_array
	clear_array = prod_15_display_array
}

# function: calculate_production_vars_10
# purpose: This function correlates to the production of ICBMs so it is slot 1
# parameters/variables:
# - var_gui_prod_1_amount = the total number of missile to be built
# - var_gui_prod_1_CIC_use = the total number of civilian industry to be used for building the missile
# - var_gui_prod_1_price_total = the total unit cost of the missile
# - var_gui_prod_1_CIC_total = Total assigned CIC
# - var_gui_prod_1_CIC_days = The total days for the production mission
# - var_gui_prod_1_days_unit = The default number of days for this type of ICBM (Basic: 60)
# --------
# How to convert to money fully:
# 1. Take the price and amplify that. You can find this in common/scripted_effects/00_missiles_models.txt under set_all_prod_arrays
# 2. Remove all of the references to the CIC variable for the current production type
# - look up the variable name 1_CIC and you should be able to find all references
# 3. Change increase_CIC_1_button_click to allow you to change the amount of money you're throwing at the missile production
# 4. Localization needs to be updated to show the display change (UI as well but Bird can help with this) refer to line 33 in MD_missiles_gui_l_english
#
# ----

# TODO: If you have the gumption the arrays need to be culled because there's about three dozen or so of them that aren't needed
### OLV
calculate_production_vars_10 = {
	clamp_variable = { var = var_gui_prod_10_amount min = 1 max = 5000 }
	clamp_variable = { var = prod_10_multiplier min = 1 max = var_gui_prod_10_amount }
	# Initial Price of Production
	set_variable = { var_gui_prod_10_price_total = var_gui_prod_10_price_unit }
	multiply_variable = { var_gui_prod_10_price_total = var_gui_prod_10_amount }
	set_temp_variable = { var_gui_prod_10_price_total_multiplier = prod_10_multiplier }
	multiply_temp_variable = { var_gui_prod_10_price_total_multiplier = var_gui_prod_10_price_unit }
	add_to_variable = { var_gui_prod_10_price_total = var_gui_prod_10_price_total_multiplier }

	# Days
	set_variable = { var_gui_prod_10_days = var_gui_prod_10_amount }
	multiply_variable = { var_gui_prod_10_days = var_gui_prod_10_days_unit }
	divide_variable = { var_gui_prod_10_days = prod_10_multiplier }

	set_temp_variable = { modifier_10_prod = 1 }
	subtract_from_temp_variable = { modifier_10_prod = modifier@olv_production_speed_modifier }
	multiply_variable = { var_gui_prod_10_days = modifier_10_prod }
	round_variable = var_gui_prod_10_days

	clamp_variable = { var = var_gui_prod_10_days min = 1 }
	clamp_variable = { var = var_gui_prod_10_price_total min = var_gui_prod_10_price_unit }
	clamp_variable = { var = var_gui_prod_10_amount min = 1 }
}
### GNSS
calculate_production_vars_11 = {
	clamp_variable = { var = var_gui_prod_11_amount min = 1 max = 5000 }
	clamp_variable = { var = prod_11_multiplier min = 1 max = var_gui_prod_11_amount }
	# Initial Price of Production
	set_variable = { var_gui_prod_11_price_total = var_gui_prod_11_price_unit }
	multiply_variable = { var_gui_prod_11_price_total = var_gui_prod_11_amount }
	set_temp_variable = { var_gui_prod_11_price_total_multiplier = prod_11_multiplier }
	multiply_temp_variable = { var_gui_prod_11_price_total_multiplier = var_gui_prod_11_price_unit }
	add_to_variable = { var_gui_prod_11_price_total = var_gui_prod_11_price_total_multiplier }

	# Days
	set_variable = { var_gui_prod_11_days = var_gui_prod_11_amount }
	multiply_variable = { var_gui_prod_11_days = var_gui_prod_11_days_unit }
	divide_variable = { var_gui_prod_11_days = prod_11_multiplier }

	set_temp_variable = { modifier_11_prod = 1 }
	subtract_from_temp_variable = { modifier_11_prod = modifier@gnss_production_speed_modifier }
	multiply_variable = { var_gui_prod_11_days = modifier_11_prod }
	round_variable = var_gui_prod_11_days

	clamp_variable = { var = var_gui_prod_11_days min = 1 }
	clamp_variable = { var = var_gui_prod_11_price_total min = var_gui_prod_11_price_unit }
	clamp_variable = { var = var_gui_prod_11_amount min = 1 }
}
### COMSAT
calculate_production_vars_12 = {
	clamp_variable = { var = var_gui_prod_12_amount min = 1 max = 5000 }
	clamp_variable = { var = prod_12_multiplier min = 1 max = var_gui_prod_12_amount }
	# Initial Price of Production
	set_variable = { var_gui_prod_12_price_total = var_gui_prod_12_price_unit }
	multiply_variable = { var_gui_prod_12_price_total = var_gui_prod_12_amount }
	set_temp_variable = { var_gui_prod_12_price_total_multiplier = prod_12_multiplier }
	multiply_temp_variable = { var_gui_prod_12_price_total_multiplier = var_gui_prod_12_price_unit }
	add_to_variable = { var_gui_prod_12_price_total = var_gui_prod_12_price_total_multiplier }

	# Days
	set_variable = { var_gui_prod_12_days = var_gui_prod_12_amount }
	multiply_variable = { var_gui_prod_12_days = var_gui_prod_12_days_unit }
	divide_variable = { var_gui_prod_12_days = prod_12_multiplier }

	set_temp_variable = { modifier_12_prod = 1 }
	subtract_from_temp_variable = { modifier_12_prod = modifier@comsat_production_speed_modifier }
	multiply_variable = { var_gui_prod_12_days = modifier_12_prod }
	round_variable = var_gui_prod_12_days

	clamp_variable = { var = var_gui_prod_12_days min = 1 }
	clamp_variable = { var = var_gui_prod_12_price_total min = var_gui_prod_12_price_unit }
	clamp_variable = { var = var_gui_prod_12_amount min = 1 }
}
### SPYSAT
calculate_production_vars_13 = {
	clamp_variable = { var = var_gui_prod_13_amount min = 1 max = 5000 }
	clamp_variable = { var = prod_13_multiplier min = 1 max = var_gui_prod_13_amount }
	# Initial Price of Production
	set_variable = { var_gui_prod_13_price_total = var_gui_prod_13_price_unit }
	multiply_variable = { var_gui_prod_13_price_total = var_gui_prod_13_amount }
	set_temp_variable = { var_gui_prod_13_price_total_multiplier = prod_13_multiplier }
	multiply_temp_variable = { var_gui_prod_13_price_total_multiplier = var_gui_prod_13_price_unit }
	add_to_variable = { var_gui_prod_13_price_total = var_gui_prod_13_price_total_multiplier }

	# Days
	set_variable = { var_gui_prod_13_days = var_gui_prod_13_amount }
	multiply_variable = { var_gui_prod_13_days = var_gui_prod_13_days_unit }
	divide_variable = { var_gui_prod_13_days = prod_13_multiplier }

	set_temp_variable = { modifier_13_prod = 1 }
	subtract_from_temp_variable = { modifier_13_prod = modifier@spysat_production_speed_modifier }
	multiply_variable = { var_gui_prod_13_days = modifier_13_prod }
	round_variable = var_gui_prod_13_days

	clamp_variable = { var = var_gui_prod_13_days min = 1 }
	clamp_variable = { var = var_gui_prod_13_price_total min = var_gui_prod_13_price_unit }
	clamp_variable = { var = var_gui_prod_13_amount min = 1 }
}
### KILLSAT
calculate_production_vars_14 = {
	clamp_variable = { var = var_gui_prod_14_amount min = 1 max = 5000 }
	clamp_variable = { var = prod_14_multiplier min = 1 max = var_gui_prod_14_amount }
	# Initial Price of Production
	set_variable = { var_gui_prod_14_price_total = var_gui_prod_14_price_unit }
	multiply_variable = { var_gui_prod_14_price_total = var_gui_prod_14_amount }
	set_temp_variable = { var_gui_prod_14_price_total_multiplier = prod_14_multiplier }
	multiply_temp_variable = { var_gui_prod_14_price_total_multiplier = var_gui_prod_14_price_unit }
	add_to_variable = { var_gui_prod_14_price_total = var_gui_prod_14_price_total_multiplier }

	# Days
	set_variable = { var_gui_prod_14_days = var_gui_prod_14_amount }
	multiply_variable = { var_gui_prod_14_days = var_gui_prod_14_days_unit }
	divide_variable = { var_gui_prod_14_days = prod_14_multiplier }

	set_temp_variable = { modifier_14_prod = 1 }
	subtract_from_temp_variable = { modifier_14_prod = modifier@killsat_production_speed_modifier }
	multiply_variable = { var_gui_prod_14_days = modifier_14_prod }
	round_variable = var_gui_prod_14_days

	clamp_variable = { var = var_gui_prod_14_days min = 1 }
	clamp_variable = { var = var_gui_prod_14_price_total min = var_gui_prod_14_price_unit }
	clamp_variable = { var = var_gui_prod_14_amount min = 1 }
}
### Rods
calculate_production_vars_15 = {
	clamp_variable = { var = var_gui_prod_15_amount min = 1 max = 5000 }
	clamp_variable = { var = prod_15_multiplier min = 1 max = var_gui_prod_15_amount }
	# Initial Price of Production
	set_variable = { var_gui_prod_15_price_total = var_gui_prod_15_price_unit }
	multiply_variable = { var_gui_prod_15_price_total = var_gui_prod_15_amount }
	set_temp_variable = { var_gui_prod_15_price_total_multiplier = prod_15_multiplier }
	multiply_temp_variable = { var_gui_prod_15_price_total_multiplier = var_gui_prod_15_price_unit }
	add_to_variable = { var_gui_prod_15_price_total = var_gui_prod_15_price_total_multiplier }

	# Days
	set_variable = { var_gui_prod_15_days = var_gui_prod_15_amount }
	multiply_variable = { var_gui_prod_15_days = var_gui_prod_15_days_unit }
	divide_variable = { var_gui_prod_15_days = prod_15_multiplier }

	set_temp_variable = { modifier_15_prod = 1 }
	subtract_from_temp_variable = { modifier_15_prod = modifier@rods_production_speed_modifier }
	multiply_variable = { var_gui_prod_15_days = modifier_15_prod }
	round_variable = var_gui_prod_15_days

	clamp_variable = { var = var_gui_prod_15_days min = 1 }
	clamp_variable = { var = var_gui_prod_15_price_total min = var_gui_prod_15_price_unit }
	clamp_variable = { var = var_gui_prod_15_amount min = 1 }
}

######################
### satellites gui ###
######################

set_satellites_gui = {
	set_GNSS_satellites = yes
	set_COM_satellites = yes
	set_SPY_satellites = yes
	set_KILL_satellites = yes
	set_RODS_satellites = yes
}

set_GNSS_satellites = {
	set_variable = { var_GNSS_sat_total = 0 }
	add_to_variable = { var_GNSS_sat_total = GNSS_satellite_array^0 }
	add_to_variable = { var_GNSS_sat_total = GNSS_satellite_array^1 }
	add_to_variable = { var_GNSS_sat_total = GNSS_satellite_array^2 }
	add_to_variable = { var_GNSS_sat_total = GNSS_satellite_array^3 }
	add_to_variable = { var_GNSS_sat_total = GNSS_satellite_array^4 }
	add_to_variable = { var_GNSS_sat_total = GNSS_satellite_array^5 }
	add_to_variable = { var_GNSS_sat_total = GNSS_satellite_array^6 }
	add_to_variable = { var_GNSS_sat_total = GNSS_satellite_array^7 }
}

set_COM_satellites = {
	set_variable = { var_COM_sat_total = 0 }
	add_to_variable = { var_COM_sat_total = COM_satellite_array^0 }
	add_to_variable = { var_COM_sat_total = COM_satellite_array^1 }
	add_to_variable = { var_COM_sat_total = COM_satellite_array^2 }
	add_to_variable = { var_COM_sat_total = COM_satellite_array^3 }
	add_to_variable = { var_COM_sat_total = COM_satellite_array^4 }
	add_to_variable = { var_COM_sat_total = COM_satellite_array^5 }
	add_to_variable = { var_COM_sat_total = COM_satellite_array^6 }
	add_to_variable = { var_COM_sat_total = COM_satellite_array^7 }
}

set_SPY_satellites = {
	set_variable = { var_SPY_sat_total = 0 }
	add_to_variable = { var_SPY_sat_total = SPY_satellite_array^0 }
	add_to_variable = { var_SPY_sat_total = SPY_satellite_array^1 }
	add_to_variable = { var_SPY_sat_total = SPY_satellite_array^2 }
	add_to_variable = { var_SPY_sat_total = SPY_satellite_array^3 }
	add_to_variable = { var_SPY_sat_total = SPY_satellite_array^4 }
	add_to_variable = { var_SPY_sat_total = SPY_satellite_array^5 }
	add_to_variable = { var_SPY_sat_total = SPY_satellite_array^6 }
	add_to_variable = { var_SPY_sat_total = SPY_satellite_array^7 }
}

set_KILL_satellites = {
	set_variable = { var_KILL_sat_total = 0 }
	add_to_variable = { var_KILL_sat_total = KILL_satellite_array^0 }
	add_to_variable = { var_KILL_sat_total = KILL_satellite_array^1 }
	add_to_variable = { var_KILL_sat_total = KILL_satellite_array^2 }
	add_to_variable = { var_KILL_sat_total = KILL_satellite_array^3 }
	add_to_variable = { var_KILL_sat_total = KILL_satellite_array^4 }
	add_to_variable = { var_KILL_sat_total = KILL_satellite_array^5 }
}

set_RODS_satellites = {
	set_variable = { var_RODS_sat_total = 0 }
	add_to_variable = { var_RODS_sat_total = RODS_satellite_array^0 }
	add_to_variable = { var_RODS_sat_total = RODS_satellite_array^1 }
	add_to_variable = { var_RODS_sat_total = RODS_satellite_array^2 }
}

### satellite systems

set_GNSS_mil_systems = {
	clear_array = GNSS_mil_systems_array
	add_to_array = { GNSS_mil_systems_array = 0 }
	add_to_array = { GNSS_mil_systems_array = 1 }
	add_to_array = { GNSS_mil_systems_array = 2 }
	add_to_array = { GNSS_mil_systems_array = 3 }
	add_to_array = { GNSS_mil_systems_array = 4 }
	add_to_array = { GNSS_mil_systems_array = 5 }
	add_to_array = { GNSS_mil_systems_array = 6 }
	add_to_array = { GNSS_mil_systems_array = 7 }
}
set_GNSS_civ_systems = {
	clear_array = GNSS_civ_systems_array
	add_to_array = { GNSS_civ_systems_array = 0 }
	add_to_array = { GNSS_civ_systems_array = 1 }
	add_to_array = { GNSS_civ_systems_array = 2 }
	add_to_array = { GNSS_civ_systems_array = 3 }
	add_to_array = { GNSS_civ_systems_array = 4 }
	add_to_array = { GNSS_civ_systems_array = 5 }
	add_to_array = { GNSS_civ_systems_array = 6 }
	add_to_array = { GNSS_civ_systems_array = 7 }
}
set_COM_mil_systems = {
	clear_array = COM_mil_systems_array
	add_to_array = { COM_mil_systems_array = 0 }
	add_to_array = { COM_mil_systems_array = 1 }
	add_to_array = { COM_mil_systems_array = 2 }
	add_to_array = { COM_mil_systems_array = 3 }
	add_to_array = { COM_mil_systems_array = 4 }
	add_to_array = { COM_mil_systems_array = 5 }
	add_to_array = { COM_mil_systems_array = 6 }
	add_to_array = { COM_mil_systems_array = 7 }
}
set_COM_civ_systems = {
	clear_array = COM_civ_systems_array
	add_to_array = { COM_civ_systems_array = 0 }
	add_to_array = { COM_civ_systems_array = 1 }
	add_to_array = { COM_civ_systems_array = 2 }
	add_to_array = { COM_civ_systems_array = 3 }
	add_to_array = { COM_civ_systems_array = 4 }
	add_to_array = { COM_civ_systems_array = 5 }
	add_to_array = { COM_civ_systems_array = 6 }
	add_to_array = { COM_civ_systems_array = 7 }
}
set_SPY_mil_systems = {
	clear_array = SPY_mil_systems_array
	add_to_array = { SPY_mil_systems_array = 0 }
	add_to_array = { SPY_mil_systems_array = 1 }
	add_to_array = { SPY_mil_systems_array = 2 }
	add_to_array = { SPY_mil_systems_array = 3 }
	add_to_array = { SPY_mil_systems_array = 4 }
	add_to_array = { SPY_mil_systems_array = 5 }
	add_to_array = { SPY_mil_systems_array = 6 }
	add_to_array = { SPY_mil_systems_array = 7 }
}
set_SPY_civ_systems = {
	clear_array = SPY_civ_systems_array
	add_to_array = { SPY_civ_systems_array = 0 }
	add_to_array = { SPY_civ_systems_array = 1 }
	add_to_array = { SPY_civ_systems_array = 2 }
	add_to_array = { SPY_civ_systems_array = 3 }
	add_to_array = { SPY_civ_systems_array = 4 }
	add_to_array = { SPY_civ_systems_array = 5 }
	add_to_array = { SPY_civ_systems_array = 6 }
	add_to_array = { SPY_civ_systems_array = 7 }
}

set_COM_sat_receiver_tech_array = {
	add_to_array = { COM_sat_receiver_tech_array = 10 }
	add_to_array = { COM_sat_receiver_tech_array = 20 }
	add_to_array = { COM_sat_receiver_tech_array = 30 }
	add_to_array = { COM_sat_receiver_tech_array = 40 }
	add_to_array = { COM_sat_receiver_tech_array = 50 }
	add_to_array = { COM_sat_receiver_tech_array = 60 }
	add_to_array = { COM_sat_receiver_tech_array = 70 }
	add_to_array = { COM_sat_receiver_tech_array = 80 }
}

update_sat_systems_stats = {
	check_sat_systems_min_sat_num = yes
	set_satellites_gui = yes
	update_GNSS_system_stats = yes
	update_COM_system_stats = yes
	update_SPY_system_stats = yes
	calculate_GNSS_mil_gui_vars = yes
	calculate_GNSS_civ_gui_vars = yes
	calculate_COM_mil_gui_vars = yes
	calculate_COM_civ_gui_vars = yes
	calculate_SPY_mil_gui_vars = yes
	calculate_SPY_civ_gui_vars = yes
	add_access_GNSS_mil_vars = yes
	add_access_GNSS_civ_vars = yes
	add_access_COM_mil_vars = yes
	add_access_COM_civ_vars = yes
	add_access_SPY_mil_vars = yes
	add_access_SPY_civ_vars = yes
	force_update_dynamic_modifier = yes
}

check_sat_systems_min_sat_num = {
	#GNSS
	if = {
		limit = {
			check_variable = {
				GNSS_satellite_array^var_GNSS_mil_system_idx < global.GNSS_sat_system_min_array^var_GNSS_mil_system_idx
			}
			check_variable = {
				var_GNSS_mil_system_idx > 0
			}
		}
		subtract_from_variable = { var_GNSS_mil_system_idx = 1 }
		ROOT = { news_event = { id = satellites.2 } }
	}
	if = {
		limit = {
			check_variable = {
				GNSS_satellite_array^var_GNSS_civ_system_idx < global.GNSS_sat_system_min_array^var_GNSS_civ_system_idx
			}
			check_variable = {
				var_GNSS_civ_system_idx > 0
			}
		}
		subtract_from_variable = { var_GNSS_civ_system_idx = 1 }
		ROOT = { news_event = { id = satellites.3 } }
	}
	#COM
	if = {
		limit = {
			check_variable = {
				COM_satellite_array^var_COM_mil_system_idx < global.COM_sat_system_min_array^var_COM_mil_system_idx
			}
			check_variable = {
				var_COM_mil_system_idx > 0
			}
		}
		subtract_from_variable = { var_COM_mil_system_idx = 1 }
		ROOT = { news_event = { id = satellites.4 } }
	}
	if = {
		limit = {
			check_variable = {
				COM_satellite_array^var_COM_civ_system_idx < global.COM_sat_system_min_array^var_COM_civ_system_idx
			}
			check_variable = {
				var_COM_civ_system_idx > 0
			}
		}
		subtract_from_variable = { var_COM_civ_system_idx = 1 }
		ROOT = { news_event = { id = satellites.5 } }
	}
	#SPY
	if = {
		limit = {
			check_variable = {
				SPY_satellite_array^var_SPY_mil_system_idx < global.SPY_sat_system_min_array^var_SPY_mil_system_idx
			}
			check_variable = {
				var_SPY_mil_system_idx > 0
			}
		}
		subtract_from_variable = { var_SPY_mil_system_idx = 1 }
		ROOT = { news_event = { id = satellites.6 } }
	}
	if = {
		limit = {
			check_variable = {
				SPY_satellite_array^var_SPY_civ_system_idx < global.SPY_sat_system_min_array^var_SPY_civ_system_idx
			}
			check_variable = {
				var_SPY_civ_system_idx > 0
			}
		}
		subtract_from_variable = { var_SPY_civ_system_idx = 1 }
		ROOT = { news_event = { id = satellites.7 } }
	}
}

update_GNSS_system_stats = {
	### GNSS mil system
	set_variable = { var_GNSS_mil_sat_system_num = GNSS_satellite_array^var_GNSS_mil_system_idx }

	if = {
		limit = {
			check_variable = {
				var_GNSS_mil_sat_system_num > var_GNSS_mil_sat_system_max
			}
		}
		set_variable = { var_GNSS_mil_sat_system_num = var_GNSS_mil_sat_system_max }
		set_variable = { var_GNSS_mil_coverage = 1.0 }
		set_variable = { var_GNSS_mil_SBAS_num = 0 }
		set_variable = { var_GNSS_mil_SBAS_bonus = 0 }
	}
	else = {
		set_variable = { var_GNSS_mil_coverage = var_GNSS_mil_sat_system_num }
		divide_variable = { var_GNSS_mil_coverage = var_GNSS_mil_sat_system_max }
		update_GNSS_SBAS = yes
	}
	set_variable = { var_GNSS_mil_sat_system_bonus = var_GNSS_mil_coverage }
	add_to_variable = { var_GNSS_mil_sat_system_bonus = var_GNSS_mil_SBAS_bonus }
	if = {
		limit = {
			check_variable = {
				var_GNSS_mil_sat_system_bonus < 0
			}
		}
		set_variable = { var_GNSS_mil_sat_system_bonus = 0 }
	}
	### GNSS civ system
	set_variable = { var_GNSS_civ_sat_system_num = GNSS_satellite_array^var_GNSS_civ_system_idx }
	if = {
		limit = {
			check_variable = {
				var_GNSS_civ_sat_system_num > var_GNSS_civ_sat_system_max
			}
		}
		set_variable = { var_GNSS_civ_sat_system_num = var_GNSS_civ_sat_system_max }
		set_variable = { var_GNSS_civ_coverage = 1.0 }
		set_variable = { var_GNSS_civ_SBAS_num = 0 }
		set_variable = { var_GNSS_civ_SBAS_bonus = 0 }
	}
	else = {
		set_variable = { var_GNSS_civ_coverage = var_GNSS_civ_sat_system_num }
		divide_variable = { var_GNSS_civ_coverage = var_GNSS_civ_sat_system_max }
		update_GNSS_SBAS = yes
	}
	set_variable = { var_GNSS_civ_sat_system_bonus = var_GNSS_civ_coverage }
	add_to_variable = { var_GNSS_civ_sat_system_bonus = var_GNSS_civ_SBAS_bonus }
	if = {
		limit = {
			check_variable = {
				var_GNSS_civ_sat_system_bonus < 0
			}
		}
		set_variable = { var_GNSS_civ_sat_system_bonus = 0 }
	}
}

update_GNSS_SBAS = {
	### GNSS mil
	set_variable = { var_GNSS_mil_SBAS_num = var_GNSS_sat_total }
	subtract_from_variable = { var_GNSS_mil_SBAS_num = var_GNSS_mil_sat_system_num }
	set_variable = { var_GNSS_mil_SBAS_bonus = var_GNSS_mil_SBAS_num }
	divide_variable = { var_GNSS_mil_SBAS_bonus = 100 }
	set_temp_variable = { temp1 = var_GNSS_mil_coverage }
	set_temp_variable = { temp2 = 1 }
	subtract_from_temp_variable = { temp2 = temp1 }
	if = {
		limit = {
			check_variable = {
				temp2 < var_GNSS_mil_SBAS_bonus
			}
		}
		set_variable = { var_GNSS_mil_SBAS_bonus = temp2 }
	}
	###GNSS civ
	set_variable = { var_GNSS_civ_SBAS_num = var_GNSS_sat_total }
	subtract_from_variable = { var_GNSS_civ_SBAS_num = var_GNSS_civ_sat_system_num }
	#subtract_from_variable = { var_GNSS_civ_SBAS_num = var_GNSS_mil_sat_system_num }
	set_variable = { var_GNSS_civ_SBAS_bonus = var_GNSS_civ_SBAS_num }
	divide_variable = { var_GNSS_civ_SBAS_bonus = 100 }
	set_temp_variable = { temp1 = var_GNSS_civ_coverage }
	set_temp_variable = { temp2 = 1 }
	subtract_from_temp_variable = { temp2 = temp1 }
	if = {
		limit = {
			check_variable = {
				temp2 < var_GNSS_civ_SBAS_bonus
			}
		}
		set_variable = { var_GNSS_civ_SBAS_bonus = temp2 }
	}
}

update_COM_system_stats = {
	set_variable = { var_COM_mil_sat_system_num = 0 }
	set_variable = { var_COM_mil_receiver_cap = 0 }
	set_variable = { var_COM_civ_sat_system_num = 0 }
	set_variable = { var_COM_civ_receiver_cap = 0 }
	for_each_loop = {
		array = COM_satellite_array
		### COM mil system
		if = {
			limit = {
				OR = {
					check_variable = { i = var_COM_mil_system_idx }
					check_variable = { i > var_COM_mil_system_idx }
				}
			}
				add_to_variable = { var_COM_mil_sat_system_num = COM_satellite_array^i }
				set_temp_variable = { temp1 = COM_satellite_array^i }
				multiply_temp_variable = { temp1 = COM_sat_receiver_tech_array^i }
				add_to_variable = { var_COM_mil_receiver_cap = temp1 }
		}
		### COM civ system
		if = {
			limit = {
				OR = {
					check_variable = { i = var_COM_civ_system_idx }
					check_variable = { i > var_COM_civ_system_idx }
				}
			}
			add_to_variable = { var_COM_civ_sat_system_num = COM_satellite_array^i }
			set_temp_variable = { temp2 = COM_satellite_array^i }
			multiply_temp_variable = { temp2 = COM_sat_receiver_tech_array^i }
			add_to_variable = { var_COM_civ_receiver_cap = temp2 }
		}
	}
	if = {
		limit = {
			check_variable = {
				var_COM_mil_sat_system_num > var_COM_mil_sat_system_max
			}
		}
		#set_variable = { var_COM_mil_sat_system_num = var_COM_mil_sat_system_max }
		set_variable = { var_COM_mil_coverage = 1.0 }
	}
	else = {
		set_variable = { var_COM_mil_coverage = var_COM_mil_sat_system_num }
		divide_variable = { var_COM_mil_coverage = var_COM_mil_sat_system_max }
	}
	set_variable = { var_COM_mil_receiver_num = num_battalions }
	add_to_variable = { var_COM_mil_receiver_num = num_ships }
	add_to_variable = { var_COM_mil_receiver_num = num_deployed_planes }
	add_treaty_COM_mil_receiver_num = yes
	set_variable = { var_sat_network_traffic_mil = var_COM_mil_receiver_num }
	divide_variable = { var_sat_network_traffic_mil = var_COM_mil_receiver_cap }
	set_variable = { var_COM_mil_sat_system_bonus = var_COM_mil_coverage }
	if = {
		limit = {
			check_variable = {
				var_sat_network_traffic_mil > 1
			}
		}
		set_temp_variable = { temp3 = var_sat_network_traffic_mil }
		subtract_from_temp_variable = { temp3 = 1 }
		subtract_from_variable = { var_COM_mil_sat_system_bonus = temp3 }
		if = {
			limit = {
				check_variable = {
					var_COM_mil_sat_system_bonus < 0
				}
			}
			set_variable = { var_COM_mil_sat_system_bonus = 0 }
		}
	}
	if = {
		limit = {
			check_variable = {
				var_COM_civ_sat_system_num > var_COM_civ_sat_system_max
			}
		}
		#set_variable = { var_COM_civ_sat_system_num = var_COM_civ_sat_system_max }
		set_variable = { var_COM_civ_coverage = 1.0 }
	}
	else = {
		set_variable = { var_COM_civ_coverage = var_COM_civ_sat_system_num }
		divide_variable = { var_COM_civ_coverage = var_COM_civ_sat_system_max }
	}
	set_variable = { var_COM_civ_receiver_num = num_controlled_states }
	multiply_variable = { var_COM_civ_receiver_num = 100 }
	add_treaty_COM_civ_receiver_num = yes
	set_variable = { var_sat_network_traffic_civ = var_COM_civ_receiver_num }
	divide_variable = { var_sat_network_traffic_civ = var_COM_civ_receiver_cap }
	set_variable = { var_COM_civ_sat_system_bonus = var_COM_civ_coverage }
	if = {
		limit = {
			check_variable = {
				var_sat_network_traffic_civ > 1
			}
		}
		set_temp_variable = { temp4 = var_sat_network_traffic_civ }
		subtract_from_temp_variable = { temp4 = 1 }
		subtract_from_variable = { var_COM_civ_sat_system_bonus = temp4 }
		if = {
			limit = {
				check_variable = {
					var_COM_civ_sat_system_bonus < 0
				}
			}
			set_variable = { var_COM_civ_sat_system_bonus = 0 }
		}
	}
}

### receiver from treaties (access granted)
add_treaty_COM_mil_receiver_num = {
	set_variable = { var_treaty_COM_mil_receiver_num = 0 }
	for_each_scope_loop = {
	#for_each_loop = {
		array = COM_mil_treaty_array
		add_to_variable = { PREV.var_treaty_COM_mil_receiver_num = THIS.num_battalions }
		add_to_variable = { PREV.var_treaty_COM_mil_receiver_num = THIS.num_ships }
		add_to_variable = { PREV.var_treaty_COM_mil_receiver_num = THIS.num_deployed_planes }
	}
	add_to_variable = { var_COM_mil_receiver_num = var_treaty_COM_mil_receiver_num }
}
add_treaty_COM_civ_receiver_num = {
	set_variable = { var_treaty_COM_civ_receiver_num = 0 }
	for_each_scope_loop = {
	#for_each_loop = {
		array = COM_civ_treaty_array
		set_variable = { PREV.var_treaty_COM_civ_receiver_num = THIS.num_controlled_states }
		multiply_variable = { PREV.var_treaty_COM_civ_receiver_num = 100 }
	}
	add_to_variable = { var_COM_civ_receiver_num = var_treaty_COM_civ_receiver_num }
}
###

update_SPY_system_stats = {
	### SPY mil system
	set_variable = { var_SPY_mil_sat_system_num = SPY_satellite_array^var_SPY_mil_system_idx }
	if = {
		limit = {
			check_variable = {
				var_SPY_mil_sat_system_num > var_SPY_mil_sat_system_max
			}
		}
		set_variable = { var_SPY_mil_sat_system_num = var_SPY_mil_sat_system_max }
		set_variable = { var_SPY_mil_coverage = 1.0 }
	}
	else = {
		set_variable = { var_SPY_mil_coverage = var_SPY_mil_sat_system_num }
		divide_variable = { var_SPY_mil_coverage = var_SPY_mil_sat_system_max }
	}
	set_variable = { var_SPY_mil_sat_system_bonus = var_SPY_mil_coverage }
	if = {
		limit = {
			check_variable = {
				var_SPY_mil_sat_system_bonus < 0
			}
		}
		set_variable = { var_SPY_mil_sat_system_bonus = 0 }
	}
	update_SPY_mission_num = yes
	### SPY civ system
	set_variable = { var_SPY_civ_sat_system_num = SPY_satellite_array^var_SPY_civ_system_idx }
	if = {
		limit = {
			check_variable = {
				var_SPY_civ_sat_system_num > var_SPY_civ_sat_system_max
			}
		}
		set_variable = { var_SPY_civ_sat_system_num = var_SPY_civ_sat_system_max }
		set_variable = { var_SPY_civ_coverage = 1.0 }
	}
	else = {
		set_variable = { var_SPY_civ_coverage = var_SPY_civ_sat_system_num }
		divide_variable = { var_SPY_civ_coverage = var_SPY_civ_sat_system_max }
	}
	set_variable = { var_SPY_civ_sat_system_bonus = var_SPY_civ_coverage }
	if = {
		limit = {
			check_variable = {
				var_SPY_civ_sat_system_bonus < 0
			}
		}
		set_variable = { var_SPY_civ_sat_system_bonus = 0 }
	}
	update_SPY_mission_num = yes
}

update_SPY_mission_num = {
	set_variable = { var_SPY_mission_active_sat = 0 }
	for_each_loop = {
		array = ROOT.spy_mission_sat_num_array
		add_to_variable = { var_SPY_mission_active_sat = v }
	}
	set_variable = { var_SPY_mission_num_total = var_SPY_sat_total }
	subtract_from_variable = { var_SPY_mission_num_total = var_SPY_mil_sat_system_num }
	if = {
		limit = {
			NOT = { check_variable = { var_SPY_mil_system_idx = var_SPY_civ_system_idx } }
		}
		subtract_from_variable = { var_SPY_mission_num_total = var_SPY_civ_sat_system_num }
	}
	#subtract_from_variable = { var_SPY_mission_num_total = var_SPY_civ_sat_system_num }
	set_variable = { var_SPY_mission_num_available = var_SPY_mission_num_total }
	subtract_from_variable = { var_SPY_mission_num_available = var_SPY_mission_active_sat }
	update_SPY_mission_start_button = yes
}

update_SPY_mission_start_button = {
	set_variable = { ROOT.var_SPY_mission_intel_ratio = ROOT.var_SPY_mission_num_gui }
	var:orbit_selected_TAG = {
		#set_variable = { ROOT.var_SPY_mission_num_gui = num_controlled_states }
		divide_variable = { ROOT.var_SPY_mission_intel_ratio = ROOT.var_SPY_mission_num_gui }
	}
	set_variable = { ROOT.var_SPY_mission_intel_add = ROOT.var_SPY_mission_intel_ratio }
	multiply_variable = { ROOT.var_SPY_mission_intel_add = 30 }
}

update_SPY_mission_plus_minus_button = {
	#set_variable = { ROOT.var_SPY_mission_intel_ratio = ROOT.var_SPY_mission_num_gui }
	var:orbit_selected_TAG = {
		set_variable = { ROOT.var_SPY_mission_intel_ratio = ROOT.var_SPY_mission_num_gui }
		divide_variable = { ROOT.var_SPY_mission_intel_ratio = num_controlled_states }
	}
	set_variable = { ROOT.var_SPY_mission_intel_add = ROOT.var_SPY_mission_intel_ratio }
	multiply_variable = { ROOT.var_SPY_mission_intel_add = 30 }
}

calculate_GNSS_mil_gui_vars = {

	set_variable = { var_GNSS_mil_army_speed_factor_base = global.GNSS_mil_army_speed_factor_max_array^var_GNSS_mil_system_idx }
	set_variable = { var_GNSS_mil_army_speed_factor_min = global.GNSS_mil_army_speed_factor_min_array^var_GNSS_mil_system_idx }
	multiply_variable = { var_GNSS_mil_army_speed_factor_base = var_GNSS_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_GNSS_mil_army_speed_factor_base < var_GNSS_mil_army_speed_factor_min
			}
		}
		set_variable = { var_GNSS_mil_army_speed_factor_base = var_GNSS_mil_army_speed_factor_min }
	}
	#air_cas_efficiency
	set_variable = { var_GNSS_mil_air_cas_efficiency_base = global.GNSS_mil_air_cas_efficiency_max_array^var_GNSS_mil_system_idx }
	set_variable = { var_GNSS_mil_air_cas_efficiency_min = global.GNSS_mil_air_cas_efficiency_min_array^var_GNSS_mil_system_idx }
	multiply_variable = { var_GNSS_mil_air_cas_efficiency_base = var_GNSS_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_GNSS_mil_air_cas_efficiency_base < var_GNSS_mil_air_cas_efficiency_min
			}
		}
		set_variable = { var_GNSS_mil_air_cas_efficiency_base = var_GNSS_mil_air_cas_efficiency_min }
	}
	#air_nav_efficiency
	set_variable = { var_GNSS_mil_air_nav_efficiency_base = global.GNSS_mil_air_nav_efficiency_max_array^var_GNSS_mil_system_idx }
	set_variable = { var_GNSS_mil_air_nav_efficiency_min = global.GNSS_mil_air_nav_efficiency_min_array^var_GNSS_mil_system_idx }
	multiply_variable = { var_GNSS_mil_air_nav_efficiency_base = var_GNSS_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_GNSS_mil_air_nav_efficiency_base  < var_GNSS_mil_air_nav_efficiency_min
			}
		}
		set_variable = { var_GNSS_mil_air_nav_efficiency_base = var_GNSS_mil_air_nav_efficiency_min }
	}
	#air_strategic_bomber_bombing_factor
	set_variable = { var_GNSS_mil_air_strategic_bomber_bombing_factor_base = global.GNSS_mil_air_strategic_bomber_bombing_factor_max_array^var_GNSS_mil_system_idx }
	set_variable = { var_GNSS_mil_air_strategic_bomber_bombing_factor_min = global.GNSS_mil_air_strategic_bomber_bombing_factor_min_array^var_GNSS_mil_system_idx }
	multiply_variable = { var_GNSS_mil_air_strategic_bomber_bombing_factor_base = var_GNSS_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_GNSS_mil_air_strategic_bomber_bombing_factor_base < var_GNSS_mil_air_strategic_bomber_bombing_factor_min
			}
		}
		set_variable = { var_GNSS_mil_air_strategic_bomber_bombing_factor_base = var_GNSS_mil_air_strategic_bomber_bombing_factor_min }
	}
	#positioning
	set_variable = { var_GNSS_mil_positioning_base = global.GNSS_mil_positioning_max_array^var_GNSS_mil_system_idx }
	set_variable = { var_GNSS_mil_positioning_min = global.GNSS_mil_positioning_min_array^var_GNSS_mil_system_idx }
	multiply_variable = { var_GNSS_mil_positioning_base = var_GNSS_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_GNSS_mil_positioning_base < var_GNSS_mil_positioning_min
			}
		}
		set_variable = { var_GNSS_mil_positioning_base = var_GNSS_mil_positioning_min }
	}
	#naval_hit_chance
	set_variable = { var_GNSS_mil_naval_hit_chance_base = global.GNSS_mil_naval_hit_chance_max_array^var_GNSS_mil_system_idx }
	set_variable = { var_GNSS_mil_naval_hit_chance_min = global.GNSS_mil_naval_hit_chance_min_array^var_GNSS_mil_system_idx }
	multiply_variable = { var_GNSS_mil_naval_hit_chance_base = var_GNSS_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_GNSS_mil_naval_hit_chance_base < var_GNSS_mil_naval_hit_chance_min
			}
		}
		set_variable = { var_GNSS_mil_naval_hit_chance_base = var_GNSS_mil_naval_hit_chance_min }
	}
}
calculate_GNSS_civ_gui_vars = {
	set_variable = { var_GNSS_civ_production_speed_buildings_factor_base = global.GNSS_civ_production_speed_buildings_factor_max_array^var_GNSS_civ_system_idx }
	set_variable = { var_GNSS_civ_production_speed_buildings_factor_min = global.GNSS_civ_production_speed_buildings_factor_min_array^var_GNSS_civ_system_idx }
	multiply_variable = { var_GNSS_civ_production_speed_buildings_factor_base = var_GNSS_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_GNSS_civ_production_speed_buildings_factor_base < var_GNSS_civ_production_speed_buildings_factor_min
			}
		}
		set_variable = { var_GNSS_civ_production_speed_buildings_factor_base = var_GNSS_civ_production_speed_buildings_factor_min }
	}
	#production_speed_infrastructure_factor
	set_variable = { var_GNSS_civ_production_speed_infrastructure_factor_base = global.GNSS_civ_production_speed_infrastructure_factor_max_array^var_GNSS_civ_system_idx }
	set_variable = { var_GNSS_civ_production_speed_infrastructure_factor_min = global.GNSS_civ_production_speed_infrastructure_factor_min_array^var_GNSS_civ_system_idx }
	multiply_variable = { var_GNSS_civ_production_speed_infrastructure_factor_base = var_GNSS_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_GNSS_civ_production_speed_infrastructure_factor_base < var_GNSS_civ_production_speed_infrastructure_factor_min
			}
		}
		set_variable = { var_GNSS_civ_production_speed_infrastructure_factor_base = var_GNSS_civ_production_speed_infrastructure_factor_min }
	}
	#local_resources_factor
	set_variable = { var_GNSS_civ_local_resources_factor_base = global.GNSS_civ_local_resources_factor_max_array^var_GNSS_civ_system_idx }
	set_variable = { var_GNSS_civ_local_resources_factor_min = global.GNSS_civ_local_resources_factor_min_array^var_GNSS_civ_system_idx }
	multiply_variable = { var_GNSS_civ_local_resources_factor_base = var_GNSS_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_GNSS_civ_local_resources_factor_base < var_GNSS_civ_local_resources_factor_min
			}
		}
		set_variable = { var_GNSS_civ_local_resources_factor_base = var_GNSS_civ_local_resources_factor_min }
	}
}
calculate_COM_mil_gui_vars = {
	# Command Power
	set_variable = { var_COM_mil_max_command_power_base = global.COM_mil_max_command_power_max_array^var_COM_mil_system_idx }
	set_variable = { var_COM_mil_max_command_power_min = global.COM_mil_max_command_power_min_array^var_COM_mil_system_idx }
	multiply_variable = { var_COM_mil_max_command_power_base = var_COM_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_COM_mil_max_command_power_base < var_COM_mil_max_command_power_min
			}
		}
		set_variable = { var_COM_mil_max_command_power_base = var_COM_mil_max_command_power_min }
	}
	#army_org_factor
	set_variable = { var_COM_mil_army_org_factor_base = global.COM_mil_army_org_factor_max_array^var_COM_mil_system_idx }
	set_variable = { var_COM_mil_army_org_factor_min = global.COM_mil_army_org_factor_min_array^var_COM_mil_system_idx }
	multiply_variable = { var_COM_mil_army_org_factor_base = var_COM_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_COM_mil_army_org_factor_base < var_COM_mil_army_org_factor_min
			}
		}
		set_variable = { var_COM_mil_army_org_factor_base = var_COM_mil_army_org_factor_min }
	}
	#planning_speed
	set_variable = { var_COM_mil_planning_speed_base = global.COM_mil_planning_speed_max_array^var_COM_mil_system_idx }
	set_variable = { var_COM_mil_planning_speed_min = global.COM_mil_planning_speed_min_array^var_COM_mil_system_idx }
	multiply_variable = { var_COM_mil_planning_speed_base = var_COM_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_COM_mil_planning_speed_base < var_COM_mil_planning_speed_min
			}
		}
		set_variable = { var_COM_mil_planning_speed_base = var_COM_mil_planning_speed_min }
	}
	#air_escort_efficiency
	set_variable = { var_COM_mil_air_escort_efficiency_base = global.COM_mil_air_escort_efficiency_max_array^var_COM_mil_system_idx }
	set_variable = { var_COM_mil_air_escort_efficiency_min = global.COM_mil_air_escort_efficiency_min_array^var_COM_mil_system_idx }
	multiply_variable = { var_COM_mil_air_escort_efficiency_base = var_COM_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_COM_mil_air_escort_efficiency_base < var_COM_mil_air_escort_efficiency_min
			}
		}
		set_variable = { var_COM_mil_air_escort_efficiency_base = var_COM_mil_air_escort_efficiency_min }
	}
	#air_intercept_efficiency
	set_variable = { var_COM_mil_air_intercept_efficiency_base = global.COM_mil_air_intercept_efficiency_max_array^var_COM_mil_system_idx }
	set_variable = { var_COM_mil_air_intercept_efficiency_min = global.COM_mil_air_intercept_efficiency_min_array^var_COM_mil_system_idx }
	multiply_variable = { var_COM_mil_air_intercept_efficiency_base = var_COM_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_COM_mil_air_intercept_efficiency_base < var_COM_mil_air_intercept_efficiency_min
			}
		}
		set_variable = { var_COM_mil_air_intercept_efficiency_base = var_COM_mil_air_intercept_efficiency_min }
	}
	#naval_coordination
	set_variable = { var_COM_mil_naval_coordination_base = global.COM_mil_naval_coordination_max_array^var_COM_mil_system_idx }
	set_variable = { var_COM_mil_naval_coordination_min = global.COM_mil_naval_coordination_min_array^var_COM_mil_system_idx }
	multiply_variable = { var_COM_mil_naval_coordination_base = var_COM_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_COM_mil_naval_coordination_base < var_COM_mil_naval_coordination_min
			}
		}
		set_variable = { var_COM_mil_naval_coordination_base = var_COM_mil_naval_coordination_min }
	}
}
calculate_COM_civ_gui_vars = {
	#political_power_factor
	set_variable = { var_COM_civ_political_power_factor_base = global.COM_civ_political_power_factor_max_array^var_COM_civ_system_idx }
	set_variable = { var_COM_civ_political_power_factor_min = global.COM_civ_political_power_factor_min_array^var_COM_civ_system_idx }
	multiply_variable = { var_COM_civ_political_power_factor_base = var_COM_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_COM_civ_political_power_factor_base < var_COM_civ_political_power_factor_min
			}
		}
		set_variable = { var_COM_civ_political_power_factor_base = var_COM_civ_political_power_factor_min }
	}
	#decryption_factor
	set_variable = { var_COM_civ_decryption_factor_base = global.COM_civ_decryption_factor_max_array^var_COM_civ_system_idx }
	set_variable = { var_COM_civ_decryption_factor_min = global.COM_civ_decryption_factor_min_array^var_COM_civ_system_idx }
	multiply_variable = { var_COM_civ_decryption_factor_base = var_COM_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_COM_civ_decryption_factor_base< var_COM_civ_decryption_factor_min
			}
		}
		set_variable = { var_COM_civ_decryption_factor_base = var_COM_civ_decryption_factor_min }
	}
	#encryption_factor
	set_variable = { var_COM_civ_encryption_factor_base = global.COM_civ_encryption_factor_max_array^var_COM_civ_system_idx }
	set_variable = { var_COM_civ_encryption_factor_min = global.COM_civ_encryption_factor_min_array^var_COM_civ_system_idx }
	multiply_variable = { var_COM_civ_encryption_factor_base = var_COM_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_COM_civ_encryption_factor_base < var_COM_civ_encryption_factor_min
			}
		}
		set_variable = { var_COM_civ_encryption_factor_base = var_COM_civ_encryption_factor_min }
	}
	#intel_network_gain_factor
	set_variable = { var_COM_civ_intel_network_gain_factor_base = global.COM_civ_intel_network_gain_factor_max_array^var_COM_civ_system_idx }
	set_variable = { var_COM_civ_intel_network_gain_factor_min = global.COM_civ_intel_network_gain_factor_min_array^var_COM_civ_system_idx }
	multiply_variable = { var_COM_civ_intel_network_gain_factor_base = var_COM_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_COM_civ_intel_network_gain_factor_base < var_COM_civ_intel_network_gain_factor_min
			}
		}
		set_variable = { var_COM_civ_intel_network_gain_factor_base = var_COM_civ_intel_network_gain_factor_min }
	}
	#operation_outcome
	set_variable = { var_COM_civ_operation_outcome_base = global.COM_civ_operation_outcome_max_array^var_COM_civ_system_idx }
	set_variable = { var_COM_civ_operation_outcome_min = global.COM_civ_operation_outcome_min_array^var_COM_civ_system_idx }
	multiply_variable = { var_COM_civ_operation_outcome_base = var_COM_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_COM_civ_operation_outcome_base < var_COM_civ_operation_outcome_min
			}
		}
		set_variable = { var_COM_civ_operation_outcome_base = var_COM_civ_operation_outcome_min }
	}
}
calculate_SPY_mil_gui_vars = {
	### SPY mil
	#max_planning_factor
	set_variable = { var_SPY_mil_max_planning_factor_base = global.SPY_mil_max_planning_factor_max_array^var_SPY_mil_system_idx }
	set_variable = { var_SPY_mil_max_planning_factor_min = global.SPY_mil_max_planning_factor_min_array^var_SPY_mil_system_idx }
	multiply_variable = { var_SPY_mil_max_planning_factor_base = var_SPY_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_mil_max_planning_factor_base < var_SPY_mil_max_planning_factor_min
			}
		}
		set_variable = { var_SPY_mil_max_planning_factor_base = var_SPY_mil_max_planning_factor_min }
	}
	#recon_factor
	set_variable = { var_SPY_mil_recon_factor_base = global.SPY_mil_recon_factor_max_array^var_SPY_mil_system_idx }
	set_variable = { var_SPY_mil_recon_factor_min = global.SPY_mil_recon_factor_min_array^var_SPY_mil_system_idx }
	multiply_variable = { var_SPY_mil_recon_factor_base = var_SPY_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_mil_recon_factor_base < var_SPY_mil_recon_factor_min
			}
		}
		set_variable = { var_SPY_mil_recon_factor_base = var_SPY_mil_recon_factor_min }
	}
	#air_weather_penalty
	set_variable = { var_SPY_mil_air_weather_penalty_base = global.SPY_mil_air_weather_penalty_max_array^var_SPY_mil_system_idx }
	set_variable = { var_SPY_mil_air_weather_penalty_min = global.SPY_mil_air_weather_penalty_min_array^var_SPY_mil_system_idx }
	multiply_variable = { var_SPY_mil_air_weather_penalty_base = var_SPY_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_mil_air_weather_penalty_base < var_SPY_mil_air_weather_penalty_min
			}
		}
		set_variable = { var_SPY_mil_air_weather_penalty_base = var_SPY_mil_air_weather_penalty_min }
	}
	#spotting_chance
	set_variable = { var_SPY_mil_spotting_chance_base = global.SPY_mil_spotting_chance_max_array^var_SPY_mil_system_idx }
	set_variable = { var_SPY_mil_spotting_chance_min = global.SPY_mil_spotting_chance_min_array^var_SPY_mil_system_idx }
	multiply_variable = { var_SPY_mil_spotting_chance_base = var_SPY_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_mil_spotting_chance_base < var_SPY_mil_spotting_chance_min
			}
		}
		set_variable = { var_SPY_mil_spotting_chance_base = var_SPY_mil_spotting_chance_min }
	}
	#convoy_raiding_efficiency_factor
	set_variable = { var_SPY_mil_convoy_raiding_efficiency_factor_base = global.SPY_mil_convoy_raiding_efficiency_factor_max_array^var_SPY_mil_system_idx }
	set_variable = { var_SPY_mil_convoy_raiding_efficiency_factor_min = global.SPY_mil_convoy_raiding_efficiency_factor_min_array^var_SPY_mil_system_idx }
	multiply_variable = { var_SPY_mil_convoy_raiding_efficiency_factor_base = var_SPY_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_mil_convoy_raiding_efficiency_factor_base < var_SPY_mil_convoy_raiding_efficiency_factor_min
			}
		}
		set_variable = { var_SPY_mil_convoy_raiding_efficiency_factor_base = var_SPY_mil_convoy_raiding_efficiency_factor_min }
	}
	#convoy_escort_efficiency
	set_variable = { var_SPY_mil_convoy_escort_efficiency_base = global.SPY_mil_convoy_escort_efficiency_max_array^var_SPY_mil_system_idx }
	set_variable = { var_SPY_mil_convoy_escort_efficiency_min = global.SPY_mil_convoy_escort_efficiency_min_array^var_SPY_mil_system_idx }
	multiply_variable = { var_SPY_mil_convoy_escort_efficiency_base = var_SPY_mil_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_mil_convoy_escort_efficiency_base < var_SPY_mil_convoy_escort_efficiency_min
			}
		}
		set_variable = { var_SPY_mil_convoy_escort_efficiency_base = var_SPY_mil_convoy_escort_efficiency_min }
	}
}
calculate_SPY_civ_gui_vars = {
	### SPY civ
	#research_speed_factor
	set_variable = { var_SPY_civ_research_speed_factor_base = global.SPY_civ_research_speed_factor_max_array^var_SPY_civ_system_idx }
	set_variable = { var_SPY_civ_research_speed_factor_min = global.SPY_civ_research_speed_factor_min_array^var_SPY_civ_system_idx }
	multiply_variable = { var_SPY_civ_research_speed_factor_base = var_SPY_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_civ_research_speed_factor_base < var_SPY_civ_research_speed_factor_min
			}
		}
		set_variable = { var_SPY_civ_research_speed_factor_base = var_SPY_civ_research_speed_factor_min }
	}
	#civilian_intel_factor
	set_variable = { var_SPY_civ_civilian_intel_factor_base = global.SPY_civ_civilian_intel_factor_max_array^var_SPY_civ_system_idx }
	set_variable = { var_SPY_civ_civilian_intel_factor_min = global.SPY_civ_civilian_intel_factor_min_array^var_SPY_civ_system_idx }
	multiply_variable = { var_SPY_civ_civilian_intel_factor_base = var_SPY_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_civ_civilian_intel_factor_base < var_SPY_civ_civilian_intel_factor_min
			}
		}
		set_variable = { var_SPY_civ_civilian_intel_factor_base = var_SPY_civ_civilian_intel_factor_min }
	}
	#army_intel_factor
	set_variable = { var_SPY_civ_army_intel_factor_base = global.SPY_civ_army_intel_factor_max_array^var_SPY_civ_system_idx }
	set_variable = { var_SPY_civ_army_intel_factor_min = global.SPY_civ_army_intel_factor_min_array^var_SPY_civ_system_idx }
	multiply_variable = { var_SPY_civ_army_intel_factor_base = var_SPY_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_civ_army_intel_factor_base < var_SPY_civ_army_intel_factor_min
			}
		}
		set_variable = { var_SPY_civ_army_intel_factor_base = var_SPY_civ_army_intel_factor_min }
	}
	#navy_intel_factor
	set_variable = { var_SPY_civ_navy_intel_factor_base = global.SPY_civ_navy_intel_factor_max_array^var_SPY_civ_system_idx }
	set_variable = { var_SPY_civ_navy_intel_factor_min = global.SPY_civ_navy_intel_factor_min_array^var_SPY_civ_system_idx }
	multiply_variable = { var_SPY_civ_navy_intel_factor_base = var_SPY_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_civ_navy_intel_factor_base < var_SPY_civ_navy_intel_factor_min
			}
		}
		set_variable = { var_SPY_civ_navy_intel_factor_base = var_SPY_civ_navy_intel_factor_min }
	}
	#airforce_intel_factor
	set_variable = { var_SPY_civ_airforce_intel_factor_base = global.SPY_civ_airforce_intel_factor_max_array^var_SPY_civ_system_idx }
	set_variable = { var_SPY_civ_airforce_intel_factor_min = global.SPY_civ_airforce_intel_factor_min_array^var_SPY_civ_system_idx }
	multiply_variable = { var_SPY_civ_airforce_intel_factor_base = var_SPY_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_civ_airforce_intel_factor_base < var_SPY_civ_airforce_intel_factor_min
			}
		}
		set_variable = { var_SPY_civ_airforce_intel_factor_base = var_SPY_civ_airforce_intel_factor_min }
	}
	#root_out_resistance_effectiveness_factor
	set_variable = { var_SPY_civ_root_out_resistance_effectiveness_factor_base = global.SPY_civ_root_out_resistance_effectiveness_factor_max_array^var_SPY_civ_system_idx }
	set_variable = { var_SPY_civ_root_out_resistance_effectiveness_factor_min = global.SPY_civ_root_out_resistance_effectiveness_factor_min_array^var_SPY_civ_system_idx }
	multiply_variable = { var_SPY_civ_root_out_resistance_effectiveness_factor_base = var_SPY_civ_sat_system_bonus }
	if = {
		limit = {
			check_variable = {
				var_SPY_civ_root_out_resistance_effectiveness_factor_base < var_SPY_civ_root_out_resistance_effectiveness_factor_min
			}
		}
		set_variable = { var_SPY_civ_root_out_resistance_effectiveness_factor_base = var_SPY_civ_root_out_resistance_effectiveness_factor_min }
	}
	###
}

add_access_GNSS_mil_vars = {
	set_variable = { temp_GNSS_mil_access_system_highest_idx = 0 }
	set_variable = { var_GNSS_mil_army_speed_factor = var_GNSS_mil_army_speed_factor_base }
	set_variable = { var_GNSS_mil_air_cas_efficiency = var_GNSS_mil_air_cas_efficiency_base }
	set_variable = { var_GNSS_mil_air_nav_efficiency = var_GNSS_mil_air_nav_efficiency_base }
	set_variable = { var_GNSS_mil_air_strategic_bomber_bombing_factor = var_GNSS_mil_air_strategic_bomber_bombing_factor_base }
	set_variable = { var_GNSS_mil_positioning = var_GNSS_mil_positioning_base }
	set_variable = { var_GNSS_mil_naval_hit_chance = var_GNSS_mil_naval_hit_chance_base }
	for_each_loop = {
		array = GNSS_mil_access_system_idx_array
		if = {
			limit = {
				check_variable = {
					GNSS_mil_access_system_idx_array^i > temp_GNSS_mil_access_system_highest_idx
				}
			}
			set_variable = { temp_GNSS_mil_access_system_highest_idx = GNSS_mil_access_system_idx_array^i }
		}
	}
	if = {
		limit = {
			OR = {
				check_variable = {
					ROOT.var_GNSS_mil_system_idx < temp_GNSS_mil_access_system_highest_idx
				}
				check_variable = {
					ROOT.var_GNSS_mil_system_idx = temp_GNSS_mil_access_system_highest_idx
				}
			}
		}
		for_each_scope_loop = {
			array = GNSS_mil_access_array
			if = {
				limit = {
					OR = {
						check_variable = {
							ROOT.var_GNSS_mil_system_idx < THIS.var_GNSS_mil_system_idx
						}
						check_variable = {
							ROOT.var_GNSS_mil_system_idx = THIS.var_GNSS_mil_system_idx
						}
					}
				}
				add_to_variable = { ROOT.var_GNSS_mil_army_speed_factor = THIS.var_GNSS_mil_army_speed_factor_base }
				add_to_variable = { ROOT.var_GNSS_mil_air_cas_efficiency = THIS.var_GNSS_mil_air_cas_efficiency_base }
				add_to_variable = { ROOT.var_GNSS_mil_air_nav_efficiency = THIS.var_GNSS_mil_air_nav_efficiency_base }
				add_to_variable = { ROOT.var_GNSS_mil_air_strategic_bomber_bombing_factor = THIS.var_GNSS_mil_air_strategic_bomber_bombing_factor_base }
				add_to_variable = { ROOT.var_GNSS_mil_positioning = THIS.var_GNSS_mil_positioning_base }
				add_to_variable = { ROOT.var_GNSS_mil_naval_hit_chance = THIS.var_GNSS_mil_naval_hit_chance_base }
			}
		}
		if = {
			limit = {
				check_variable = {
					ROOT.GNSS_mil_access_array^num > 0
				}
			}
			#army_speed_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_GNSS_mil_army_speed_factor > global.GNSS_mil_army_speed_factor_max_array^temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_GNSS_mil_army_speed_factor = global.GNSS_mil_army_speed_factor_max_array^temp_GNSS_mil_access_system_highest_idx }
			}
			#air_cas_efficiency
			if = {
				limit = {
					check_variable = {
						ROOT.var_GNSS_mil_air_cas_efficiency > global.GNSS_mil_air_cas_efficiency_max_array^temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_GNSS_mil_air_cas_efficiency = global.GNSS_mil_air_cas_efficiency_max_array^temp_GNSS_mil_access_system_highest_idx }
			}
			#air_nav_efficiency
			if = {
				limit = {
					check_variable = {
						ROOT.var_GNSS_mil_air_nav_efficiency > global.GNSS_mil_air_nav_efficiency_max_array^temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_GNSS_mil_air_nav_efficiency = global.GNSS_mil_air_nav_efficiency_max_array^temp_GNSS_mil_access_system_highest_idx }
			}
			#air_strategic_bomber_bombing_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_GNSS_mil_air_strategic_bomber_bombing_factor > global.GNSS_mil_air_strategic_bomber_bombing_factor_max_array^temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_GNSS_mil_air_strategic_bomber_bombing_factor = global.GNSS_mil_air_strategic_bomber_bombing_factor_max_array^temp_GNSS_mil_access_system_highest_idx }
			}
			#positioning
			if = {
				limit = {
					check_variable = {
						ROOT.var_GNSS_mil_positioning > global.GNSS_mil_positioning_max_array^temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_GNSS_mil_positioning = global.GNSS_mil_army_speed_factor_max_array^temp_GNSS_mil_access_system_highest_idx }
			}
			#naval_hit_chance
			if = {
				limit = {
					check_variable = {
						ROOT.var_GNSS_mil_naval_hit_chance > global.GNSS_mil_naval_hit_chance_max_array^temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_GNSS_mil_naval_hit_chance = global.GNSS_mil_naval_hit_chance_max_array^temp_GNSS_mil_access_system_highest_idx }
			}
		}
	}
}

add_access_GNSS_civ_vars = {
	set_variable = { temp_GNSS_civ_access_system_highest_idx = 0 }
	set_variable = { var_GNSS_civ_production_speed_buildings_factor = var_GNSS_civ_production_speed_buildings_factor_base }
	set_variable = { var_GNSS_civ_production_speed_infrastructure_factor = var_GNSS_civ_production_speed_infrastructure_factor_base }
	set_variable = { var_GNSS_civ_local_resources_factor = var_GNSS_civ_local_resources_factor_base }
	for_each_loop = {
		array = GNSS_civ_access_system_idx_array
		if = {
			limit = {
				check_variable = {
					GNSS_civ_access_system_idx_array^i > temp_GNSS_civ_access_system_highest_idx
				}
			}
			set_variable = { temp_GNSS_civ_access_system_highest_idx = GNSS_civ_access_system_idx_array^i }
		}
	}
	if = {
		limit = {
			OR = {
				check_variable = {
					ROOT.var_GNSS_civ_system_idx < temp_GNSS_civ_access_system_highest_idx
				}
				check_variable = {
					ROOT.var_GNSS_civ_system_idx = temp_GNSS_civ_access_system_highest_idx
				}
			}
		}
		for_each_scope_loop = {
			array = GNSS_civ_access_array
			if = {
				limit = {
					OR = {
						check_variable = {
							ROOT.var_GNSS_civ_system_idx < THIS.var_GNSS_civ_system_idx
						}
						check_variable = {
							ROOT.var_GNSS_civ_system_idx = THIS.var_GNSS_civ_system_idx
						}
					}
				}
				add_to_variable = { ROOT.var_GNSS_civ_production_speed_buildings_factor = THIS.var_GNSS_civ_production_speed_buildings_factor_base }
				add_to_variable = { ROOT.var_GNSS_civ_production_speed_infrastructure_factor = THIS.var_GNSS_civ_production_speed_infrastructure_factor_base }
				add_to_variable = { ROOT.var_GNSS_civ_local_resources_factor = THIS.var_GNSS_civ_local_resources_factor_base }

			}
		}
		if = {
			limit = {
				check_variable = {
					ROOT.GNSS_civ_access_array^num > 0
				}
			}
			#production_speed_buildings_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_GNSS_civ_production_speed_buildings_factor > global.GNSS_civ_production_speed_buildings_factor_max_array^temp_GNSS_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_GNSS_civ_production_speed_buildings_factor = global.GNSS_civ_production_speed_buildings_factor_max_array^temp_GNSS_civ_access_system_highest_idx }
			}
			#production_speed_infrastructure_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_GNSS_civ_production_speed_infrastructure_factor > global.GNSS_civ_production_speed_infrastructure_factor_max_array^temp_GNSS_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_GNSS_civ_production_speed_infrastructure_factor = global.GNSS_civ_production_speed_infrastructure_factor_max_array^temp_GNSS_civ_access_system_highest_idx }
			}
			#local_resources_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_GNSS_civ_local_resources_factor > global.GNSS_civ_local_resources_factor_max_array^temp_GNSS_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_GNSS_civ_local_resources_factor = global.GNSS_civ_local_resources_factor_max_array^temp_GNSS_civ_access_system_highest_idx }
			}
		}
	}
}
add_access_COM_mil_vars = {
	set_variable = { temp_COM_mil_access_system_highest_idx = 0 }
	set_variable = { var_COM_mil_max_command_power = var_COM_mil_max_command_power_base }
	set_variable = { var_COM_mil_army_org_factor = var_COM_mil_army_org_factor_base }
	set_variable = { var_COM_mil_planning_speed = var_COM_mil_planning_speed_base }
	set_variable = { var_COM_mil_air_escort_efficiency = var_COM_mil_air_escort_efficiency_base }
	set_variable = { var_COM_mil_air_intercept_efficiency = var_COM_mil_air_intercept_efficiency_base }
	set_variable = { var_COM_mil_naval_coordination = var_COM_mil_naval_coordination_base }
	for_each_loop = {
		array = COM_mil_access_system_idx_array
		if = {
			limit = {
				check_variable = {
					COM_mil_access_system_idx_array^i > temp_COM_mil_access_system_highest_idx
				}
			}
			set_variable = { temp_COM_mil_access_system_highest_idx = COM_mil_access_system_idx_array^i }
		}
	}
	if = {
		limit = {
			OR = {
				check_variable = {
					ROOT.var_COM_mil_system_idx < temp_COM_mil_access_system_highest_idx
				}
				check_variable = {
					ROOT.var_COM_mil_system_idx = temp_COM_mil_access_system_highest_idx
				}
			}
		}
		for_each_scope_loop = {
			array = COM_mil_access_array
			if = {
				limit = {
					OR = {
						check_variable = {
							ROOT.var_COM_mil_system_idx < THIS.var_COM_mil_system_idx
						}
						check_variable = {
							ROOT.var_COM_mil_system_idx = THIS.var_COM_mil_system_idx
						}
					}
				}
				add_to_variable = { ROOT.var_COM_mil_max_command_power = THIS.var_COM_mil_max_command_power_base }
				add_to_variable = { ROOT.var_COM_mil_army_org_factor = THIS.var_COM_mil_army_org_factor_base }
				add_to_variable = { ROOT.var_COM_mil_planning_speed = THIS.var_COM_mil_planning_speed_base }
				add_to_variable = { ROOT.var_COM_mil_air_escort_efficiency = THIS.var_COM_mil_air_escort_efficiency_base }
				add_to_variable = { ROOT.var_COM_mil_air_intercept_efficiency = THIS.var_COM_mil_air_intercept_efficiency_base }
				add_to_variable = { ROOT.var_COM_mil_naval_coordination = THIS.var_COM_mil_naval_coordination_base }
			}
		}
		if = {
			limit = {
				check_variable = {
					ROOT.COM_mil_access_array^num > 0
				}
			}
			#max_command_power
			if = {
				limit = {
					check_variable = {
						ROOT.var_COM_mil_max_command_power > global.COM_mil_max_command_power_max_array^temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_COM_mil_max_command_power = global.COM_mil_max_command_power_max_array^temp_COM_mil_access_system_highest_idx }
			}
			#army_org_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_COM_mil_army_org_factor > global.COM_mil_army_org_factor_max_array^temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_COM_mil_army_org_factor = global.COM_mil_army_org_factor_max_array^temp_COM_mil_access_system_highest_idx }
			}
			#planning_speed
			if = {
				limit = {
					check_variable = {
						ROOT.var_COM_mil_planning_speed > global.COM_mil_planning_speed_max_array^temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_COM_mil_planning_speed = global.COM_mil_planning_speed_max_array^temp_COM_mil_access_system_highest_idx }
			}
			#air_escort_efficiency
			if = {
				limit = {
					check_variable = {
						ROOT.var_COM_mil_air_escort_efficiency > global.COM_mil_air_escort_efficiency_max_array^temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_COM_mil_air_escort_efficiency = global.COM_mil_air_escort_efficiency_max_array^temp_COM_mil_access_system_highest_idx }
			}
			#air_intercept_efficiency
			if = {
				limit = {
					check_variable = {
						ROOT.var_COM_mil_air_intercept_efficiency > global.COM_mil_air_intercept_efficiency_max_array^temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_COM_mil_air_intercept_efficiency = global.COM_mil_air_intercept_efficiency_max_array^temp_COM_mil_access_system_highest_idx }
			}
			#naval_coordination
			if = {
				limit = {
					check_variable = {
						ROOT.var_COM_mil_naval_coordination > global.COM_mil_naval_coordination_max_array^temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_COM_mil_naval_coordination = global.COM_mil_naval_coordination_max_array^temp_COM_mil_access_system_highest_idx }
			}
		}
	}
}
add_access_COM_civ_vars = {
	set_variable = { temp_COM_civ_access_system_highest_idx = 0 }
	set_variable = { var_COM_civ_political_power_factor = var_COM_civ_political_power_factor_base }
	set_variable = { var_COM_civ_decryption_factor = var_COM_civ_decryption_factor_base }
	set_variable = { var_COM_civ_encryption_factor = var_COM_civ_encryption_factor_base }
	set_variable = { var_COM_civ_intel_network_gain_factor = var_COM_civ_intel_network_gain_factor_base }
	set_variable = { var_COM_civ_operation_outcome = var_COM_civ_operation_outcome_base }
	for_each_loop = {
		array = COM_civ_access_system_idx_array
		if = {
			limit = {
				check_variable = {
					COM_civ_access_system_idx_array^i > temp_COM_civ_access_system_highest_idx
				}
			}
			set_variable = { temp_COM_civ_access_system_highest_idx = COM_civ_access_system_idx_array^i }
		}
	}
	if = {
		limit = {
			OR = {
				check_variable = {
					ROOT.var_COM_civ_system_idx < temp_COM_civ_access_system_highest_idx
				}
				check_variable = {
					ROOT.var_COM_civ_system_idx = temp_COM_civ_access_system_highest_idx
				}
			}
		}
		for_each_scope_loop = {
			array = COM_civ_access_array
			if = {
				limit = {
					OR = {
						check_variable = {
							ROOT.var_COM_civ_system_idx < THIS.var_COM_civ_system_idx
						}
						check_variable = {
							ROOT.var_COM_civ_system_idx = THIS.var_COM_civ_system_idx
						}
					}
				}
				add_to_variable = { ROOT.var_COM_civ_political_power_factor = THIS.var_COM_civ_political_power_factor_base }
				add_to_variable = { ROOT.var_COM_civ_decryption_factor = THIS.var_COM_civ_decryption_factor_base }
				add_to_variable = { ROOT.var_COM_civ_encryption_factor = THIS.var_COM_civ_encryption_factor_base }
				add_to_variable = { ROOT.var_COM_civ_intel_network_gain_factor = THIS.var_COM_civ_intel_network_gain_factor_base }
				add_to_variable = { ROOT.var_COM_civ_operation_outcome = THIS.var_COM_civ_operation_outcome_base }
			}
		}
		if = {
			limit = {
				check_variable = {
					ROOT.COM_civ_access_array^num > 0
				}
			}
			#political_power_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_COM_civ_political_power_factor > global.COM_civ_political_power_factor_max_array^temp_COM_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_COM_civ_political_power_factor = global.COM_civ_political_power_factor_max_array^temp_COM_civ_access_system_highest_idx }
			}
			#decryption_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_COM_civ_decryption_factor > global.COM_civ_decryption_factor_max_array^temp_COM_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_COM_civ_decryption_factor = global.COM_civ_decryption_factor_max_array^temp_COM_civ_access_system_highest_idx }
			}
			#encryption_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_COM_civ_encryption_factor > global.COM_civ_encryption_factor_max_array^temp_COM_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_COM_civ_encryption_factor = global.COM_civ_encryption_factor_max_array^temp_COM_civ_access_system_highest_idx }
			}
			#intel_network_gain_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_COM_civ_intel_network_gain_factor > global.COM_civ_intel_network_gain_factor_max_array^temp_COM_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_COM_civ_intel_network_gain_factor = global.COM_civ_intel_network_gain_factor_max_array^temp_COM_civ_access_system_highest_idx }
			}
			#operation_outcome
			if = {
				limit = {
					check_variable = {
						ROOT.var_COM_civ_operation_outcome > global.COM_civ_operation_outcome_max_array^temp_COM_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_COM_civ_operation_outcome = global.COM_civ_operation_outcome_max_array^temp_COM_civ_access_system_highest_idx }
			}
		}
	}
}
add_access_SPY_mil_vars = {
	set_variable = { temp_SPY_mil_access_system_highest_idx = 0 }
	set_variable = { var_SPY_mil_max_planning_factor = var_SPY_mil_max_planning_factor_base }
	set_variable = { var_SPY_mil_recon_factor = var_SPY_mil_recon_factor_base }
	set_variable = { var_SPY_mil_air_weather_penalty = var_SPY_mil_air_weather_penalty_base }
	set_variable = { var_SPY_mil_spotting_chance = var_SPY_mil_spotting_chance_base }
	set_variable = { var_SPY_mil_convoy_raiding_efficiency_factor = var_SPY_mil_convoy_raiding_efficiency_factor_base }
	set_variable = { var_SPY_mil_convoy_escort_efficiency = var_SPY_mil_convoy_escort_efficiency_base }
	for_each_loop = {
		array = SPY_mil_access_system_idx_array
		if = {
			limit = {
				check_variable = {
					SPY_mil_access_system_idx_array^i > temp_SPY_mil_access_system_highest_idx
				}
			}
			set_variable = { temp_SPY_mil_access_system_highest_idx = SPY_mil_access_system_idx_array^i }
		}
	}
	if = {
		limit = {
			OR = {
				check_variable = {
					ROOT.var_SPY_mil_system_idx < temp_SPY_mil_access_system_highest_idx
				}
				check_variable = {
					ROOT.var_SPY_mil_system_idx = temp_SPY_mil_access_system_highest_idx
				}
			}
		}
		for_each_scope_loop = {
			array = SPY_mil_access_array
			if = {
				limit = {
					OR = {
						check_variable = {
							ROOT.var_SPY_mil_system_idx < THIS.var_SPY_mil_system_idx
						}
						check_variable = {
							ROOT.var_SPY_mil_system_idx = THIS.var_SPY_mil_system_idx
						}
					}
				}
				add_to_variable = { ROOT.var_SPY_mil_max_planning_factor = THIS.var_SPY_mil_max_planning_factor_base }
				add_to_variable = { ROOT.var_SPY_mil_recon_factor = THIS.var_SPY_mil_recon_factor_base }
				add_to_variable = { ROOT.var_SPY_mil_air_weather_penalty = THIS.var_SPY_mil_air_weather_penalty_base }
				add_to_variable = { ROOT.var_SPY_mil_spotting_chance = THIS.var_SPY_mil_spotting_chance_base }
				add_to_variable = { ROOT.var_SPY_mil_convoy_raiding_efficiency_factor = THIS.var_SPY_mil_convoy_raiding_efficiency_factor_base }
				add_to_variable = { ROOT.var_SPY_mil_convoy_escort_efficiency = THIS.var_SPY_mil_convoy_escort_efficiency_base }
			}
		}
		if = {
			limit = {
				check_variable = {
					ROOT.SPY_mil_access_array^num > 0
				}
			}
			#max_planning_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_mil_max_planning_factor > global.SPY_mil_max_planning_factor_max_array^temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_mil_max_planning_factor = global.SPY_mil_max_planning_factor_max_array^temp_SPY_mil_access_system_highest_idx }
			}
			#recon_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_mil_recon_factor > global.SPY_mil_recon_factor_max_array^temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_mil_recon_factor = global.SPY_mil_recon_factor_max_array^temp_SPY_mil_access_system_highest_idx }
			}
			#air_weather_penalty
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_mil_air_weather_penalty > global.SPY_mil_air_weather_penalty_max_array^temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_mil_air_weather_penalty = global.SPY_mil_air_weather_penalty_max_array^temp_SPY_mil_access_system_highest_idx }
			}
			#spotting_chance
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_mil_spotting_chance > global.SPY_mil_spotting_chance_max_array^temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_mil_spotting_chance = global.SPY_mil_spotting_chance_max_array^temp_SPY_mil_access_system_highest_idx }
			}
			#convoy_raiding_efficiency_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_mil_convoy_raiding_efficiency_factor > global.SPY_mil_convoy_raiding_efficiency_factor_max_array^temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_mil_convoy_raiding_efficiency_factor = global.SPY_mil_convoy_raiding_efficiency_factor_max_array^temp_SPY_mil_access_system_highest_idx }
			}
			#convoy_escort_efficiency
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_mil_convoy_escort_efficiency > global.SPY_mil_convoy_escort_efficiency_max_array^temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_mil_convoy_escort_efficiency = global.SPY_mil_convoy_escort_efficiency_max_array^temp_SPY_mil_access_system_highest_idx }
			}
		}
	}
}
add_access_SPY_civ_vars = {
	set_variable = { temp_SPY_civ_access_system_highest_idx = 0 }
	set_variable = { var_SPY_civ_research_speed_factor = var_SPY_civ_research_speed_factor_base }
	set_variable = { var_SPY_civ_civilian_intel_factor = var_SPY_civ_civilian_intel_factor_base }
	set_variable = { var_SPY_civ_army_intel_factor = var_SPY_civ_army_intel_factor_base }
	set_variable = { var_SPY_civ_navy_intel_factor = var_SPY_civ_navy_intel_factor_base }
	set_variable = { var_SPY_civ_airforce_intel_factor = var_SPY_civ_airforce_intel_factor_base }
	set_variable = { var_SPY_civ_root_out_resistance_effectiveness_factor = var_SPY_civ_root_out_resistance_effectiveness_factor_base }
	for_each_loop = {
		array = SPY_civ_access_system_idx_array
		if = {
			limit = {
				check_variable = {
					SPY_civ_access_system_idx_array^i > temp_SPY_civ_access_system_highest_idx
				}
			}
			set_variable = { temp_SPY_civ_access_system_highest_idx = SPY_civ_access_system_idx_array^i }
		}
	}
	if = {
		limit = {
			OR = {
				check_variable = {
					ROOT.var_SPY_civ_system_idx < temp_SPY_civ_access_system_highest_idx
				}
				check_variable = {
					ROOT.var_SPY_civ_system_idx = temp_SPY_civ_access_system_highest_idx
				}
			}
		}
		for_each_scope_loop = {
			array = SPY_civ_access_array
			if = {
				limit = {
					OR = {
						check_variable = {
							ROOT.var_SPY_civ_system_idx < THIS.var_SPY_civ_system_idx
						}
						check_variable = {
							ROOT.var_SPY_civ_system_idx = THIS.var_SPY_civ_system_idx
						}
					}
				}
				add_to_variable = { ROOT.var_SPY_civ_research_speed_factor = THIS.var_SPY_civ_research_speed_factor_base }
				add_to_variable = { ROOT.var_SPY_civ_civilian_intel_factor = THIS.var_SPY_civ_civilian_intel_factor_base }
				add_to_variable = { ROOT.var_SPY_civ_army_intel_factor = THIS.var_SPY_civ_army_intel_factor_base }
				add_to_variable = { ROOT.var_SPY_civ_navy_intel_factor = THIS.var_SPY_civ_navy_intel_factor_base }
				add_to_variable = { ROOT.var_SPY_civ_airforce_intel_factor = THIS.var_SPY_civ_airforce_intel_factor_base }
				add_to_variable = { ROOT.var_SPY_civ_root_out_resistance_effectiveness_factor = THIS.var_SPY_civ_root_out_resistance_effectiveness_factor_base }
			}
		}
		if = {
			limit = {
				check_variable = {
					ROOT.SPY_civ_access_array^num > 0
				}
			}
			#research_speed_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_civ_research_speed_factor > global.SPY_civ_research_speed_factor_max_array^temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_civ_research_speed_factor = global.SPY_civ_research_speed_factor_max_array^temp_SPY_civ_access_system_highest_idx }
			}
			#civilian_intel_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_civ_civilian_intel_factor > global.SPY_civ_civilian_intel_factor_max_array^temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_civ_civilian_intel_factor = global.SPY_civ_civilian_intel_factor_max_array^temp_SPY_civ_access_system_highest_idx }
			}
			#army_intel_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_civ_army_intel_factor > global.SPY_civ_army_intel_factor_max_array^temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_civ_army_intel_factor = global.SPY_civ_army_intel_factor_max_array^temp_SPY_civ_access_system_highest_idx }
			}
			#navy_intel_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_civ_navy_intel_factor > global.SPY_civ_navy_intel_factor_max_array^temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_civ_navy_intel_factor = global.SPY_civ_navy_intel_factor_max_array^temp_SPY_civ_access_system_highest_idx }
			}
			#airforce_intel_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_civ_airforce_intel_factor > global.SPY_civ_airforce_intel_factor_max_array^temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_civ_airforce_intel_factor = global.SPY_civ_airforce_intel_factor_max_array^temp_SPY_civ_access_system_highest_idx }
			}
			#root_out_resistance_effectiveness_factor
			if = {
				limit = {
					check_variable = {
						ROOT.var_SPY_civ_root_out_resistance_effectiveness_factor > global.SPY_civ_root_out_resistance_effectiveness_factor_max_array^temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { ROOT.var_SPY_civ_root_out_resistance_effectiveness_factor = global.SPY_civ_root_out_resistance_effectiveness_factor_max_array^temp_SPY_civ_access_system_highest_idx }
			}
		}
	}
}

#### scripted effects for offer
# default = PREV = target / bonus TAG
# ROOT = sending TAG / access TAG
### does it work correctly? adding highest checks like for add_access_ effects?

add_offer_access_GNSS_mil_vars = {
	PREV = {
		set_variable = { temp_GNSS_mil_access_system_highest_idx = 0 }
		set_variable = { var_GNSS_mil_army_speed_factor = var_GNSS_mil_army_speed_factor_base }
		set_variable = { var_GNSS_mil_air_cas_efficiency = var_GNSS_mil_air_cas_efficiency_base }
		set_variable = { var_GNSS_mil_air_nav_efficiency = var_GNSS_mil_air_nav_efficiency_base }
		set_variable = { var_GNSS_mil_air_strategic_bomber_bombing_factor = var_GNSS_mil_air_strategic_bomber_bombing_factor_base }
		set_variable = { var_GNSS_mil_positioning = var_GNSS_mil_positioning_base }
		set_variable = { var_GNSS_mil_naval_hit_chance = var_GNSS_mil_naval_hit_chance_base }
		for_each_loop = {
			array = GNSS_mil_access_system_idx_array
			if = {
				limit = {
					check_variable = {
						GNSS_mil_access_system_idx_array^i > temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { temp_GNSS_mil_access_system_highest_idx = GNSS_mil_access_system_idx_array^i }
			}
		}
		for_each_scope_loop = {
			array = GNSS_mil_access_array
			if = {
				limit = {
					NOT = {
						check_variable = {
							var_GNSS_mil_system_idx > THIS.var_GNSS_mil_system_idx
						}
					}
				}
				add_to_variable = { PREV.var_GNSS_mil_army_speed_factor = THIS.var_GNSS_mil_army_speed_factor_base }
				add_to_variable = { PREV.var_GNSS_mil_air_cas_efficiency = THIS.var_GNSS_mil_air_cas_efficiency_base }
				add_to_variable = { PREV.var_GNSS_mil_air_nav_efficiency = THIS.var_GNSS_mil_air_nav_efficiency_base }
				add_to_variable = { PREV.var_GNSS_mil_air_strategic_bomber_bombing_factor = THIS.var_GNSS_mil_air_strategic_bomber_bombing_factor_base }
				add_to_variable = { PREV.var_GNSS_mil_positioning = THIS.var_GNSS_mil_positioning_base }
				add_to_variable = { PREV.var_GNSS_mil_naval_hit_chance = THIS.var_GNSS_mil_naval_hit_chance_base }
			}
			#army_speed_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_GNSS_mil_army_speed_factor > global.GNSS_mil_army_speed_factor_max_array^PREV.temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_GNSS_mil_army_speed_factor = global.GNSS_mil_army_speed_factor_max_array^PREV.temp_GNSS_mil_access_system_highest_idx }
			}
			#air_cas_efficiency
			if = {
				limit = {
					check_variable = {
						PREV.var_GNSS_mil_air_cas_efficiency > global.GNSS_mil_air_cas_efficiency_max_array^PREV.temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_GNSS_mil_air_cas_efficiency = global.GNSS_mil_air_cas_efficiency_max_array^PREV.temp_GNSS_mil_access_system_highest_idx }
			}
			#air_nav_efficiency
			if = {
				limit = {
					check_variable = {
						PREV.var_GNSS_mil_air_nav_efficiency > global.GNSS_mil_air_nav_efficiency_max_array^PREV.temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_GNSS_mil_air_nav_efficiency = global.GNSS_mil_air_nav_efficiency_max_array^PREV.temp_GNSS_mil_access_system_highest_idx }
			}
			#air_strategic_bomber_bombing_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_GNSS_mil_air_strategic_bomber_bombing_factor > global.GNSS_mil_air_strategic_bomber_bombing_factor_max_array^PREV.temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_GNSS_mil_air_strategic_bomber_bombing_factor = global.GNSS_mil_air_strategic_bomber_bombing_factor_max_array^PREV.temp_GNSS_mil_access_system_highest_idx }
			}
			#positioning
			if = {
				limit = {
					check_variable = {
						PREV.var_GNSS_mil_positioning > global.GNSS_mil_positioning_max_array^PREV.temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_GNSS_mil_positioning = global.GNSS_mil_army_speed_factor_max_array^PREV.temp_GNSS_mil_access_system_highest_idx }
			}
			#naval_hit_chance
			if = {
				limit = {
					check_variable = {
						PREV.var_GNSS_mil_naval_hit_chance > global.GNSS_mil_naval_hit_chance_max_array^PREV.temp_GNSS_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_GNSS_mil_naval_hit_chance = global.GNSS_mil_naval_hit_chance_max_array^PREV.temp_GNSS_mil_access_system_highest_idx }
			}
		}
	}
}
add_offer_access_GNSS_civ_vars = {
	PREV = {
		set_variable = { temp_GNSS_civ_access_system_highest_idx = 0 }
		set_variable = { var_GNSS_civ_production_speed_buildings_factor = var_GNSS_civ_production_speed_buildings_factor_base }
		set_variable = { var_GNSS_civ_production_speed_infrastructure_factor = var_GNSS_civ_production_speed_infrastructure_factor_base }
		set_variable = { var_GNSS_civ_local_resources_factor = var_GNSS_civ_local_resources_factor_base }
		for_each_loop = {
			array = GNSS_civ_access_system_idx_array
			if = {
				limit = {
					check_variable = {
						GNSS_civ_access_system_idx_array^i > temp_GNSS_civ_access_system_highest_idx
					}
				}
				set_variable = { temp_GNSS_civ_access_system_highest_idx = GNSS_civ_access_system_idx_array^i }
			}
		}
		for_each_scope_loop = {
			array = GNSS_civ_access_array
			if = {
				limit = {
					NOT = {
						check_variable = {
							var_GNSS_civ_system_idx > THIS.var_GNSS_civ_system_idx
						}
					}
				}
				add_to_variable = { PREV.var_GNSS_civ_production_speed_buildings_factor = THIS.var_GNSS_civ_production_speed_buildings_factor_base }
				add_to_variable = { PREV.var_GNSS_civ_production_speed_infrastructure_factor = THIS.var_GNSS_civ_production_speed_infrastructure_factor_base }
				add_to_variable = { PREV.var_GNSS_civ_local_resources_factor = THIS.var_GNSS_civ_local_resources_factor_base }

			}
			#production_speed_buildings_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_GNSS_civ_production_speed_buildings_factor > global.GNSS_civ_production_speed_buildings_factor_max_array^PREV.temp_GNSS_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_GNSS_civ_production_speed_buildings_factor = global.GNSS_civ_production_speed_buildings_factor_max_array^PREV.temp_GNSS_civ_access_system_highest_idx }
			}
			#production_speed_infrastructure_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_GNSS_civ_production_speed_infrastructure_factor > global.GNSS_civ_production_speed_infrastructure_factor_max_array^PREV.temp_GNSS_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_GNSS_civ_production_speed_infrastructure_factor = global.GNSS_civ_production_speed_infrastructure_factor_max_array^PREV.temp_GNSS_civ_access_system_highest_idx }
			}
			#local_resources_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_GNSS_civ_local_resources_factor > global.GNSS_civ_local_resources_factor_max_array^PREV.temp_GNSS_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_GNSS_civ_local_resources_factor = global.GNSS_civ_local_resources_factor_max_array^PREV.temp_GNSS_civ_access_system_highest_idx }
			}
		}
	}
}
add_offer_access_COM_mil_vars = {
	PREV = {
		set_variable = { temp_COM_mil_access_system_highest_idx = 0 }
		set_variable = { var_COM_mil_max_command_power = var_COM_mil_max_command_power_base }
		set_variable = { var_COM_mil_army_org_factor = var_COM_mil_army_org_factor_base }
		set_variable = { var_COM_mil_planning_speed = var_COM_mil_planning_speed_base }
		set_variable = { var_COM_mil_air_escort_efficiency = var_COM_mil_air_escort_efficiency_base }
		set_variable = { var_COM_mil_air_intercept_efficiency = var_COM_mil_air_intercept_efficiency_base }
		set_variable = { var_COM_mil_naval_coordination = var_COM_mil_naval_coordination_base }
		for_each_loop = {
			array = COM_mil_access_system_idx_array
			if = {
				limit = {
					check_variable = {
						COM_mil_access_system_idx_array^i > temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { temp_COM_mil_access_system_highest_idx = COM_mil_access_system_idx_array^i }
			}
		}
		for_each_scope_loop = {
			array = COM_mil_access_array
			if = {
				limit = {
					NOT = {
						check_variable = {
							var_COM_mil_system_idx > THIS.var_COM_mil_system_idx
						}
					}
				}
				add_to_variable = { PREV.var_COM_mil_max_command_power = THIS.var_COM_mil_max_command_power_base }
				add_to_variable = { PREV.var_COM_mil_army_org_factor = THIS.var_COM_mil_army_org_factor_base }
				add_to_variable = { PREV.var_COM_mil_planning_speed = THIS.var_COM_mil_planning_speed_base }
				add_to_variable = { PREV.var_COM_mil_air_escort_efficiency = THIS.var_COM_mil_air_escort_efficiency_base }
				add_to_variable = { PREV.var_COM_mil_air_intercept_efficiency = THIS.var_COM_mil_air_intercept_efficiency_base }
				add_to_variable = { PREV.var_COM_mil_naval_coordination = THIS.var_COM_mil_naval_coordination_base }
			}
			#max_command_power
			if = {
				limit = {
					check_variable = {
						PREV.var_COM_mil_max_command_power > global.COM_mil_max_command_power_max_array^PREV.temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_COM_mil_max_command_power = global.COM_mil_max_command_power_max_array^PREV.temp_COM_mil_access_system_highest_idx }
			}
			#army_org_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_COM_mil_army_org_factor > global.COM_mil_army_org_factor_max_array^PREV.temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_COM_mil_army_org_factor = global.COM_mil_army_org_factor_max_array^PREV.temp_COM_mil_access_system_highest_idx }
			}
			#planning_speed
			if = {
				limit = {
					check_variable = {
						PREV.var_COM_mil_planning_speed > global.COM_mil_planning_speed_max_array^PREV.temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_COM_mil_planning_speed = global.COM_mil_planning_speed_max_array^PREV.temp_COM_mil_access_system_highest_idx }
			}
			#air_escort_efficiency
			if = {
				limit = {
					check_variable = {
						PREV.var_COM_mil_air_escort_efficiency > global.COM_mil_air_escort_efficiency_max_array^PREV.temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_COM_mil_air_escort_efficiency = global.COM_mil_air_escort_efficiency_max_array^PREV.temp_COM_mil_access_system_highest_idx }
			}
			#air_intercept_efficiency
			if = {
				limit = {
					check_variable = {
						PREV.var_COM_mil_air_intercept_efficiency > global.COM_mil_air_intercept_efficiency_max_array^PREV.temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_COM_mil_air_intercept_efficiency = global.COM_mil_air_intercept_efficiency_max_array^PREV.temp_COM_mil_access_system_highest_idx }
			}
			#naval_coordination
			if = {
				limit = {
					check_variable = {
						PREV.var_COM_mil_naval_coordination > global.COM_mil_naval_coordination_max_array^PREV.temp_COM_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_COM_mil_naval_coordination = global.COM_mil_naval_coordination_max_array^PREV.temp_COM_mil_access_system_highest_idx }
			}
		}
	}
}
add_offer_access_COM_civ_vars = {
	PREV = {
		set_variable = { temp_COM_civ_access_system_highest_idx = 0 }
		set_variable = { var_COM_civ_political_power_factor = var_COM_civ_political_power_factor_base }
		set_variable = { var_COM_civ_decryption_factor = var_COM_civ_decryption_factor_base }
		set_variable = { var_COM_civ_encryption_factor = var_COM_civ_encryption_factor_base }
		set_variable = { var_COM_civ_intel_network_gain_factor = var_COM_civ_intel_network_gain_factor_base }
		set_variable = { var_COM_civ_operation_outcome = var_COM_civ_operation_outcome_base }
		for_each_loop = {
			array = COM_civ_access_system_idx_array
			if = {
				limit = {
					check_variable = {
						COM_civ_access_system_idx_array^i > temp_COM_civ_access_system_highest_idx
					}
				}
				set_variable = { temp_COM_civ_access_system_highest_idx = COM_civ_access_system_idx_array^i }
			}
		}
		for_each_scope_loop = {
			array = COM_civ_access_array
			if = {
				limit = {
					NOT = {
						check_variable = {
							var_COM_civ_system_idx > THIS.var_COM_civ_system_idx
						}
					}
				}
				add_to_variable = { PREV.var_COM_civ_political_power_factor = THIS.var_COM_civ_political_power_factor_base }
				add_to_variable = { PREV.var_COM_civ_decryption_factor = THIS.var_COM_civ_decryption_factor_base }
				add_to_variable = { PREV.var_COM_civ_encryption_factor = THIS.var_COM_civ_encryption_factor_base }
				add_to_variable = { PREV.var_COM_civ_intel_network_gain_factor = THIS.var_COM_civ_intel_network_gain_factor_base }
				add_to_variable = { PREV.var_COM_civ_operation_outcome = THIS.var_COM_civ_operation_outcome_base }
			}
			#political_power_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_COM_civ_political_power_factor > global.COM_civ_political_power_factor_max_array^PREV.temp_COM_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_COM_civ_political_power_factor = global.COM_civ_political_power_factor_max_array^PREV.temp_COM_civ_access_system_highest_idx }
			}
			#decryption_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_COM_civ_decryption_factor > global.COM_civ_decryption_factor_max_array^PREV.temp_COM_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_COM_civ_decryption_factor = global.COM_civ_decryption_factor_max_array^PREV.temp_COM_civ_access_system_highest_idx }
			}
			#encryption_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_COM_civ_encryption_factor > global.COM_civ_encryption_factor_max_array^PREV.temp_COM_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_COM_civ_encryption_factor = global.COM_civ_encryption_factor_max_array^PREV.temp_COM_civ_access_system_highest_idx }
			}
			#intel_network_gain_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_COM_civ_intel_network_gain_factor > global.COM_civ_intel_network_gain_factor_max_array^PREV.temp_COM_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_COM_civ_intel_network_gain_factor = global.COM_civ_intel_network_gain_factor_max_array^PREV.temp_COM_civ_access_system_highest_idx }
			}
			#operation_outcome
			if = {
				limit = {
					check_variable = {
						PREV.var_COM_civ_operation_outcome > global.COM_civ_operation_outcome_max_array^PREV.temp_COM_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_COM_civ_operation_outcome = global.COM_civ_operation_outcome_max_array^PREV.temp_COM_civ_access_system_highest_idx }
			}
		}
	}
}
add_offer_access_SPY_mil_vars = {
	PREV = {
		set_variable = { temp_SPY_mil_access_system_highest_idx = 0 }
		set_variable = { var_SPY_mil_max_planning_factor = var_SPY_mil_max_planning_factor_base }
		set_variable = { var_SPY_mil_recon_factor = var_SPY_mil_recon_factor_base }
		set_variable = { var_SPY_mil_air_weather_penalty = var_SPY_mil_air_weather_penalty_base }
		set_variable = { var_SPY_mil_spotting_chance = var_SPY_mil_spotting_chance_base }
		set_variable = { var_SPY_mil_convoy_raiding_efficiency_factor = var_SPY_mil_convoy_raiding_efficiency_factor_base }
		set_variable = { var_SPY_mil_convoy_escort_efficiency = var_SPY_mil_convoy_escort_efficiency_base }
		for_each_loop = {
			array = SPY_mil_access_system_idx_array
			if = {
				limit = {
					check_variable = {
						SPY_mil_access_system_idx_array^i > temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { temp_SPY_mil_access_system_highest_idx = SPY_mil_access_system_idx_array^i }
			}
		}
		for_each_scope_loop = {
			array = SPY_mil_access_array
			if = {
				limit = {
					NOT = {
						check_variable = {
							var_SPY_mil_system_idx > THIS.var_SPY_mil_system_idx
						}
					}
				}
				add_to_variable = { PREV.var_SPY_mil_max_planning_factor = THIS.var_SPY_mil_max_planning_factor_base }
				add_to_variable = { PREV.var_SPY_mil_recon_factor = THIS.var_SPY_mil_recon_factor_base }
				add_to_variable = { PREV.var_SPY_mil_air_weather_penalty = THIS.var_SPY_mil_air_weather_penalty_base }
				add_to_variable = { PREV.var_SPY_mil_spotting_chance = THIS.var_SPY_mil_spotting_chance_base }
				add_to_variable = { PREV.var_SPY_mil_convoy_raiding_efficiency_factor = THIS.var_SPY_mil_convoy_raiding_efficiency_factor_base }
				add_to_variable = { PREV.var_SPY_mil_convoy_escort_efficiency = THIS.var_SPY_mil_convoy_escort_efficiency_base }
			}
			#max_planning_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_mil_max_planning_factor > global.SPY_mil_max_planning_factor_max_array^PREV.temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_mil_max_planning_factor = global.SPY_mil_max_planning_factor_max_array^PREV.temp_SPY_mil_access_system_highest_idx }
			}
			#recon_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_mil_recon_factor > global.SPY_mil_recon_factor_max_array^PREV.temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_mil_recon_factor = global.SPY_mil_recon_factor_max_array^PREV.temp_SPY_mil_access_system_highest_idx }
			}
			#air_weather_penalty
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_mil_air_weather_penalty > global.SPY_mil_air_weather_penalty_max_array^PREV.temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_mil_air_weather_penalty = global.SPY_mil_air_weather_penalty_max_array^PREV.temp_SPY_mil_access_system_highest_idx }
			}
			#spotting_chance
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_mil_spotting_chance > global.SPY_mil_spotting_chance_max_array^PREV.temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_mil_spotting_chance = global.SPY_mil_spotting_chance_max_array^PREV.temp_SPY_mil_access_system_highest_idx }
			}
			#convoy_raiding_efficiency_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_mil_convoy_raiding_efficiency_factor > global.SPY_mil_convoy_raiding_efficiency_factor_max_array^PREV.temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_mil_convoy_raiding_efficiency_factor = global.SPY_mil_convoy_raiding_efficiency_factor_max_array^PREV.temp_SPY_mil_access_system_highest_idx }
			}
			#convoy_escort_efficiency
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_mil_convoy_escort_efficiency > global.SPY_mil_convoy_escort_efficiency_max_array^PREV.temp_SPY_mil_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_mil_convoy_escort_efficiency = global.SPY_mil_convoy_escort_efficiency_max_array^PREV.temp_SPY_mil_access_system_highest_idx }
			}
		}
	}
}
add_offer_access_SPY_civ_vars = {
	PREV = {
		set_variable = { temp_SPY_civ_access_system_highest_idx = 0 }
		set_variable = { var_SPY_civ_research_speed_factor = var_SPY_civ_research_speed_factor_base }
		set_variable = { var_SPY_civ_civilian_intel_factor = var_SPY_civ_civilian_intel_factor_base }
		set_variable = { var_SPY_civ_army_intel_factor = var_SPY_civ_army_intel_factor_base }
		set_variable = { var_SPY_civ_navy_intel_factor = var_SPY_civ_navy_intel_factor_base }
		set_variable = { var_SPY_civ_airforce_intel_factor = var_SPY_civ_airforce_intel_factor_base }
		set_variable = { var_SPY_civ_root_out_resistance_effectiveness_factor = var_SPY_civ_root_out_resistance_effectiveness_factor_base }
		for_each_loop = {
			array = SPY_civ_access_system_idx_array
			if = {
				limit = {
					check_variable = {
						SPY_civ_access_system_idx_array^i > temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { temp_SPY_civ_access_system_highest_idx = SPY_civ_access_system_idx_array^i }
			}
		}
		for_each_scope_loop = {
			array = SPY_civ_access_array
			if = {
				limit = {
					NOT = {
						check_variable = {
							var_SPY_civ_system_idx > THIS.var_SPY_civ_system_idx
						}
					}
				}
				add_to_variable = { PREV.var_SPY_civ_research_speed_factor = THIS.var_SPY_civ_research_speed_factor_base }
				add_to_variable = { PREV.var_SPY_civ_civilian_intel_factor = THIS.var_SPY_civ_civilian_intel_factor_base }
				add_to_variable = { PREV.var_SPY_civ_army_intel_factor = THIS.var_SPY_civ_army_intel_factor_base }
				add_to_variable = { PREV.var_SPY_civ_navy_intel_factor = THIS.var_SPY_civ_navy_intel_factor_base }
				add_to_variable = { PREV.var_SPY_civ_airforce_intel_factor = THIS.var_SPY_civ_airforce_intel_factor_base }
				add_to_variable = { PREV.var_SPY_civ_root_out_resistance_effectiveness_factor = THIS.var_SPY_civ_root_out_resistance_effectiveness_factor_base }
			}
			#research_speed_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_civ_research_speed_factor > global.SPY_civ_research_speed_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_civ_research_speed_factor = global.SPY_civ_research_speed_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx }
			}
			#civilian_intel_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_civ_civilian_intel_factor > global.SPY_civ_civilian_intel_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_civ_civilian_intel_factor = global.SPY_civ_civilian_intel_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx }
			}
			#army_intel_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_civ_army_intel_factor > global.SPY_civ_army_intel_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_civ_army_intel_factor = global.SPY_civ_army_intel_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx }
			}
			#navy_intel_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_civ_navy_intel_factor > global.SPY_civ_navy_intel_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_civ_navy_intel_factor = global.SPY_civ_navy_intel_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx }
			}
			#airforce_intel_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_civ_airforce_intel_factor > global.SPY_civ_airforce_intel_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_civ_airforce_intel_factor = global.SPY_civ_airforce_intel_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx }
			}
			#root_out_resistance_effectiveness_factor
			if = {
				limit = {
					check_variable = {
						PREV.var_SPY_civ_root_out_resistance_effectiveness_factor > global.SPY_civ_root_out_resistance_effectiveness_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx
					}
				}
				set_variable = { PREV.var_SPY_civ_root_out_resistance_effectiveness_factor = global.SPY_civ_root_out_resistance_effectiveness_factor_max_array^PREV.temp_SPY_civ_access_system_highest_idx }
			}
		}
	}
}

########################
### spy sat missions ### ROOT.spy_mission_array^num
########################

clear_spy_sat_mission_arrays = {
	for_each_loop = {
		array = ROOT.spy_mission_array
		var:ROOT.spy_mission_array^i = {
			if = {
				limit = {
					NOT = { has_country_flag = spy_sat_mission_from_@ROOT }
				}
				remove_from_array = {
					array = ROOT.spy_mission_array
					index = i
				}
				remove_from_array = {
					array = ROOT.spy_mission_sat_num_array
					index = i
				}
			}
		}
	}
}



#####################
### space launch ###
####################

set_OLV_display_array = {
	resize_array = { OLV_display_array = 0 }
	resize_array = { sat_payload_display_array = 0 }
	resize_array = { spp_payload_display_array = 0 }
	resize_array = { ASAT_display_array = 0 }
	resize_array = { KILLSAT_display_array = 0 }
	resize_array = { RODS_display_array = 0 }
	### OLV1
	add_to_array = { OLV_display_array = 101 }
	### OLV2
	add_to_array = { OLV_display_array = 102 }
	### OLV3
	add_to_array = { OLV_display_array = 103 }
	### OLV4
	add_to_array = { OLV_display_array = 104 }
	### OLV5
	add_to_array = { OLV_display_array = 105 }
	### OLV6
	add_to_array = { OLV_display_array = 106 }
	### OLV7
	add_to_array = { OLV_display_array = 107 }
	### OLV8
	add_to_array = { OLV_display_array = 108 }
}

set_sat_payload_display_array = {
	resize_array = { OLV_display_array = 0 }
	resize_array = { sat_payload_display_array = 0 }
	resize_array = { spp_payload_display_array = 0 }
	resize_array = { ASAT_display_array = 0 }
	resize_array = { KILLSAT_display_array = 0 }
	resize_array = { RODS_display_array = 0 }
	### GNSS1
	add_to_array = { sat_payload_display_array = 111 }
	### GNSS2
	add_to_array = { sat_payload_display_array = 112 }
	### GNSS3
	add_to_array = { sat_payload_display_array = 113 }
	### GNSS4
	add_to_array = { sat_payload_display_array = 114 }
	### GNSS5
	add_to_array = { sat_payload_display_array = 115 }
	### GNSS6
	add_to_array = { sat_payload_display_array = 116 }
	### GNSS7
	add_to_array = { sat_payload_display_array = 117 }
	### GNSS8
	add_to_array = { sat_payload_display_array = 118 }
	### COMSAT1
	add_to_array = { sat_payload_display_array = 121 }
	### COMSAT2
	add_to_array = { sat_payload_display_array = 122 }
	### COMSAT3
	add_to_array = { sat_payload_display_array = 123 }
	### COMSAT4
	add_to_array = { sat_payload_display_array = 124 }
	### COMSAT5
	add_to_array = { sat_payload_display_array = 125 }
	### COMSAT6
	add_to_array = { sat_payload_display_array = 126 }
	### COMSAT7
	add_to_array = { sat_payload_display_array = 127 }
	### COMSAT8
	add_to_array = { sat_payload_display_array = 128 }
	### SPYSAT1
	add_to_array = { sat_payload_display_array = 131 }
	### SPYSAT2
	add_to_array = { sat_payload_display_array = 132 }
	### SPYSAT3
	add_to_array = { sat_payload_display_array = 133 }
	### SPYSAT4
	add_to_array = { sat_payload_display_array = 134 }
	### SPYSAT5
	add_to_array = { sat_payload_display_array = 135 }
	### SPYSAT6
	add_to_array = { sat_payload_display_array = 136 }
	### SPYSAT7
	add_to_array = { sat_payload_display_array = 137 }
	### SPYSAT8
	add_to_array = { sat_payload_display_array = 138 }
	### KILLSAT1
	add_to_array = { sat_payload_display_array = 141 }
	### KILLSAT2
	add_to_array = { sat_payload_display_array = 142 }
	### KILLSAT3
	add_to_array = { sat_payload_display_array = 143 }
	### KILLSAT4
	add_to_array = { sat_payload_display_array = 144 }
	### KILLSAT5
	add_to_array = { sat_payload_display_array = 145 }
	### KILLSAT6
	add_to_array = { sat_payload_display_array = 146 }
	### RODS1
	add_to_array = { sat_payload_display_array = 151 }
	### RODS2
	add_to_array = { sat_payload_display_array = 152 }
	### RODS3
	add_to_array = { sat_payload_display_array = 153 }
}

set_spp_payload_display_array = {
	resize_array = { OLV_display_array = 0 }
	resize_array = { sat_payload_display_array = 0 }
	resize_array = { spp_payload_display_array = 0 }
	resize_array = { ASAT_display_array = 0 }
	resize_array = { KILLSAT_display_array = 0 }
	resize_array = { RODS_display_array = 0 }
	### SPP0
	add_to_array = { spp_payload_display_array = 1000 }
	### SPP1
	add_to_array = { spp_payload_display_array = 1001 }
	### SPP2
	add_to_array = { spp_payload_display_array = 1002 }
}

set_ASAT_display_array = {
	resize_array = { OLV_display_array = 0 }
	resize_array = { sat_payload_display_array = 0 }
	resize_array = { spp_payload_display_array = 0 }
	resize_array = { ASAT_display_array = 0 }
	resize_array = { KILLSAT_display_array = 0 }
	resize_array = { RODS_display_array = 0 }
	### ABM0
}

set_KILLSAT_display_array = {
	resize_array = { OLV_display_array = 0 }
	resize_array = { sat_payload_display_array = 0 }
	resize_array = { spp_payload_display_array = 0 }
	resize_array = { ASAT_display_array = 0 }
	resize_array = { KILLSAT_display_array = 0 }
	resize_array = { RODS_display_array = 0 }
	### KILLSAT1
	add_to_array = { KILLSAT_display_array = 141 }
	### KILLSAT2
	add_to_array = { KILLSAT_display_array = 142 }
	### KILLSAT3
	add_to_array = { KILLSAT_display_array = 143 }
	### KILLSAT4
	add_to_array = { KILLSAT_display_array = 144 }
	### KILLSAT5
	add_to_array = { KILLSAT_display_array = 145 }
	### KILLSAT6
	add_to_array = { KILLSAT_display_array = 146 }
}

set_RODS_display_array = {
	resize_array = { OLV_display_array = 0 }
	resize_array = { sat_payload_display_array = 0 }
	resize_array = { spp_payload_display_array = 0 }
	resize_array = { ASAT_display_array = 0 }
	resize_array = { KILLSAT_display_array = 0 }
	resize_array = { RODS_display_array = 0 }
	### RODS1
	add_to_array = { RODS_display_array = 151 }
	### RODS2
	add_to_array = { RODS_display_array = 152 }
	### RODS3
	add_to_array = { RODS_display_array = 153 }
}

clear_payload_types = {
	ROOT = {
		clear_variable = var_launch_mass
		clear_array = payload_types_array
		add_to_array = { payload_types_array = 1 }
		add_to_array = { payload_types_array = 1 }
		add_to_array = { payload_types_array = 1 }
		add_to_array = { payload_types_array = 1 }
	}
}

##################
### OLV launch ###
##################

launch_OLV = {
	clear_array = payload_array
	subtract_from_variable = { missile_inventory_array^var_OLV_type = ROOT.var_OLV_flights }
	while_loop_effect = {
		limit = {
			check_variable = { var_OLV_flights > 0 }
			check_variable = { var_OLV_inventory > 0 }
		}
		subtract_from_variable = { ROOT.var_OLV_flights = 1 }
		subtract_from_variable = { ROOT.var_OLV_inventory = 1 }
		add_to_variable = { var_orbital_launch_total = 1 }
		randomize_variable = { # Pap has put his Doner in this code and I have no idea what this does
			var = var_OLV_trajectory
			distribution = uniform
			min = 0
			max = 1
		}
		if = {
			limit = {
				OR = {
					check_variable = { ROOT.var_OLV_reliability > ROOT.var_OLV_trajectory }
					check_variable = { ROOT.var_OLV_reliability = ROOT.var_OLV_trajectory }
				}
			}
			add_to_variable = { ROOT.var_orbital_launch_success = 1 }
			for_each_loop = {
				array = payload_types_array
				if = {
					limit = {
						check_variable = { payload_types_array^i > 999 }
					}
					if = {
						limit = {
							check_variable = { spp_inventory_array^i > 0 }
						}
						subtract_from_variable = { spp_inventory_array^i = 1 }
						add_to_variable = { ROOT.var_spp_payload_delivered = 1 }
						set_temp_variable = { temp_sppID = payload_types_array^i }
						subtract_from_temp_variable = { temp_sppID = 1000 }
						add_to_variable = { ROOT.spp_orbit_array^temp_sppID = 1 }
					}
				}
				else_if = {
					limit = {
						NOT = { check_variable = { payload_types_array^i = 1 } }
					}
					if = {
						limit = {
							set_temp_variable = { temp1 = payload_types_array^i }
							check_variable = { missile_inventory_array^temp1 > 0 }
						}
						subtract_from_variable = { missile_inventory_array^temp1 = 1 }
						add_to_array = { payload_array = temp1 }
						add_to_variable = { ROOT.var_sat_payload_delivered = 1 }
					}
				}
			}
		}
		else = {
			add_to_variable = { ROOT.var_orbital_launch_fail = 1 }
			for_each_loop = {
				array = payload_types_array
				if = {
					limit = {
						check_variable = { payload_types_array^i > 999 }
					}
					if = {
						limit = {
							check_variable = { spp_inventory_array^i > 0 }
						}
						subtract_from_variable = { spp_inventory_array^i = 1 }
						add_to_variable = { ROOT.var_spp_payload_lost = 1 }
					}
				}
				else_if = {
					limit = {
						NOT = { check_variable = { payload_types_array^i = 1 } }
					}
					if = {
						limit = {
							set_temp_variable = { temp1 = payload_types_array^i }
							check_variable = { missile_inventory_array^temp1 > 0 }
						}
						subtract_from_variable = { missile_inventory_array^payload_types_array^i = 1 }
						add_to_variable = { ROOT.var_sat_payload_lost = 1 }
					}
				}
			}
		}
	}
	resize_array = { payload_array = ROOT.var_sat_payload_delivered }
	add_satellite_from_payload = yes
	clear_payload_types = yes
}


########################
### satellite launch ###
########################

add_satellite_from_payload = {
	resize_array = { GNSS_satellite_array = 8 }
	resize_array = { COM_satellite_array = 8 }
	resize_array = { SPY_satellite_array = 8 }
	resize_array = { KILL_satellite_array = 6 }
	resize_array = { RODS_satellite_array = 3 }

	for_each_loop = {
		array = payload_array
		if = {
			limit = {
				check_variable = { payload_array^i = 111 }
			}
			add_to_variable = { GNSS_satellite_array^0 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 112 }
			}
			add_to_variable = { GNSS_satellite_array^1 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 113 }
			}
			add_to_variable = { GNSS_satellite_array^2 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 114 }
			}
			add_to_variable = { GNSS_satellite_array^3 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 115 }
			}
			add_to_variable = { GNSS_satellite_array^4 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 116 }
			}
			add_to_variable = { GNSS_satellite_array^5 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 117 }
			}
			add_to_variable = { GNSS_satellite_array^6 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 118 }
			}
			add_to_variable = { GNSS_satellite_array^7 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 121 }
			}
			add_to_variable = { COM_satellite_array^0 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 122 }
			}
			add_to_variable = { COM_satellite_array^1 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 123 }
			}
			add_to_variable = { COM_satellite_array^2 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 124 }
			}
			add_to_variable = { COM_satellite_array^3 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 125 }
			}
			add_to_variable = { COM_satellite_array^4 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 126 }
			}
			add_to_variable = { COM_satellite_array^5 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 127 }
			}
			add_to_variable = { COM_satellite_array^6 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 128 }
			}
			add_to_variable = { COM_satellite_array^7 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 131 }
			}
			add_to_variable = { SPY_satellite_array^0 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 132 }
			}
			add_to_variable = { SPY_satellite_array^1 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 133 }
			}
			add_to_variable = { SPY_satellite_array^2 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 134 }
			}
			add_to_variable = { SPY_satellite_array^3 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 135 }
			}
			add_to_variable = { SPY_satellite_array^4 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 136 }
			}
			add_to_variable = { SPY_satellite_array^5 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 137 }
			}
			add_to_variable = { SPY_satellite_array^6 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 138 }
			}
			add_to_variable = { SPY_satellite_array^7 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 141 }
			}
			add_to_variable = { KILL_satellite_array^0 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 142 }
			}
			add_to_variable = { KILL_satellite_array^1 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 143 }
			}
			add_to_variable = { KILL_satellite_array^2 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 144 }
			}
			add_to_variable = { KILL_satellite_array^3 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 145 }
			}
			add_to_variable = { KILL_satellite_array^4 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 146 }
			}
			add_to_variable = { KILL_satellite_array^5 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 151 }
			}
			add_to_variable = { RODS_satellite_array^0 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 152 }
			}
			add_to_variable = { RODS_satellite_array^1 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
		if = {
			limit = {
				check_variable = { payload_array^i = 153 }
			}
			add_to_variable = { RODS_satellite_array^2 = 1 }
			add_to_array = { orbit_array = payload_array^i }
			set_variable = { var_orbit_display_ID = orbit_array^num }
			subtract_from_variable = { var_orbit_display_ID = 1 }
			add_new_satellite_to_orbit = yes
		}
	}
	#
	clear_array = payload_array
}

###################################
### MD_satellite_orbit_view_gui ###
###################################

set_sat_orbit_startup = {
	set_variable = { add_plus_X = 0 }
	set_variable = { add_minus_X = 0 }
	set_temp_variable = { temp1 = 0 }
	while_loop_effect = {
		limit = { check_variable = { temp1 < 180 } }
		add_to_array = { sat_1_array = -1 }
		add_to_temp_variable = { temp1 = 1 }
	}
	set_temp_variable = { temp2 = 0 }
	while_loop_effect = {
		limit = { check_variable = { temp2 < 400 } }
		add_to_array = { sat_2_array = -1 }
		add_to_temp_variable = { temp2 = 1 }
	}
	set_temp_variable = { temp3 = 0 }
	while_loop_effect = {
		limit = { check_variable = { temp3 < 336 } }
		add_to_array = { sat_3_array = -1 }
		add_to_temp_variable = { temp3 = 1 }
	}
	set_temp_variable = { temp4 = 0 }
	while_loop_effect = {
		limit = { check_variable = { temp4 < 400 } }
		add_to_array = { sat_4_array = -1 }
		add_to_temp_variable = { temp4 = 1 }
	}
	set_temp_variable = { temp5 = 0 }
	while_loop_effect = {
		limit = { check_variable = { temp5 < 180 } }
		add_to_array = { sat_5_array = -1 }
		add_to_temp_variable = { temp5 = 1 }
	}
}

temp_scripted_effect = {
	642 = {
		add_contested_owner = POL
	}
}


add_new_satellite_to_orbit = {
	if = {
		limit = {
			OR = {
				check_variable = { var_orbit = 3 }
				check_variable = { var_orbit = 0 }
			}
		}
		if = {
			limit = {
				any_of = {
					array = sat_3_array
					check_variable = { v = -1 }
				}
				check_variable = { sat_3_array^num > 335 }
				check_variable = { sat_6_array^num > 0 }
			}
			set_variable = { sat_3_array^i = var_orbit_display_ID }
		}
		else_if = {
			limit = {
				all_of = {
					array = sat_3_array
					check_variable = { v > -1 }
				}
				check_variable = { sat_3_array^num > 335 }
			}
			add_new_satellite_to_orbit_6 = yes
		}
		else = {
			add_new_satellite_to_orbit_3 = yes
			add_to_variable = { var_sat_block_3 = 1 }
		}
		set_variable = { var_orbit = 2 }
	}
	else_if = {
		limit = {
			check_variable = { var_orbit = 2 }
		}
		if = {
			limit = {
				any_of = {
					array = sat_2_array
					check_variable = { v = -1 }
				}
				check_variable = { sat_2_array^num > 399 }
				check_variable = { sat_6_array^num > 0 }
			}
			set_variable = { sat_2_array^i = var_orbit_display_ID } #set_variable = { sat_2_array^i = 1 }
		}
		else_if = {
			limit = {
				all_of = {
					array = sat_2_array
					check_variable = { v > -1 }
				}
				check_variable = { sat_2_array^num > 399 }
			}
			add_new_satellite_to_orbit_6 = yes
		}
		else = {
			add_new_satellite_to_orbit_2 = yes
			add_to_variable = { var_sat_block_2 = 1 }
		}
		set_variable = { var_orbit = 4 }
	}
	else_if = {
		limit = {
			check_variable = { var_orbit = 4 }
		}
		if = {
			limit = {
				any_of = {
					array = sat_4_array
					check_variable = { v = -1 }
				}
				check_variable = { sat_4_array^num > 399 }
				check_variable = { sat_6_array^num > 0 }
			}
			set_variable = { sat_4_array^i = var_orbit_display_ID } #set_variable = { sat_4_array^i = 1 }
		}
		else_if = {
			limit = {
				all_of = {
					array = sat_4_array
					check_variable = { v > -1 }
				}
				check_variable = { sat_4_array^num > 399 }
			}
			add_new_satellite_to_orbit_6 = yes
		}
		else = {
			add_new_satellite_to_orbit_4 = yes
			add_to_variable = { var_sat_block_4 = 1 }
		}
		set_variable = { var_orbit = 1 }
	}
	else_if = {
		limit = {
			check_variable = { var_orbit = 1 }
		}
		if = {
			limit = {
				any_of = {
					array = sat_1_array
					check_variable = { v = -1 }
				}
				check_variable = { sat_1_array^num > 179 }
				check_variable = { sat_6_array^num > 0 }
			}
			set_variable = { sat_1_array^i = var_orbit_display_ID } #set_variable = { sat_1_array^i = 1 }
		}
		else_if = {
			limit = {
				all_of = {
					array = sat_1_array
					check_variable = { v > -1 }
				}
				check_variable = { sat_1_array^num > 179 }
			}
			add_new_satellite_to_orbit_6 = yes
		}
		else = {
			add_new_satellite_to_orbit_1 = yes
			add_to_variable = { var_sat_block_1 = 1 }
		}
		set_variable = { var_orbit = 5 }
	}
	else_if = {
		limit = {
			check_variable = { var_orbit = 5 }
		}
		if = {
			limit = {
				any_of = {
					array = sat_5_array
					check_variable = { v = -1 }
				}
				check_variable = { sat_5_array^num > 179 }
				check_variable = { sat_6_array^num > 0 }
			}
			set_variable = { sat_5_array^i = var_orbit_display_ID } #set_variable = { sat_5_array^i = 1 }
		}
		else_if = {
			limit = {
				all_of = {
					array = sat_5_array
					check_variable = { v > -1 }
				}
				check_variable = { sat_5_array^num > 179 }
			}
			add_new_satellite_to_orbit_6 = yes
		}
		else = {
			add_new_satellite_to_orbit_5 = yes
			add_to_variable = { var_sat_block_5 = 1 }
		}
		set_variable = { var_orbit = 3 }
	}
}

add_new_satellite_to_orbit_1 = {
	add_to_variable = { var_sat_in_orbit = 1 }
	if = {
		limit = {
			check_variable = {
				add_minus_X1 < add_plus_X1
			}
		}
		add_to_variable = { add_minus_X1 = 1 }
		set_temp_variable = { temp1 = 90 }
		subtract_from_temp_variable = { temp1 = add_minus_X1 }
	}
	else = {
		set_temp_variable = { temp1 = 90 }
		add_to_temp_variable = { temp1 = add_plus_X1 }
		add_to_variable = { add_plus_X1 = 1 }
	}
	set_variable = { sat_1_array^temp1 = var_orbit_display_ID }
}
add_new_satellite_to_orbit_2 = {
	add_to_variable = { var_sat_in_orbit = 1 }
	if = {
		limit = {
			check_variable = {
				add_minus_X2 < add_plus_X2
			}
		}
		add_to_variable = { add_minus_X2 = 1 }
		set_temp_variable = { temp2 = 180 }
		subtract_from_temp_variable = { temp2 = add_minus_X2 }
	}
	else = {
		set_temp_variable = { temp2 = 180 }
		add_to_temp_variable = { temp2 = add_plus_X2 }
		add_to_variable = { add_plus_X2 = 1 }
	}
	set_variable = { sat_2_array^temp2 = var_orbit_display_ID }
}
add_new_satellite_to_orbit_3 = {
	add_to_variable = { var_sat_in_orbit = 1 }
	if = {
		limit = {
			check_variable = {
				add_minus_X3 < add_plus_X3
			}
		}
		add_to_variable = { add_minus_X3 = 1 }
		set_temp_variable = { temp3 = 147 }
		subtract_from_temp_variable = { temp3 = add_minus_X3 }
	}
	else = {
		set_temp_variable = { temp3 = 147 }
		add_to_temp_variable = { temp3 = add_plus_X3 }
		add_to_variable = { add_plus_X3 = 1 }
	}
	set_variable = { sat_3_array^temp3 = var_orbit_display_ID }
}
add_new_satellite_to_orbit_4 = {
	add_to_variable = { var_sat_in_orbit = 1 }
	if = {
		limit = {
			check_variable = {
				add_minus_X4 < add_plus_X4
			}
		}
		add_to_variable = { add_minus_X4 = 1 }
		set_temp_variable = { temp4 = 180 }
		subtract_from_temp_variable = { temp4 = add_minus_X4 }
	}
	else = {
		set_temp_variable = { temp4 = 180 }
		add_to_temp_variable = { temp4 = add_plus_X4 }
		add_to_variable = { add_plus_X4 = 1 }
	}
	set_variable = { sat_4_array^temp4 = var_orbit_display_ID } #set_variable = { sat_4_array^temp4 = 1 }
}
add_new_satellite_to_orbit_5 = {
	add_to_variable = { var_sat_in_orbit = 1 }
	if = {
		limit = {
			check_variable = {
				add_minus_X5 < add_plus_X5
			}
		}
		add_to_variable = { add_minus_X5 = 1 }
		set_temp_variable = { temp5 = 90 }
		subtract_from_temp_variable = { temp5 = add_minus_X5 }
	}
	else = {
		set_temp_variable = { temp5 = 90 }
		add_to_temp_variable = { temp5 = add_plus_X5 }
		add_to_variable = { add_plus_X5 = 1 }
	}
	set_variable = { sat_5_array^temp5 = var_orbit_display_ID } #set_variable = { sat_5_array^temp5 = 1 }
}

add_new_satellite_to_orbit_6 = {
	if = {
		limit = {
			all_of = {
				array = sat_6_array
				check_variable = { v > 0 }
			}
			check_variable = { sat_6_array^num > 1503 }
		}
		ROOT = { news_event = { id = satellites.8 } }
	}
	else = {
		add_to_variable = { var_sat_in_orbit = 1 }
		add_to_array = { sat_6_array = var_orbit_display_ID } #add_to_array = { sat_6_array = 1 }
	}
}

########################
### retire satellite ###
########################

### not used in gui atm
retire_selected_sat = {
	for_each_loop = {
		array = sat_1_array
		if = {
			limit = {
				check_variable = { sat_1_array^i = var_selected_sat }
			}
			set_variable = { orbit_array^var_selected_sat = 0 }
			set_variable = { sat_1_array^i = -1 }
		}
	}
	for_each_loop = {
		array = sat_2_array
		if = {
			limit = {
				check_variable = { sat_2_array^i = var_selected_sat }
			}
			set_variable = { orbit_array^var_selected_sat = 0 }
			set_variable = { sat_2_array^i = -1 }
		}
	}
	for_each_loop = {
		array = sat_3_array
		if = {
			limit = {
				check_variable = { sat_3_array^i = var_selected_sat }
			}
			set_variable = { orbit_array^var_selected_sat = 0 }
			set_variable = { sat_3_array^i = -1 }
		}
	}
	for_each_loop = {
		array = sat_4_array
		if = {
			limit = {
				check_variable = { sat_4_array^i = var_selected_sat }
			}
			set_variable = { orbit_array^var_selected_sat = 0 }
			set_variable = { sat_4_array^i = -1 }
		}
	}
	for_each_loop = {
		array = sat_5_array
		if = {
			limit = {
				check_variable = { sat_5_array^i = var_selected_sat }
			}
			set_variable = { orbit_array^var_selected_sat = 0 }
			set_variable = { sat_5_array^i = -1 }
		}
	}
	for_each_loop = {
		array = sat_6_array
		if = {
			limit = {
				check_variable = { sat_6_array^i = var_selected_sat }
			}
			set_variable = { orbit_array^var_selected_sat = 0 }
			set_variable = { sat_6_array^i = -1 }
		}
	}
}

##############################
### anti satellite weapons ###
##############################

remove_satellite_from_orbit = {
	for_each_loop = {
		array = THIS.sat_1_array
		if = {
			limit = {
				check_variable = { sat_1_array^i = var_sat_ID }
			}
			set_variable = { orbit_array^var_sat_ID = 0 }
			set_variable = { sat_1_array^i = -1 }
		}
	}
	for_each_loop = {
		array = THIS.sat_2_array
		if = {
			limit = {
				check_variable = { sat_2_array^i = var_sat_ID }
			}
			set_variable = { orbit_array^var_sat_ID = 0 }
			set_variable = { sat_2_array^i = -1 }
		}
	}
	for_each_loop = {
		array = THIS.sat_3_array
		if = {
			limit = {
				check_variable = { sat_3_array^i = var_sat_ID }
			}
			set_variable = { orbit_array^var_sat_ID = 0 }
			set_variable = { sat_3_array^i = -1 }
		}
	}
	for_each_loop = {
		array = THIS.sat_4_array
		if = {
			limit = {
				check_variable = { sat_4_array^i = var_sat_ID }
			}
			set_variable = { orbit_array^var_sat_ID = 0 }
			set_variable = { sat_4_array^i = -1 }
		}
	}
	for_each_loop = {
		array = THIS.sat_5_array
		if = {
			limit = {
				check_variable = { sat_5_array^i = var_sat_ID }
			}
			set_variable = { orbit_array^var_sat_ID = 0 }
			set_variable = { sat_5_array^i = -1 }
		}
	}
	for_each_loop = {
		array = THIS.sat_6_array
		if = {
			limit = {
				check_variable = { sat_6_array^i = var_sat_ID }
			}
			set_variable = { orbit_array^var_sat_ID = 0 }
			set_variable = { sat_6_array^i = -1 }
		}
	}
}

remove_satellite_from_system = {
	var:tempTAG = {
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 111 }
			}
			subtract_from_variable = { GNSS_satellite_array^0 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 112 }
			}
			subtract_from_variable = { GNSS_satellite_array^1 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 113 }
			}
			subtract_from_variable = { GNSS_satellite_array^2 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 114 }
			}
			subtract_from_variable = { GNSS_satellite_array^3 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 115 }
			}
			subtract_from_variable = { GNSS_satellite_array^4 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 116 }
			}
			subtract_from_variable = { GNSS_satellite_array^5 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 117 }
			}
			subtract_from_variable = { GNSS_satellite_array^6 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 118 }
			}
			subtract_from_variable = { GNSS_satellite_array^7 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 121 }
			}
			subtract_from_variable = { COM_satellite_array^0 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 122 }
			}
			subtract_from_variable = { COM_satellite_array^1 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 123 }
			}
			subtract_from_variable = { COM_satellite_array^2 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 124 }
			}
			subtract_from_variable = { COM_satellite_array^3 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 125 }
			}
			subtract_from_variable = { COM_satellite_array^4 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 126 }
			}
			subtract_from_variable = { COM_satellite_array^5 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 127 }
			}
			subtract_from_variable = { COM_satellite_array^6 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 128 }
			}
			subtract_from_variable = { COM_satellite_array^7 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 131 }
			}
			subtract_from_variable = { SPY_satellite_array^0 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 132 }
			}
			subtract_from_variable = { SPY_satellite_array^1 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 133 }
			}
			subtract_from_variable = { SPY_satellite_array^2 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 134 }
			}
			subtract_from_variable = { SPY_satellite_array^3 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 135 }
			}
			subtract_from_variable = { SPY_satellite_array^4 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 136 }
			}
			subtract_from_variable = { SPY_satellite_array^5 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 137 }
			}
			subtract_from_variable = { SPY_satellite_array^6 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 138 }
			}
			subtract_from_variable = { SPY_satellite_array^7 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 141 }
			}
			subtract_from_variable = { KILL_satellite_array^0 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 142 }
			}
			subtract_from_variable = { KILL_satellite_array^1 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 143 }
			}
			subtract_from_variable = { KILL_satellite_array^2 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 144 }
			}
			subtract_from_variable = { KILL_satellite_array^3 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 145 }
			}
			subtract_from_variable = { KILL_satellite_array^4 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 146 }
			}
			subtract_from_variable = { KILL_satellite_array^5 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 151 }
			}
			subtract_from_variable = { RODS_satellite_array^0 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 152 }
			}
			subtract_from_variable = { RODS_satellite_array^1 = 1 }
		}
		if = {
			limit = {
				check_variable = { orbit_array^var_sat_ID = 153 }
			}
			subtract_from_variable = { RODS_satellite_array^2 = 1 }
		}
	}
}


anti_satellite_weapon_use = {
	#set_variable = { ROOT.var_anti_sat_accuracy = 0 }
	#set_variable = { ROOT.var_anti_satellite_weapon_num = 0 }
	#set_temp_variable = { temp1 = ROOT.var_anti_satellite_weapon_num }
	for_each_loop = {
		array = sat_target_array
		set_variable = { ROOT.var_sat_orbit = 0 }
		set_variable = { tempTAG = ROOT.sat_target_TAG_array^i }
		log = "anti_satellite_weapon_use [?tempTAG.GetTag]"
		while_loop_effect = {
			limit = {
				check_variable = { ROOT.var_anti_satellite_weapon_num > 0 }
				check_variable = { ROOT.sat_target_array^i > 0 }
			}
			randomize_variable = {
				var = ROOT.var_sat_orbit
				distribution = uniform
				min = 0
				max = 1
			}
			#subtract_from_temp_variable = { temp1 = 1 }
			subtract_from_variable = { ROOT.var_anti_satellite_weapon_num = 1 }
			if = {
				limit = {
					OR = {
						check_variable = { ROOT.var_anti_sat_accuracy > ROOT.var_sat_orbit }
						check_variable = { ROOT.var_anti_sat_accuracy = ROOT.var_sat_orbit }
					}
				}
				add_to_variable = { ROOT.var_sat_hit = 1 }
				var:tempTAG = {
					set_variable = { var_sat_ID = ROOT.sat_target_array^i }
					remove_satellite_from_system = yes
					remove_satellite_from_orbit = yes
					set_variable = { ROOT.sat_target_array^i = 0 }
					add_to_variable = { var_sat_lost = 1 }
				}
			}
			else = {
				add_to_variable = { ROOT.var_sat_miss = 1 }
			}
		}
		var:tempTAG = {
			update_sat_systems_stats = yes
		}
	}
	#set_variable = { ROOT.var_anti_satellite_weapon_num = 0 }
	clear_array = ROOT.sat_target_array
	clear_array = ROOT.sat_target_TAG_array
	if = {
		limit = {
			check_variable = { ROOT.var_anti_satellite_weapon_num > 0 }
		}
		add_to_variable = { ROOT.var_sat_miss = ROOT.var_anti_satellite_weapon_num }
		set_variable = { ROOT.var_anti_satellite_weapon_num = 0 }
	}
}

#remove used killer satellites
remove_killsat_used = {
	while_loop_effect = {
		limit = {
			check_variable = { ROOT.var_KILLSAT_salvo > 0 }
		}
		for_each_loop = {
			array = orbit_array
			if = {
				limit = {
					check_variable = { ROOT.orbit_array^i = ROOT.var_KILLSAT_type }
				}
				set_variable = { ROOT.var_killsat_fired = i }
			}
		}
		set_variable = { tempTAG = ROOT.id }
		ROOT = {
			set_variable = { var_sat_ID = ROOT.var_killsat_fired }
			remove_satellite_from_system = yes
			remove_satellite_from_orbit = yes
		}
		subtract_from_variable = { ROOT.var_KILLSAT_salvo = 1 }
	}
	set_satellites_gui = yes
	set_variable = { var_KILLSAT_orbit = KILL_satellite_array^var_KILLSAT_type }
}

#remove used rods
remove_rods_used = {
	for_each_loop = {
		array = orbit_array
		if = {
			limit = {
				check_variable = { ROOT.orbit_array^i = ROOT.var_RODS_type }
			}
			set_variable = { ROOT.var_rods_fired = i }
		}
	}
	set_variable = { tempTAG = ROOT.id }
	ROOT = {
		set_variable = { var_sat_ID = ROOT.var_rods_fired }
		remove_satellite_from_system = yes
		remove_satellite_from_orbit = yes
	}
	set_satellites_gui = yes
}

### right container # sat access arrays

set_sat_access_arrays_selected_TAG = {
	clear_array = selected_TAG_GNSS_mil_access_array
	clear_array = selected_TAG_GNSS_civ_access_array
	clear_array = selected_TAG_COM_mil_access_array
	clear_array = selected_TAG_COM_civ_access_array
	clear_array = selected_TAG_SPY_mil_access_array
	clear_array = selected_TAG_SPY_civ_access_array
	var:orbit_selected_TAG = {
		for_each_loop = {
			array = GNSS_mil_access_array
			add_to_array = { ROOT.selected_TAG_GNSS_mil_access_array = v }
		}
		for_each_loop = {
			array = GNSS_civ_access_array
			add_to_array = { ROOT.selected_TAG_GNSS_civ_access_array = v }
		}
		for_each_loop = {
			array = COM_mil_access_array
			add_to_array = { ROOT.selected_TAG_COM_mil_access_array = v }
		}
		for_each_loop = {
			array = COM_civ_access_array
			add_to_array = { ROOT.selected_TAG_COM_civ_access_array = v }
		}
		for_each_loop = {
			array = SPY_mil_access_array
			add_to_array = { ROOT.selected_TAG_SPY_mil_access_array = v }
		}
		for_each_loop = {
			array = SPY_civ_access_array
			add_to_array = { ROOT.selected_TAG_SPY_civ_access_array = v }
		}
	}
}

# set_temp_variable = { tag_to_grab = TAG.id }
update_missile_satellite_inventory = {
	for_each_loop = {
		array = missile_inventory_array
		value = v
		index = i
		add_to_variable = {
			missile_inventory_array^i = var:tag_to_grab.missile_inventory_array^i
		}
	}
	for_each_loop = {
		array = GNSS_satellite_array
		value = v
		index = i
		add_to_variable = {
			GNSS_satellite_array^i = var:tag_to_grab.GNSS_satellite_array^i
		}
	}
	for_each_loop = {
		array = COM_satellite_array
		value = v
		index = i
		add_to_variable = {
			COM_satellite_array^i = var:tag_to_grab.COM_satellite_array^i
		}
	}
	for_each_loop = {
		array = SPY_satellite_array
		value = v
		index = i
		add_to_variable = {
			SPY_satellite_array^i = var:tag_to_grab.SPY_satellite_array^i
		}
	}
}

########################################
### MD_countrymissilesview_nukes_gui ###
########################################

# Documentation on how the Nuclear Production System works
# Notable Variables:
# var_enrichment_grade_factor: This is used to control how many civilian industry is required per enrichment level
# var_enrichment_nuclear_energy_prod_factor: This is used to determine how much Reactor-grade produced per tick
# var_enrichment_nuclear_material_prod_factor: This is used to determine how much Weapons-grade produced per tick

# Function: nuclear_reactor_fuel_consumption
# Purpose: This subtracts reactor grade material from the stockpile based on number of reactors
nuclear_reactor_fuel_consumption = {
	subtract_from_variable = { var_reactor_material_stockpile = nuclear_fuel_consumption } #consumption calculated in energy effects
	clamp_variable = { var = var_reactor_material_stockpile min = 0 }

	# Update Stockpile
	add_to_variable = { var_nuclear_material_stockpile = var_nuke_nuclear_material_prod }
	clamp_variable = { var = var_nuclear_material_stockpile min = 0 max = 2000000 }
	add_to_variable = { var_reactor_material_stockpile = var_nuke_nuclear_reactor_prod }
	clamp_variable = { var = var_reactor_material_stockpile min = 0 max = 2000000 }
}

# Function: setup_starting_reactor_stockpile
# Purpose: Setups the current nuclear reactor and enrichment facilities setup
setup_starting_reactor_stockpile = {
	set_variable = { nuclear_reactors = 0 }
	every_controlled_state = {
		add_to_variable = { PREV.nuclear_reactors = building_level@nuclear_reactor }
	}
	set_temp_variable = { starting_reactor_grade_stockpile = nuclear_reactors }
	multiply_temp_variable = { starting_reactor_grade_stockpile = 2500 }
	set_variable = { var_reactor_material_stockpile = starting_reactor_grade_stockpile }

	if = {
		limit = { check_variable = { enrichment_facilities > 0 } }
		set_country_flag = enabled_nuclear_reactor_fuel_production
	}
}

# Utilities
# Function: modify_missile_inventory_count
# Purpose: Allows you to modify the current amount of a missile's inventory
# Parameters: missile_index (temp_var), missile_type, missile_count
# 10;OLV 11;GNSS 12;COMSAT 13;SPYSAT 14;KILLSAT 15;Rods from God
modify_missile_inventory_count = {
	custom_effect_tooltip = modify_missile_inventory_count_tt
	add_to_variable = { missile_inventory_array^missile_index = missile_count }
}

add_missile_building_level = {
	set_temp_variable = { num_launcher_set_temp = num_launchers_set }
	add_to_temp_variable = { num_launcher_set_temp = 1 }
	set_temp_variable = { num_launcher_set_temp_total = num_launcher_set_temp }
	multiply_temp_variable = { num_launcher_set_temp_total = 50 }
	custom_effect_tooltip = add_missile_building_level_tt
	hidden_effect = {
		add_to_variable = { num_launchers_set = 1 }
		if = { limit = { check_variable = { num_launchers_set = 1 } }
			set_technology = { hid_tech_missile_1 = 1 popup = no }
		}
		if = { limit = { check_variable = { num_launchers_set = 2 } }
			set_technology = { hid_tech_missile_2 = 1 popup = no  }
		}
		if = { limit = { check_variable = { num_launchers_set = 3 } }
			set_technology = { hid_tech_missile_3 = 1 popup = no  }
		}
		if = { limit = { check_variable = { num_launchers_set = 4 } }
			set_technology = { hid_tech_missile_4 = 1 popup = no  }
		}
		if = { limit = { check_variable = { num_launchers_set = 5 } }
			set_technology = { hid_tech_missile_5 = 1 popup = no  }
		}
		if = { limit = { check_variable = { num_launchers_set = 6 } }
			set_technology = { hid_tech_missile_6 = 1 popup = no  }
		}
		if = { limit = { check_variable = { num_launchers_set = 7 } }
			set_technology = { hid_tech_missile_7 = 1 popup = no  }
		}
		if = { limit = { check_variable = { num_launchers_set = 8 } }
			set_technology = { hid_tech_missile_8 = 1 popup = no  }
		}
		if = { limit = { check_variable = { num_launchers_set = 9 } }
			set_technology = { hid_tech_missile_9 = 1 popup = no  }
		}
		if = { limit = { check_variable = { num_launchers_set = 10 } }
			set_technology = { hid_tech_missile_10 = 1 popup = no  }
		}
	}
}

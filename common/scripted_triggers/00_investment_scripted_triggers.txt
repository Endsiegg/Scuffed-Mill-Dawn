# Author(s): AngriestBird, Konki (original creator of AC construction)

# AC_building_infra_available
# Method for handling the infrastructure
AC_building_infra_available = {
	ROOT = {
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = infrastructure size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = infrastructure size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = infrastructure size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = infrastructure size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = infrastructure size > 4 include_locked = no } }
		}
		else = {
			always = no
		}
	}
}

# AC_building_airbase_available:
# Method for handling whether or not there is space for a sam-site
AC_building_airbase_available = {
	ROOT = {
		# Investor has Military-Industrial Complex/The Military
		OR = {
			has_idea = defense_industry
			has_idea = the_military
		}
		# Check to see if project_build_amount > 1
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = air_base size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = air_base size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = air_base size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = air_base size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = air_base size > 4 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 6 } }
			PREV = { free_building_slots = { building = air_base size > 5 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 7 } }
			PREV = { free_building_slots = { building = air_base size > 6 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 8 } }
			PREV = { free_building_slots = { building = air_base size > 7 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 9 } }
			PREV = { free_building_slots = { building = air_base size > 8 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 10 } }
			PREV = { free_building_slots = { building = air_base size > 9 include_locked = no } }
		}
	}
}

# AC_building_antiair_available:
# Method for handling
AC_building_antiair_available = {
	ROOT = {
		# Investor has Military-Industrial Complex/The Military
		OR = {
			has_idea = defense_industry
			has_idea = the_military
		}
		# Check to see if project_build_amount > 1
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = anti_air_building size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = anti_air_building size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = anti_air_building size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = anti_air_building size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = anti_air_building size > 4 include_locked = no } }
		}
		else = {
			always = no
		}
	}
}

AC_building_radar_available = {
	#Investor has Military Industrial Complex/The Military
	ROOT = {
		OR = {
			has_idea = defense_industry
			has_idea = the_military
		}
	}

	if = { limit = { ROOT = { has_tech = radar check_variable = { project_build_amount^-1 = 1 } } }
		radar_station < 6
	}
	else_if = { limit = { ROOT = { has_tech = radar check_variable = { project_build_amount^-1 = 2 } } }
		radar_station < 5
	}
	else_if = { limit = { ROOT = { has_tech = radar check_variable = { project_build_amount^-1 = 3 } } }
		radar_station < 4
	}
	else_if = { limit = { ROOT = { has_tech = radar check_variable = { project_build_amount^-1 = 4 } } }
		radar_station < 3
	}
	else_if = { limit = { ROOT = { has_tech = radar check_variable = { project_build_amount^-1 = 5 } } }
		radar_station < 2
	}
	else_if = { limit = { ROOT = { has_tech = radar check_variable = { project_build_amount^-1 = 6 } } }
		radar_station < 1
	}
	else = { always = no }
}

AC_building_mic_available = {
	ROOT = {
		# Investor has Military-Industrial Complex
		has_idea = defense_industry
		# Check to see if project_build_amount > 1
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = arms_factory size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = arms_factory size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = arms_factory size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = arms_factory size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = arms_factory size > 4 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 6 } }
			PREV = { free_building_slots = { building = arms_factory size > 5 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 7 } }
			PREV = { free_building_slots = { building = arms_factory size > 6 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 8 } }
			PREV = { free_building_slots = { building = arms_factory size > 7 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 9 } }
			PREV = { free_building_slots = { building = arms_factory size > 8 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 10 } }
			PREV = { free_building_slots = { building = arms_factory size > 9 include_locked = no } }
		}
	}
}

AC_building_cic_available = {
	ROOT = {
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = industrial_complex size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = industrial_complex size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = industrial_complex size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = industrial_complex size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = industrial_complex size > 4 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 6 } }
			PREV = { free_building_slots = { building = industrial_complex size > 5 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 7 } }
			PREV = { free_building_slots = { building = industrial_complex size > 6 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 8 } }
			PREV = { free_building_slots = { building = industrial_complex size > 7 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 9 } }
			PREV = { free_building_slots = { building = industrial_complex size > 8 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 10 } }
			PREV = { free_building_slots = { building = industrial_complex size > 9 include_locked = no } }
		}
	}
}

AC_building_offices_available = {
	ROOT = {
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = offices size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = offices size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = offices size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = offices size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = offices size > 4 include_locked = no } }
		}
		else = {
			always = no
		}
	}
}

# AC_building_nic_available:
# Method for checking if there is a dockyard slot available
AC_building_nic_available = {
	ROOT = {
		has_idea = maritime_industry
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = dockyard size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = dockyard size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = dockyard size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = dockyard size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = dockyard size > 4 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 6 } }
			PREV = { free_building_slots = { building = dockyard size > 5 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 7 } }
			PREV = { free_building_slots = { building = dockyard size > 6 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 8 } }
			PREV = { free_building_slots = { building = dockyard size > 7 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 9 } }
			PREV = { free_building_slots = { building = dockyard size > 8 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 10 } }
			PREV = { free_building_slots = { building = dockyard size > 9 include_locked = no } }
		}
	}
}

AC_building_ref_available = {
	ROOT = {
		has_tech = fuel_silos
		# Count the building quantity
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = synthetic_refinery size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = synthetic_refinery size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = synthetic_refinery size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = synthetic_refinery size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = synthetic_refinery size > 4 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 6 } }
			PREV = { free_building_slots = { building = synthetic_refinery size > 5 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 7 } }
			PREV = { free_building_slots = { building = synthetic_refinery size > 6 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 8 } }
			PREV = { free_building_slots = { building = synthetic_refinery size > 7 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 9 } }
			PREV = { free_building_slots = { building = synthetic_refinery size > 8 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 10 } }
			PREV = { free_building_slots = { building = synthetic_refinery size > 9 include_locked = no } }
		}
		else = { always = no }
	}
}

AC_building_foss_fuel_powerplant_available = {
	ROOT = {
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = fossil_powerplant size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = fossil_powerplant size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = fossil_powerplant size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = fossil_powerplant size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = fossil_powerplant size > 4 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 6 } }
			PREV = { free_building_slots = { building = fossil_powerplant size > 5 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 7 } }
			PREV = { free_building_slots = { building = fossil_powerplant size > 6 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 8 } }
			PREV = { free_building_slots = { building = fossil_powerplant size > 7 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 9 } }
			PREV = { free_building_slots = { building = fossil_powerplant size > 8 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 10 } }
			PREV = { free_building_slots = { building = fossil_powerplant size > 9 include_locked = no } }
		}
		else = { always = no }
	}
}

AC_building_reactor_available = {
	ROOT = {
		has_tech = reactor1
		# Count the building quantity
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = nuclear_reactor size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = nuclear_reactor size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = nuclear_reactor size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = nuclear_reactor size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = nuclear_reactor size > 4 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 6 } }
			PREV = { free_building_slots = { building = nuclear_reactor size > 5 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 7 } }
			PREV = { free_building_slots = { building = nuclear_reactor size > 6 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 8 } }
			PREV = { free_building_slots = { building = nuclear_reactor size > 7 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 9 } }
			PREV = { free_building_slots = { building = nuclear_reactor size > 8 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 10 } }
			PREV = { free_building_slots = { building = nuclear_reactor size > 9 include_locked = no } }
		}
		else = { always = no }
	}
}

building_internet_station_available = {
	ROOT = {
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = internet_station size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = internet_station size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = internet_station size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = internet_station size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = internet_station size > 4 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 6 } }
			PREV = { free_building_slots = { building = internet_station size > 5 include_locked = no } }
		}
		else = {
			always = no
		}
	}
}

AC_building_agriculture_district_available = {
	ROOT = {
		if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = agriculture_district size > 0 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = agriculture_district size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = agriculture_district size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = agriculture_district size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = agriculture_district size > 4 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 6 } }
			PREV = { free_building_slots = { building = agriculture_district size > 5 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 7 } }
			PREV = { free_building_slots = { building = agriculture_district size > 6 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 8 } }
			PREV = { free_building_slots = { building = agriculture_district size > 7 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 9 } }
			PREV = { free_building_slots = { building = agriculture_district size > 8 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 10 } }
			PREV = { free_building_slots = { building = agriculture_district size > 9 include_locked = no } }
		}
		else = { always = no }
	}
}

# building_fuel_silos_available:
# Method for checking whether or not the fuel_silo has building slots available for fuel_silos
building_fuel_silos_available = {
	ROOT = {
		if = { limit = { check_variable = { project_build_amount^-1 = 5 } }
			PREV = { free_building_slots = { building = fuel_silo size > 4 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 4 } }
			PREV = { free_building_slots = { building = fuel_silo size > 3 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 3 } }
			PREV = { free_building_slots = { building = fuel_silo size > 2 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 2 } }
			PREV = { free_building_slots = { building = fuel_silo size > 1 include_locked = no } }
		}
		else_if = { limit = { check_variable = { project_build_amount^-1 = 1 } }
			PREV = { free_building_slots = { building = fuel_silo size > 0 include_locked = no } }
		}
		else = {
			always = no
		}
	}
}

# investment_building_slot_available:
# Trigger method for handling whether or not the project can finish
investment_building_slot_available = {
	if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 1 } }
		free_building_slots = { building = industrial_complex size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 2 } }
		free_building_slots = { building = arms_factory size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 3 } }
		free_building_slots = { building = dockyard size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 4 } }
		free_building_slots = { building = infrastructure size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 5 } }
		free_building_slots = { building = offices size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 6 } }
		free_building_slots = { building = anti_air_building size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 7 } }
		free_building_slots = { building = radar_station size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 8 } }
		free_building_slots = { building = air_base size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 9 } }
		free_building_slots = { building = fuel_silo size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 10 } }
		free_building_slots = { building = internet_station size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 11 } }
		free_building_slots = { building = synthetic_refinery size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 12 } }
		free_building_slots = { building = fossil_powerplant size > 0 include_locked = no }
	}
	else_if = { limit = { check_variable = { ROOT.project_building_type^ROOT.project_type = 13 } }
		free_building_slots = { building = nuclear_reactor size > 0 include_locked = no }
	}
}

# AI Related STuff
AI_is_ready_for_another_project = {
	AND = {
		is_ai = yes
		check_variable = { active_projects < 15 }
	}
}

currently_is_considering_a_project = {
	custom_trigger_tooltip = {
		tooltip = this_investment_offer_pending_tt
		ROOT = { NOT = { has_country_flag = this_investment_offer_pending@PREV } }
	}
}

has_available_treasury_investment = {
	custom_trigger_tooltip = {
		tooltip = has_available_treasury_tt
		NOT = { check_variable = { treasury < project_monetary_cost^-1 } }
	}
}

# AI do not invest in these states
AI_no_investment_in_these_states = {
	NOT = {
		has_state_category = state_inhospitable # Ignores any nation in the Sahara
		check_variable = { THIS.state_population_k < 50 }
	}
}


# State Owned Investments
check_for_investment_project_limits = {
	custom_trigger_tooltip = {
		ROOT = {
			if = {
				limit = { has_idea = superpower }
				count_triggers = {
					amount = 1
					NOT = { has_country_flag = state_owned_investments_project_one }
					NOT = { has_country_flag = state_owned_investments_project_two }
					NOT = { has_country_flag = state_owned_investments_project_three }
					NOT = { has_country_flag = state_owned_investments_project_four }
					NOT = { has_country_flag = state_owned_investments_project_five }
					NOT = { has_country_flag = state_owned_investments_project_six }
				}
			}
			else_if = {
				limit = { has_idea = great_power }
				count_triggers = {
					amount = 1
					NOT = { has_country_flag = state_owned_investments_project_one }
					NOT = { has_country_flag = state_owned_investments_project_two }
					NOT = { has_country_flag = state_owned_investments_project_three }
					NOT = { has_country_flag = state_owned_investments_project_four }
					NOT = { has_country_flag = state_owned_investments_project_five }
				}
			}
			else_if = {
				limit = { has_idea = large_power }
				count_triggers = {
					amount = 1
					NOT = { has_country_flag = state_owned_investments_project_one }
					NOT = { has_country_flag = state_owned_investments_project_two }
					NOT = { has_country_flag = state_owned_investments_project_three }
					NOT = { has_country_flag = state_owned_investments_project_four }
				}
			}
			else_if = {
				limit = { has_idea = regional_power }
				count_triggers = {
					amount = 1
					NOT = { has_country_flag = state_owned_investments_project_one }
					NOT = { has_country_flag = state_owned_investments_project_two }
					NOT = { has_country_flag = state_owned_investments_project_three }
				}
			}
			else = {
				count_triggers = {
					amount = 1
					NOT = { has_country_flag = state_owned_investments_project_one }
					NOT = { has_country_flag = state_owned_investments_project_two }
				}
			}
		}
		tooltip = check_for_investment_project_limits_tt
	}
}
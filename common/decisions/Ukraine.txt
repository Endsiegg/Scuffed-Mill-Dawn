UKR_stability_of_ukraine_decision_category = {
	UKR_decision_demand_the_return_of_the_crimea = {
		cost = 200
		icon = GFX_decision_generic_civil_support
		days_remove = 120
		fire_only_once = yes

		visible = {
			669 = { is_owned_by = SOV }
			669 = { NOT = { is_owned_by = UKR } }
		}

		available = {
			669 = { is_owned_by = SOV }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove UKR_decision_demand_the_return_of_the_crimea"
			SOV = { country_event = { id = ukraine_revolution.4 days = 1 } }
			custom_effect_tooltip = UKR_decision_demand_the_return_of_the_crimea_TT
		}
	}
}

UKR_state_of_the_army_category = {
	UKR_reform_army = {
		icon = GFX_decision_eng_propaganda_campaigns
		days_remove = 120
		days_re_enable = 30
		fire_only_once = no
		custom_cost_trigger = {
			has_army_experience > 49
		}
		custom_cost_text = army_xp_50

		visible = {
			is_ai = no
			OR = {
				has_idea = UKR_military_state_6
				has_idea = UKR_military_state_5
				has_idea = UKR_military_state_4
				has_idea = UKR_military_state_3
				has_idea = UKR_military_state_2
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_reform_army"
			hidden_effect = {
				army_experience = -50
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove UKR_reform_army"
			if = {
				limit = { has_idea = UKR_military_state_6 }
				swap_ideas = {
					remove_idea = UKR_military_state_6
					add_idea = UKR_military_state_5
				}
			}
			else_if = {
				limit = { has_idea = UKR_military_state_5 }
				swap_ideas = {
					remove_idea = UKR_military_state_5
					add_idea = UKR_military_state_4
				}
			}
			else_if = {
				limit = { has_idea = UKR_military_state_4 }
				swap_ideas = {
					remove_idea = UKR_military_state_4
					add_idea = UKR_military_state_3
				}
			}
			else_if = {
				limit = { has_idea = UKR_military_state_3 }
				swap_ideas = {
					remove_idea = UKR_military_state_3
					add_idea = UKR_military_state_2
				}
			}
			else = {
				swap_ideas = {
					remove_idea = UKR_military_state_2
					add_idea = UKR_military_state_1
				}
			}
		}
	}

	UKR_reform_army_ai = {
		icon = GFX_decision_eng_propaganda_campaigns
		days_remove = 120
		days_re_enable = 70 # increased
		fire_only_once = no

		visible = {
			is_ai = yes
			OR = {
				has_idea = UKR_military_state_6
				has_idea = UKR_military_state_5
				has_idea = UKR_military_state_4
				has_idea = UKR_military_state_3
				has_idea = UKR_military_state_2
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_reform_army_ai"
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove UKR_reform_army_ai"
			if = {
				limit = { has_idea = UKR_military_state_6 }
				swap_ideas = {
					remove_idea = UKR_military_state_6
					add_idea = UKR_military_state_5
				}
			}
			else_if = {
				limit = { has_idea = UKR_military_state_5 }
				swap_ideas = {
					remove_idea = UKR_military_state_5
					add_idea = UKR_military_state_4
				}
			}
			else_if = {
				limit = { has_idea = UKR_military_state_4 }
				swap_ideas = {
					remove_idea = UKR_military_state_4
					add_idea = UKR_military_state_3
				}
			}
			else_if = {
				limit = { has_idea = UKR_military_state_3 }
				swap_ideas = {
					remove_idea = UKR_military_state_3
					add_idea = UKR_military_state_2
				}
			}
			else = {
				swap_ideas = {
					remove_idea = UKR_military_state_2
					add_idea = UKR_military_state_1
				}
			}
		}

		ai_will_do = {
			factor = 10
		}
	}

	UKR_integrate_UDA = {
		icon = GFX_decision_eng_propaganda_campaigns
		days_remove = 10
		days_re_enable = 60
		fire_only_once = no

		visible = {
			NOT = { has_emerging_aligned_goverment = yes }
			OR = {
				has_idea = UKR_UDA_encouraged
				has_idea = UKR_UDA_integrated
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_integrate_UDA"
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove UKR_reform_army"
			if = {
				limit = { has_idea = UKR_UDA_encouraged }
				swap_ideas = {
					remove_idea = UKR_UDA_encouraged
					add_idea = UKR_UDA_integrated
				}

				delete_unit_template_and_units = {
					division_template = "Ukranian Volunteer Unit"
					disband = yes
				}
			}
			else = {
				swap_ideas = {
					remove_idea = UKR_UDA_integrated
					add_idea = UKR_UDA_on_support
				}
			}
		}

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_idea = UKR_UDA_integrated
			}
			# keep it up unintegrated until war comes
			modifier = {
				factor = 0
				has_war = no
			}
		}
	}

	UKR_hire_foreign_advisors = {
		icon = GFX_decision_eng_propaganda_campaigns
		days_re_enable = 120
		fire_only_once = no
		cost = 50

		visible = {
			NOT = { has_emerging_aligned_goverment = yes }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_hire_foreign_advisors"
			set_temp_variable = { treasury_change = -1 }
			modify_treasury_effect = yes
			add_timed_idea = {
				idea = UKR_foreign_advisors
				days = 90
			}
		}

		ai_will_do = { factor = 10 }
	}

	UKR_integrate_azov = {
		fire_only_once = yes
		cost = 100

		visible = {
			OR = {
				has_idea = UKR_military_state_3
				has_idea = UKR_military_state_2
				has_idea = UKR_military_state_1
			}
			OR = {
				has_western_aligned_government = yes
				has_nationalist_goverment = yes
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_integrate_azov"
			load_oob = "UKR_Azov_guard"
		}

		ai_will_do = { factor = 10 }
	}

	UKR_invest_into_territorial_defense = {
		days_re_enable = 120
		fire_only_once = no

		visible = {
			has_war = no
			NOT = { has_country_flag = Has_Terr_Def }
			OR = {
				NOT = { has_variable = Amount_of_ter_brigades }
				# 25 in total
				check_variable = { Amount_of_ter_brigades < 26 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_invest_into_territorial_defense"
			set_temp_variable = { treasury_change = -2 }
			modify_treasury_effect = yes
			custom_effect_tooltip = UKR_Invest_into_TRO_TT
			if = {
				limit = { has_variable = Amount_of_ter_brigades }
				add_to_variable = { Amount_of_ter_brigades = 1 }
			}
			else = {
				set_variable = { Amount_of_ter_brigades = 1 }
			}
		}

		ai_will_do = { factor = 10 }
	}

	UKR_deploy_territorial_defense = {
		fire_only_once = no

		visible = {
			has_war = yes
			NOT = { has_country_flag = Has_Terr_Def }
			check_variable = { Amount_of_ter_brigades > 0 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_deploy_territorial_defense"
			set_country_flag = Has_Terr_Def
			division_template = {
				name = "Bryhada TRO"
				is_locked = yes
				regiments = {
					L_Inf_Bat = { x = 0 y = 0 }
					L_Inf_Bat = { x = 0 y = 1 }
					L_Inf_Bat = { x = 0 y = 2 }
					L_Inf_Bat = { x = 0 y = 3 }
				}
				support = {
					L_Engi_Comp = { x = 0 y = 0 }
					Arty_Battery = { x = 0 y = 1 }
				}
			}
			capital_scope = {
				create_unit = {
					division = "name =\"Bryhada TRO\" division_template = \"Bryhada TRO\" start_experience_factor = 0.3 start_equipment_factor =  1.0"
					owner = UKR
					count = Amount_of_ter_brigades
				}
			}
		}

		ai_will_do = { factor = 100 }
	}

	UKR_disband_tro = {
		fire_only_once = no

		visible = {
			has_war = no
			has_country_flag = Has_Terr_Def
			check_variable = { Amount_of_ter_brigades > 0 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_deploy_territorial_defense"
			delete_unit_template_and_units = { division_template = "Bryhada TRO" }
		}

		ai_will_do = { factor = 100 }
	}
}

UKR_russian_bootlickers = {
	UKR_channel_military_money = {
		icon = GFX_decision_eng_propaganda_campaigns
		days_re_enable = 120
		fire_only_once = no
		cost = 25

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_reform_army"
			SOV = { country_event = ukraine_md.20 }
		}

		ai_will_do = {
			factor = 5
			modifier = {
				check_variable = { debt_ratio > 1 }
				add = 5
			}
			modifier = {
				check_variable = { debt_ratio < 0.5 }
				add = -5
			}
		}
	}

	UKR_buy_old_stuff = {
		days_remove = 200
		days_re_enable = 30
		fire_only_once = no

		custom_cost_text = cost_5_0
		custom_cost_trigger = {
			check_variable = { treasury > 4.99 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_buy_old_stuff"
			set_temp_variable = { treasury_change = -5 }
			modify_treasury_effect = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove UKR_buy_old_stuff"
			add_equipment_to_stockpile = {
				type = infantry_weapons1
				amount = 1000
				producer = SOV
			}
			add_equipment_to_stockpile = {
				type = command_control_equipment
				amount = 100
				producer = SOV
			}

			if = {
				limit = { has_dlc = "No Step Back" }
				add_equipment_to_stockpile = {
					type = apc_hull_0
					variant_name = "BTR-70"
					amount = 50
					producer = SOV
				}
			}
			else = {
				add_equipment_to_stockpile = {
					type = APC_1
					amount = 50
					producer = SOV
				}
			}
		}

		ai_will_do = {
			factor = 5
			modifier = {
				check_variable = { debt_ratio > 1 }
				add = -5
			}
			modifier = {
				check_variable = { debt_ratio < 0.5 }
				add = 5
			}
		}
	}

	UKR_negotiate_cheap_gas = {
		days_re_enable = 365
		fire_only_once = no
		cost = 100

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_negotiate_cheap_gas"
			add_timed_idea = {
				idea = UKR_cheap_russian_gas
				days = 360
			}

			set_temp_variable = { percent_change = 5 }
			set_temp_variable = { tag_index = SOV.id }
			set_temp_variable = { influence_target = UKR.id }
			change_influence_percentage = yes
		}

		ai_will_do = {
			factor = 20
		}
	}
}

UKR_Donbass_war_category = {
	start_attack_on_Donetsk_oblast_from_Donetsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 693
			NOT = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_oblast_from_Donetsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_oblast_from_Donetsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 693
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Luhansk_from_Donetsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1075
			}
		}

		visible = {
			controls_state = 693
			NOT = { controls_state = 1075 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Luhansk_from_Donetsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Luhansk_from_Donetsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1075
						defender = 693
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Luhansk_oblast_from_Luhansk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 1075
			NOT = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Luhansk_oblast_from_Luhansk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Luhansk_oblast_from_Luhansk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 1075
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Luhansk_oblast_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 1030
			NOT = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Luhansk_oblast_from_Donetsk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Luhansk_oblast_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kharkiv_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1030
			NOT = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kharkiv_from_Donetsk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kharkiv_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 1
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kharkiv_from_Luhansk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1076
			NOT = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kharkiv_from_Luhansk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kharkiv_from_Luhansk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Zaporizha_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1030
			NOT = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Zaporizha_from_Donetsk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Zaporizha_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Zaporizha_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1087
			NOT = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Zaporizha_from_Dnepropetrovsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Zaporizha_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 1030
			NOT = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 1
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Dnepropetrovsk_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 696
			NOT = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Dnepropetrovsk_from_Kharkiv"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Dnepropetrovsk_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kherson_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			controls_state = 1087
			NOT = { controls_state = 1085 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kherson_from_Dnepropetrovsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kherson_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1085
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kherson_from_Zaporize = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			controls_state = 694
			NOT = { controls_state = 1085 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kherson_from_Zaporize"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kherson_from_Zaporize"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1085
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	# reverse
	start_attack_on_Donetsk_from_Donetsk_oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 693
			}
		}

		visible = {
			controls_state = 1030
			NOT = { controls_state = 693 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_from_Donetsk_oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_from_Donetsk_oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 693
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Donetsk_from_Luhansk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 693
			}
		}

		visible = {
			controls_state = 1075
			NOT = { controls_state = 693 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_from_Luhansk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_from_Luhansk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 693
						defender = 1075
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Luhansk_from_Luhansk_oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1075
			}
		}

		visible = {
			controls_state = 1076
			NOT = { controls_state = 1075 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Luhansk_from_Luhansk_oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Luhansk_from_Luhansk_oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1075
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Donetsk_oblast_from_Luhansk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 1076
			NOT = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_oblast_from_Luhansk_Oblast"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_oblast_from_Luhansk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Donetsk_Oblast_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 696
			NOT = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_Oblast_from_Kharkiv"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_Oblast_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 1
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Luhansk_Oblast_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 696
			NOT = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Luhansk_Oblast_from_Kharkiv"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Luhansk_Oblast_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Donetsk_Oblast_from_Zaporiza = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 694
			NOT = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_Oblast_from_Zaporiza"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_Oblast_from_Zaporiza"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Dnepropetrovsk_from_Zaporizha = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 694
			NOT = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Dnepropetrovsk_from_Zaporizha"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Dnepropetrovsk_from_Zaporizha"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 1087
			NOT = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 1
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kharkiv_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1087
			NOT = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kharkiv_from_Dnepropetrovsk"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kharkiv_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Dnepropetrovsk_from_Kherson = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 1085
			NOT = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Dnepropetrovsk_from_Kherson"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Dnepropetrovsk_from_Kherson"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 1085
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Zaporize_from_Kherson = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1085
			NOT = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Zaporize_from_Kherson"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Zaporize_from_Kherson"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1085
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	# Ukr only
	start_attack_on_Kherson_from_Mykolaiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			controls_state = 1086
			NOT = { controls_state = 1085 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kherson_from_Mykolaiv"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kherson_from_Mykolaiv"
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = 1086
					num_provinces = 2
					on_win = ukraine_donbass_war.1
					on_lose = ukraine_donbass_war.2
					on_cancel = ukraine_donbass_war.3
				}
				defender = {
					state = 1085
					num_provinces = 4
					on_win = ukraine_donbass_war.5
					on_lose = ukraine_donbass_war.4
					on_cancel = ukraine_donbass_war.6
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Dnepropetrovsk_from_Poltava = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 1089
			NOT = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Dnepropetrovsk_from_Poltava"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Dnepropetrovsk_from_Poltava"
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = 1089
					num_provinces = 3
					on_win = ukraine_donbass_war.1
					on_lose = ukraine_donbass_war.2
					on_cancel = ukraine_donbass_war.3
				}
				defender = {
					state = 1087
					num_provinces = 3
					on_win = ukraine_donbass_war.5
					on_lose = ukraine_donbass_war.4
					on_cancel = ukraine_donbass_war.6
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	start_attack_on_Kharkiv_from_Poltava = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1089
			NOT = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision start_attack_on_Kharkiv_from_Poltava"
			if = {
				limit = { tag = UKR }
				add_stability = -0.01
				add_war_support = -0.01
			}
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove start_attack_on_Kharkiv_from_Poltava"
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = 1089
					num_provinces = 2
					on_win = ukraine_donbass_war.1
					on_lose = ukraine_donbass_war.2
					on_cancel = ukraine_donbass_war.3
				}
				defender = {
					state = 696
					num_provinces = 4
					on_win = ukraine_donbass_war.5
					on_lose = ukraine_donbass_war.4
					on_cancel = ukraine_donbass_war.6
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				DPR = { check_variable = { num_controlled_states < 2 } }
				LPR = { check_variable = { num_controlled_states < 2 } }
			}
		}
	}

	# Getting territory
	grab_Kherson = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1086
				controls_state = 694
			}

			NOT = { controls_state = 1085 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_Kherson"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_Kherson"
			transfer_state = 1085
		}

		ai_will_do = { factor = 10 }
	}

	grab_Dnipro = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			OR = {
				controls_state = 1085
				controls_state = 1086
				controls_state = 1090
				controls_state = 1089
				controls_state = 696
				controls_state = 694
				controls_state = 1030
			}

			NOT = { controls_state = 1087 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_Dnipro"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_Dnipro"
			transfer_state = 1087
		}

		ai_will_do = { factor = 10 }
	}

	grab_Zapor = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1085
				controls_state = 1030
			}

			NOT = { controls_state = 694 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_Zapor"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_Zapor"
			transfer_state = 694
		}

		ai_will_do = { factor = 10 }
	}

	grab_Kharkiv = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1088
				controls_state = 1089
				controls_state = 1030
				controls_state = 1076
			}

			NOT = { controls_state = 696 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_Kharkiv"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_Kharkiv"
			transfer_state = 696
		}

		ai_will_do = { factor = 10 }
	}

	grab_DonObl = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			OR = {
				controls_state = 696
				controls_state = 694
				controls_state = 1087
				controls_state = 1076
				controls_state = 1075
				controls_state = 693
			}

			NOT = { controls_state = 1030 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_DonObl"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_DonObl"
			transfer_state = 1030
		}

		ai_will_do = { factor = 10 }
	}

	grab_LuhObl = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			OR = {
				controls_state = 696
				controls_state = 1030
				controls_state = 1075
			}

			NOT = { controls_state = 1076 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision grab_LuhObl"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove grab_LuhObl"
			transfer_state = 1076
		}

		ai_will_do = { factor = 10 }
	}

	# Critical stuff
	finish_nov = {
		days_remove = 50
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 693
			}
		}

		visible = {
			controls_state = 1030
			controls_state = 1076
			NOT = { controls_state = 1075 }
			NOT = { controls_state = 693 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
			DPR = {
				check_variable = { num_of_controlled_states < 2 }
			}
			LPR = {
				check_variable = { num_of_controlled_states < 2 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision finish_nov"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
			custom_effect_tooltip = russia_will_be_angry_TT
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove finish_nov"
			if = {
				limit = { country_exists = SOV }
				SOV = { country_event = ukraine_donbass_war.7 }
			}
			else = {
				UKR = {
					if = {
						limit = { country_exists = DPR }
						annex_country = {
							target = DPR
							transfer_troops = no
						}
					}
					if = {
						limit = { country_exists = LPR }
						annex_country = {
							target = LPR
							transfer_troops = no
						}
					}
					if = {
						limit = { country_exists = NOV }
						annex_country = {
							target = NOV
							transfer_troops = no
						}
					}
					country_event = { id = ukraine_revolution.3 days = 1 }
				}
			}
		}

		ai_will_do = {
			factor = 2
			modifier = {
				factor = 0
				OR = {
					has_idea = UKR_military_state_6
					has_idea = UKR_military_state_5
					has_idea = UKR_military_state_4
					has_idea = UKR_military_state_3
				}
			}
			modifier = {
				add = -2
				strength_ratio = {
					tag = SOV
					ratio > 1.4
				}
			}
			modifier = {
				add = 5
				OR = {
					NOT = { country_exists = SOV }
					SOV = {
						has_western_aligned_government = yes
					}
				}
			}
		}
	}

	# Ukraine veterans
	ukr_veterans = {
		days_remove = 50
		days_re_enable = 200
		fire_only_once = yes

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_49_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 49 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision ukr_veterans"
			add_war_support = 0.05
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove ukr_veterans"
			subtract_from_variable = { Donbass_war_progress = 50 }
			add_ideas = UKR_veteran_movement
		}

		ai_will_do = { factor = 10 }
	}
}

NOV_Donbass_war_category = {
	nv_start_attack_on_Donetsk_oblast_from_Donetsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 693
			UKR = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_oblast_from_Donetsk"
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_oblast_from_Donetsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 693
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Luhansk_from_Donetsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1075
			}
		}

		visible = {
			controls_state = 693
			UKR = { controls_state = 1075 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Luhansk_from_Donetsk"
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Luhansk_from_Donetsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1075
						defender = 693
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Luhansk_oblast_from_Luhansk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 1075
			UKR = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Luhansk_oblast_from_Luhansk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Luhansk_oblast_from_Luhansk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 1075
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Luhansk_oblast_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 1030
			UKR = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Luhansk_oblast_from_Donetsk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Luhansk_oblast_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Kharkiv_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1030
			UKR = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Kharkiv_from_Donetsk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Kharkiv_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 1
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Kharkiv_from_Luhansk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1076
			UKR = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Kharkiv_from_Luhansk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Kharkiv_from_Luhansk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Zaporizha_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1030
			UKR = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Zaporizha_from_Donetsk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Zaporizha_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Zaporizha_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1087
			UKR = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Zaporizha_from_Dnepropetrovsk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Zaporizha_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 1030
			UKR = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Dnepropetrovsk_from_Donetsk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 1
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Dnepropetrovsk_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 696
			UKR = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Dnepropetrovsk_from_Kharkiv"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Dnepropetrovsk_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Kherson_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			controls_state = 1087
			UKR = { controls_state = 1085 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Kherson_from_Dnepropetrovsk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Kherson_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1085
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Kherson_from_Zaporize = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			controls_state = 694
			UKR = { controls_state = 1085 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Kherson_from_Zaporize"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Kherson_from_Zaporize"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1085
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	# reverse
	nv_start_attack_on_Donetsk_from_Donetsk_oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 693
			}
		}

		visible = {
			controls_state = 1030
			UKR = { controls_state = 693 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_from_Donetsk_oblast"
			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_from_Donetsk_oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 693
						defender = 1030
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1030
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Donetsk_from_Luhansk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 693
			}
		}

		visible = {
			controls_state = 1075
			UKR = { controls_state = 693 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_from_Luhansk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_from_Luhansk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 693
						defender = 1075
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 693
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Luhansk_from_Luhansk_oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1075
			}
		}

		visible = {
			controls_state = 1076
			UKR = { controls_state = 1075 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Luhansk_from_Luhansk_oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Luhansk_from_Luhansk_oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1075
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1075
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Donetsk_oblast_from_Luhansk_Oblast = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 1076
			UKR = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_oblast_from_Luhansk_Oblast"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_oblast_from_Luhansk_Oblast"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 1076
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Donetsk_Oblast_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 696
			UKR = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_Oblast_from_Kharkiv"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_Oblast_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 1
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Luhansk_Oblast_from_Kharkiv = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			controls_state = 696
			UKR = { controls_state = 1076 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Luhansk_Oblast_from_Kharkiv"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Luhansk_Oblast_from_Kharkiv"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1076
						defender = 696
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1076
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Donetsk_Oblast_from_Zaporiza = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 694
			UKR = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_Oblast_from_Zaporiza"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_Oblast_from_Zaporiza"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Dnepropetrovsk_from_Zaporizha = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 694
			UKR = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Dnepropetrovsk_from_Zaporizha"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Dnepropetrovsk_from_Zaporizha"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 694
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 694
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			controls_state = 1087
			UKR = { controls_state = 1030 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Donetsk_Oblast_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1030
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 1
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1030
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Kharkiv_from_Dnepropetrovsk = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			controls_state = 1087
			UKR = { controls_state = 696 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Kharkiv_from_Dnepropetrovsk"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Kharkiv_from_Dnepropetrovsk"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 696
						defender = 1087
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1087
						num_provinces = 4
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 696
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Dnepropetrovsk_from_Kherson = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			controls_state = 1085
			UKR = { controls_state = 1087 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Dnepropetrovsk_from_Kherson"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Dnepropetrovsk_from_Kherson"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 1087
						defender = 1085
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 1087
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	nv_start_attack_on_Zaporize_from_Kherson = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			controls_state = 1085
			UKR = { controls_state = 694 }
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_start_attack_on_Zaporize_from_Kherson"

			set_country_flag = Attacking_in_Donbass
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = not_attacking_on_donbass_TT
				NOT = { has_country_flag = Attacking_in_Donbass }
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_start_attack_on_Zaporize_from_Kherson"
			if = {
				limit = {
					has_border_war_between = {
						attacker = 694
						defender = 1085
					}
				}

				country_event = ukraine_donbass_war.8
			}
			else = {
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = 1085
						num_provinces = 3
						on_win = ukraine_donbass_war.1
						on_lose = ukraine_donbass_war.2
						on_cancel = ukraine_donbass_war.3
					}
					defender = {
						state = 694
						num_provinces = 2
						on_win = ukraine_donbass_war.5
						on_lose = ukraine_donbass_war.4
						on_cancel = ukraine_donbass_war.6
					}
				}
			}
		}

		ai_will_do = {
			factor = 3
			modifier = {
				factor = 0
				num_of_controlled_states < 2
			}
		}
	}

	# Getting territory
	nv_grab_Kherson = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1085
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1086
				controls_state = 694
			}

			UKR = { controls_state = 1085 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_Kherson"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_Kherson"
			transfer_state = 1085
		}

		ai_will_do = { factor = 10 }
	}

	nv_grab_Dnipro = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1087
			}
		}

		visible = {
			OR = {
				controls_state = 1085
				controls_state = 1086
				controls_state = 1090
				controls_state = 1089
				controls_state = 696
				controls_state = 694
				controls_state = 1030
			}

			UKR = { controls_state = 1087 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_Dnipro"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_Dnipro"
			transfer_state = 1087
		}

		ai_will_do = { factor = 10 }
	}

	nv_grab_Zapor = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 694
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1085
				controls_state = 1030
			}

			UKR = { controls_state = 694 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_Zapor"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_Zapor"
			transfer_state = 694
		}

		ai_will_do = { factor = 10 }
	}

	nv_grab_Kharkiv = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 696
			}
		}

		visible = {
			OR = {
				controls_state = 1087
				controls_state = 1088
				controls_state = 1089
				controls_state = 1030
				controls_state = 1076
			}

			UKR = { controls_state = 696 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_Kharkiv"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_Kharkiv"
			transfer_state = 696
		}

		ai_will_do = { factor = 10 }
	}

	nv_grab_DonObl = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1030
			}
		}

		visible = {
			OR = {
				controls_state = 696
				controls_state = 694
				controls_state = 1087
				controls_state = 1076
				controls_state = 1075
				controls_state = 693
			}

			UKR = { controls_state = 1030 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_DonObl"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_DonObl"
			transfer_state = 1030
		}

		ai_will_do = { factor = 10 }
	}

	nv_grab_LuhObl = {
		days_remove = 10
		days_re_enable = 200
		fire_only_once = no

		highlight_states = {
			highlight_states_trigger = {
				state = 1076
			}
		}

		visible = {
			OR = {
				controls_state = 696
				controls_state = 1030
				controls_state = 1075
			}

			UKR = { controls_state = 1076 }
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = more_then_79_Donbass_progress_TT
				check_variable = { Donbass_war_progress > 79 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision nv_grab_LuhObl"
			add_stability = 0.03
			add_war_support = 0.05
			subtract_from_variable = { Donbass_war_progress = 80 }
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove nv_grab_LuhObl"
			transfer_state = 1076
		}

		ai_will_do = { factor = 10 }
	}
}

NOV_Donbass_war_help = {
	NOV_smuggle_old_weapons = {
		days_remove = 60
		days_re_enable = 30
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision NOV_smuggle_old_weapons"
			set_temp_variable = { percent_change = 3 }
			set_temp_variable = { tag_index = SOV.id }
			set_temp_variable = { influence_target = NOV.id }
			change_influence_percentage = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove NOV_smuggle_old_weapons"
			add_equipment_to_stockpile = {
				type = infantry_weapons1
				amount = 100
				producer = SOV
			}
			add_equipment_to_stockpile = {
				type = command_control_equipment
				amount = 20
				producer = SOV
			}
			if = {
				limit = { has_dlc = "No Step Back" }
				add_equipment_to_stockpile = {
					type = apc_hull_0
					variant_name = "BTR-70"
					amount = 10
					producer = SOV
				}
				add_equipment_to_stockpile = {
					type = ifv_hull_0
					variant_name = "BMP-1"
					amount = 10
					producer = SOV
				}
				add_equipment_to_stockpile = {
					type = mbt_hull_1
					variant_name = "T-72B"
					amount = 3
					producer = SOV
				}
			}
			else = {
				add_equipment_to_stockpile = {
					type = APC_2
					amount = 10
					producer = SOV
				}
				add_equipment_to_stockpile = {
					type = IFV_2
					amount = 10
					producer = SOV
				}
				add_equipment_to_stockpile = {
					type = MBT_2
					amount = 3
					producer = SOV
				}
			}
		}

		ai_will_do = {
			factor = 2
			modifier = {
				has_equipment = { Inf_equipment > 1000 }
				factor = 0
			}
			modifier = {
				has_equipment = { Inf_equipment < 100 }
				add = 5
			}
		}
	}

	NOV_hire_russian_advisors = {
		days_remove = 10
		days_re_enable = 100
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision NOV_hire_russian_advisors"
			set_temp_variable = { percent_change = 5 }
			set_temp_variable = { tag_index = SOV.id }
			set_temp_variable = { influence_target = NOV.id }
			change_influence_percentage = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove NOV_hire_russian_advisors"
			add_timed_idea = {
				idea = NOV_russian_advisors
				days = 90
			}
		}

		ai_will_do = {
			factor = 2
		}
	}

	NOV_get_russian_volunteers = {
		days_remove = 30
		days_re_enable = 100
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision NOV_hire_russian_advisors"
			set_temp_variable = { percent_change = 2 }
			set_temp_variable = { tag_index = SOV.id }
			set_temp_variable = { influence_target = NOV.id }
			change_influence_percentage = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Remove NOV_hire_russian_advisors"
			add_manpower = 1000
		}

		ai_will_do = {
			factor = 5
			modifier = {
				has_manpower > 3000
				factor = 0
			}
		}
	}
}

UKR_Donbass_peace_category = {
	UKR_peace_in_Donbass = {
		icon = GFX_decision_eng_propaganda_campaigns
		fire_only_once = yes
		cost = 300

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision UKR_peace_in_Donbass"
			SOV = { country_event = ukraine_donbass_war.9 }
		}

		ai_will_do = { factor = 10 }
	}
}
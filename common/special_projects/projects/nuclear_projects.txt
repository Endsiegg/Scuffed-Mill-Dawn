# Author(s): AngriestBird
# Nuclear Missile Configurations
# Nuclear Missiles require you to have Gotterdammerung due to their requirements on the new missiles
sp_nuclear_warhead_program = {
	allowed = { has_dlc = "Gotterdammerung" }
	specialization = specialization_nuclear

	project_tags = sp_tag_nuclear_weapons

	visible = {
		FROM = {
			has_tech = ballistic_missile
			has_tech = reactor1
		}
	}

	available = {
		FROM = {
			has_tech = ballistic_missile
			has_tech = reactor1
		}
	}

	breakthrough_cost = {
		specialization_nuclear = 1
	}

	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.large

	project_output = {
		country_effects = {
			set_country_flag = NPROG_completed
			custom_effect_tooltip = sp_nuclear_warhead_program_tt
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_infantry_tech_1
		sp_land_generic_reward_infantry_tech_2
		sp_land_generic_reward_infantry_tech_3
		sp_land_generic_reward_resource_scarcity
		sp_land_generic_reward_critical_failure
	}

	unique_prototype_rewards = {
		sp_improved_nuclear_ballistic_warhead_delivery_systems = {
			fire_only_once = yes

			threshold = {
				min = 0
				max = 100
			}

			weight = {
				base = 1
			}

			option = {
				token = sp_improved_nuclear_ballistic_warhead_delivery_systems_option

				iteration_output = {
					equipment_bonus = {
						nuclear_ballistic_missile_equipment = {
							air_range = 300
						}
						nuclear_missile_equipment = {
							air_range = 300
						}
					}

					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
						}
					}
				}
			}
		}
	}

	ai_will_do = {
		base = 1
	}
}
